/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { Linker } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ServiceLinkerManagementClient } from "../serviceLinkerManagementClient";
import {
  LinkerListConfigurationsOptionalParams,
  LinkerListConfigurationsResponse
} from "../models";

/** Class containing Linker operations. */
export class LinkerImpl implements Linker {
  private readonly client: ServiceLinkerManagementClient;

  /**
   * Initialize a new instance of the class Linker class.
   * @param client Reference to the service client
   */
  constructor(client: ServiceLinkerManagementClient) {
    this.client = client;
  }

  /**
   * list source configurations for a linker.
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource to be
   *                    connected.
   * @param linkerName The name Linker resource.
   * @param options The options parameters.
   */
  listConfigurations(
    resourceUri: string,
    linkerName: string,
    options?: LinkerListConfigurationsOptionalParams
  ): Promise<LinkerListConfigurationsResponse> {
    return this.client.sendOperationRequest(
      { resourceUri, linkerName, options },
      listConfigurationsOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listConfigurationsOperationSpec: coreClient.OperationSpec = {
  path:
    "/{resourceUri}/providers/Microsoft.ServiceLinker/linkers/{linkerName}/listConfigurations",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.SourceConfigurationResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.resourceUri,
    Parameters.linkerName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
