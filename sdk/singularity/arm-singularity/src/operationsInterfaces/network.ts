/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  NetworkResourceDescription,
  NetworkListByAccountOptionalParams,
  NetworkCreateOrUpdateOptionalParams,
  NetworkCreateOrUpdateResponse,
  NetworkUpdateOptionalParams,
  NetworkUpdateResponse,
  NetworkGetOptionalParams,
  NetworkGetResponse,
  NetworkDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Network. */
export interface Network {
  /**
   * Gets information about all network resources in a given account.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param options The options parameters.
   */
  listByAccount(
    resourceGroupName: string,
    accountName: string,
    options?: NetworkListByAccountOptionalParams
  ): PagedAsyncIterableIterator<NetworkResourceDescription>;
  /**
   * Creates a network resource with the specified name and properties. If a network resource with the
   * same name exists, then it is updated with the specified properties.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param networkResourceName The name of the Singularity network resource.
   * @param body Singularity network information.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    accountName: string,
    networkResourceName: string,
    body: NetworkResourceDescription,
    options?: NetworkCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<NetworkCreateOrUpdateResponse>,
      NetworkCreateOrUpdateResponse
    >
  >;
  /**
   * Creates a network resource with the specified name and properties. If a network resource with the
   * same name exists, then it is updated with the specified properties.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param networkResourceName The name of the Singularity network resource.
   * @param body Singularity network information.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    networkResourceName: string,
    body: NetworkResourceDescription,
    options?: NetworkCreateOrUpdateOptionalParams
  ): Promise<NetworkCreateOrUpdateResponse>;
  /**
   * If a network resource with the same name exists, then it is updated with the specified properties.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param networkResourceName The name of the Singularity network resource.
   * @param body Singularity network information.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    accountName: string,
    networkResourceName: string,
    body: NetworkResourceDescription,
    options?: NetworkUpdateOptionalParams
  ): Promise<
    PollerLike<PollOperationState<NetworkUpdateResponse>, NetworkUpdateResponse>
  >;
  /**
   * If a network resource with the same name exists, then it is updated with the specified properties.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param networkResourceName The name of the Singularity network resource.
   * @param body Singularity network information.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    networkResourceName: string,
    body: NetworkResourceDescription,
    options?: NetworkUpdateOptionalParams
  ): Promise<NetworkUpdateResponse>;
  /**
   * Gets information about the network resource with the given name.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param networkResourceName The name of the Singularity network resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    networkResourceName: string,
    options?: NetworkGetOptionalParams
  ): Promise<NetworkGetResponse>;
  /**
   * Deletes the network resource identified by the name.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param networkResourceName The name of the Singularity network resource.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    networkResourceName: string,
    options?: NetworkDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the network resource identified by the name.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param networkResourceName The name of the Singularity network resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    networkResourceName: string,
    options?: NetworkDeleteOptionalParams
  ): Promise<void>;
}
