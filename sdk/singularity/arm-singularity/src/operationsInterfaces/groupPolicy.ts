/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  GroupPolicyResourceDescription,
  GroupPolicyListByAccountOptionalParams,
  GroupPolicyCreateOrUpdateOptionalParams,
  GroupPolicyCreateOrUpdateResponse,
  GroupPolicyResourcePatchDescription,
  GroupPolicyUpdateOptionalParams,
  GroupPolicyUpdateResponse,
  GroupPolicyGetOptionalParams,
  GroupPolicyGetResponse,
  GroupPolicyDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a GroupPolicy. */
export interface GroupPolicy {
  /**
   * Get all group policy resources in an account. The information include the description and other
   * properties of the resource.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param options The options parameters.
   */
  listByAccount(
    resourceGroupName: string,
    accountName: string,
    options?: GroupPolicyListByAccountOptionalParams
  ): PagedAsyncIterableIterator<GroupPolicyResourceDescription>;
  /**
   * Creates a group policy resource with the specified name, description and properties. If a resource
   * with the same name exists, then it is updated with the specified description and properties.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param policyName The name of the Singularity account quota policy. Should only be Default.
   * @param body Singularity group policy quota limit information.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    accountName: string,
    policyName: string,
    body: GroupPolicyResourceDescription,
    options?: GroupPolicyCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<GroupPolicyCreateOrUpdateResponse>,
      GroupPolicyCreateOrUpdateResponse
    >
  >;
  /**
   * Creates a group policy resource with the specified name, description and properties. If a resource
   * with the same name exists, then it is updated with the specified description and properties.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param policyName The name of the Singularity account quota policy. Should only be Default.
   * @param body Singularity group policy quota limit information.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    policyName: string,
    body: GroupPolicyResourceDescription,
    options?: GroupPolicyCreateOrUpdateOptionalParams
  ): Promise<GroupPolicyCreateOrUpdateResponse>;
  /**
   * If a resource with the same name exists, then it is updated with the specified description and
   * properties.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param policyName The name of the Singularity account quota policy. Should only be Default.
   * @param body Singularity group policy quota limit information.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    accountName: string,
    policyName: string,
    body: GroupPolicyResourcePatchDescription,
    options?: GroupPolicyUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<GroupPolicyUpdateResponse>,
      GroupPolicyUpdateResponse
    >
  >;
  /**
   * If a resource with the same name exists, then it is updated with the specified description and
   * properties.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param policyName The name of the Singularity account quota policy. Should only be Default.
   * @param body Singularity group policy quota limit information.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    policyName: string,
    body: GroupPolicyResourcePatchDescription,
    options?: GroupPolicyUpdateOptionalParams
  ): Promise<GroupPolicyUpdateResponse>;
  /**
   * Get a group policy resource with the specified name. The information include the description and
   * other properties of the resource.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param policyName The name of the Singularity account quota policy. Should only be Default.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    policyName: string,
    options?: GroupPolicyGetOptionalParams
  ): Promise<GroupPolicyGetResponse>;
  /**
   * Deletes a group policy resource with the specified name.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param policyName The name of the Singularity account quota policy. Should only be Default.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    policyName: string,
    options?: GroupPolicyDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a group policy resource with the specified name.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param policyName The name of the Singularity account quota policy. Should only be Default.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    policyName: string,
    options?: GroupPolicyDeleteOptionalParams
  ): Promise<void>;
}
