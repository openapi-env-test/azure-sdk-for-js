/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  JobResourceDescription,
  JobListByAccountOptionalParams,
  JobCreateOrUpdateOptionalParams,
  JobCreateOrUpdateResponse,
  JobResourcePatchDescription,
  JobUpdateOptionalParams,
  JobUpdateResponse,
  JobGetOptionalParams,
  JobGetResponse,
  JobDeleteOptionalParams,
  JobApproveOptionalParams,
  JobCreateSasTokenOptionalParams,
  JobCreateSasTokenResponse,
  JobRenewKeyOptionalParams,
  JobRenewKeyResponse,
  JobSuspendOptionalParams,
  JobResumeOptionalParams,
  JobCancelOptionalParams,
  JobRemoveOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Job. */
export interface Job {
  /**
   * Gets the information about all the job resources in a given account. The information include the
   * description and other properties of the job.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param options The options parameters.
   */
  listByAccount(
    resourceGroupName: string,
    accountName: string,
    options?: JobListByAccountOptionalParams
  ): PagedAsyncIterableIterator<JobResourceDescription>;
  /**
   * Creates a job resource with the specified name, description and properties. If a job with the same
   * name exists, then it is updated with the specified description and properties.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param body Singularity job information.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    body: JobResourceDescription,
    options?: JobCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<JobCreateOrUpdateResponse>,
      JobCreateOrUpdateResponse
    >
  >;
  /**
   * Creates a job resource with the specified name, description and properties. If a job with the same
   * name exists, then it is updated with the specified description and properties.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param body Singularity job information.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    body: JobResourceDescription,
    options?: JobCreateOrUpdateOptionalParams
  ): Promise<JobCreateOrUpdateResponse>;
  /**
   * Updates a job resource with the specified properties. If a job with the same name exists, then it is
   * updated with the specified properties. If a job doesn't exist, then a no-content exception will be
   * thrown
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param body Singularity job information.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    body: JobResourcePatchDescription,
    options?: JobUpdateOptionalParams
  ): Promise<
    PollerLike<PollOperationState<JobUpdateResponse>, JobUpdateResponse>
  >;
  /**
   * Updates a job resource with the specified properties. If a job with the same name exists, then it is
   * updated with the specified properties. If a job doesn't exist, then a no-content exception will be
   * thrown
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param body Singularity job information.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    body: JobResourcePatchDescription,
    options?: JobUpdateOptionalParams
  ): Promise<JobUpdateResponse>;
  /**
   * Gets the information about the job resource with the given name. The information include the
   * description and other properties of the job.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    options?: JobGetOptionalParams
  ): Promise<JobGetResponse>;
  /**
   * Deletes the job resource identified by the name.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    options?: JobDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the job resource identified by the name.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    options?: JobDeleteOptionalParams
  ): Promise<void>;
  /**
   * This action can be used by the account admin to approve a job manually, which is otherwise blocked
   * by insufficient user-level quota (represented by Group Policy).
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param options The options parameters.
   */
  beginApprove(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    options?: JobApproveOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * This action can be used by the account admin to approve a job manually, which is otherwise blocked
   * by insufficient user-level quota (represented by Group Policy).
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param options The options parameters.
   */
  beginApproveAndWait(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    options?: JobApproveOptionalParams
  ): Promise<void>;
  /**
   * Creates a Shared Access Signature (SAS) token, that can be used for accessing job resource with the
   * protocol specified in the description.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param options The options parameters.
   */
  beginCreateSasToken(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    options?: JobCreateSasTokenOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<JobCreateSasTokenResponse>,
      JobCreateSasTokenResponse
    >
  >;
  /**
   * Creates a Shared Access Signature (SAS) token, that can be used for accessing job resource with the
   * protocol specified in the description.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param options The options parameters.
   */
  beginCreateSasTokenAndWait(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    options?: JobCreateSasTokenOptionalParams
  ): Promise<JobCreateSasTokenResponse>;
  /**
   * Renews to the Shared Access Signature (SAS) token singining key for the job. It invalidates all
   * tokens generated prior to key rotation
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param options The options parameters.
   */
  renewKey(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    options?: JobRenewKeyOptionalParams
  ): Promise<JobRenewKeyResponse>;
  /**
   * Suspending a job will stop the current execution and release any resources and quota reservations.
   * The job will remain in the Suspended state until resumed or deleted.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param options The options parameters.
   */
  beginSuspend(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    options?: JobSuspendOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Suspending a job will stop the current execution and release any resources and quota reservations.
   * The job will remain in the Suspended state until resumed or deleted.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param options The options parameters.
   */
  beginSuspendAndWait(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    options?: JobSuspendOptionalParams
  ): Promise<void>;
  /**
   * Resuming a paused job will attempt to return the job into the running state by reserving quota and
   * scheduling execution.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param options The options parameters.
   */
  beginResume(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    options?: JobResumeOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Resuming a paused job will attempt to return the job into the running state by reserving quota and
   * scheduling execution.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param options The options parameters.
   */
  beginResumeAndWait(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    options?: JobResumeOptionalParams
  ): Promise<void>;
  /**
   * Cancel the job operation without deleting the resource.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param options The options parameters.
   */
  beginCancel(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    options?: JobCancelOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Cancel the job operation without deleting the resource.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param options The options parameters.
   */
  beginCancelAndWait(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    options?: JobCancelOptionalParams
  ): Promise<void>;
  /**
   * Remove job operation is used to delete a job that is associated with a group policy.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param options The options parameters.
   */
  beginRemove(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    options?: JobRemoveOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Remove job operation is used to delete a job that is associated with a group policy.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param jobName The name of the Singularity job.
   * @param options The options parameters.
   */
  beginRemoveAndWait(
    resourceGroupName: string,
    accountName: string,
    jobName: string,
    options?: JobRemoveOptionalParams
  ): Promise<void>;
}
