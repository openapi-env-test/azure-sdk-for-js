/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  AccountResourceDescription,
  AccountListByResourceGroupOptionalParams,
  AccountListBySubscriptionOptionalParams,
  AccountCreateOrUpdateOptionalParams,
  AccountCreateOrUpdateResponse,
  AccountResourcePatchDescription,
  AccountUpdateOptionalParams,
  AccountUpdateResponse,
  AccountGetOptionalParams,
  AccountGetResponse,
  AccountDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Account. */
export interface Account {
  /**
   * Gets the information about all account resources in a given resource group. The information include
   * the description and other properties of the Account.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: AccountListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<AccountResourceDescription>;
  /**
   * Gets the information about all account resources in a given subscription. The information include
   * the description and other properties of the account.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: AccountListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<AccountResourceDescription>;
  /**
   * Creates an account resource with the specified name, description and properties. If an account
   * resource with the same name exists, then it is updated with the specified description and
   * properties.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param body Singularity account information.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    accountName: string,
    body: AccountResourceDescription,
    options?: AccountCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<AccountCreateOrUpdateResponse>,
      AccountCreateOrUpdateResponse
    >
  >;
  /**
   * Creates an account resource with the specified name, description and properties. If an account
   * resource with the same name exists, then it is updated with the specified description and
   * properties.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param body Singularity account information.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    body: AccountResourceDescription,
    options?: AccountCreateOrUpdateOptionalParams
  ): Promise<AccountCreateOrUpdateResponse>;
  /**
   * If an account resource with the same name exists, then it is updated with the specified description
   * and properties.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param body Singularity account information.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    accountName: string,
    body: AccountResourcePatchDescription,
    options?: AccountUpdateOptionalParams
  ): Promise<
    PollerLike<PollOperationState<AccountUpdateResponse>, AccountUpdateResponse>
  >;
  /**
   * If an account resource with the same name exists, then it is updated with the specified description
   * and properties.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param body Singularity account information.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    body: AccountResourcePatchDescription,
    options?: AccountUpdateOptionalParams
  ): Promise<AccountUpdateResponse>;
  /**
   * Gets the information about the account resource with the given name. The information include the
   * description and other properties of the account.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    options?: AccountGetOptionalParams
  ): Promise<AccountGetResponse>;
  /**
   * Deletes the account resource identified by the name.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    options?: AccountDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the account resource identified by the name.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param accountName The name of the Singularity account.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    options?: AccountDeleteOptionalParams
  ): Promise<void>;
}
