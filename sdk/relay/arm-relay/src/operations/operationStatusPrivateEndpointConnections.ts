/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/operationStatusPrivateEndpointConnectionsMappers";
import * as Parameters from "../models/parameters";
import { RelayManagementClientContext } from "../relayManagementClientContext";

/** Class representing a OperationStatusPrivateEndpointConnections. */
export class OperationStatusPrivateEndpointConnections {
  private readonly client: RelayManagementClientContext;

  /**
   * Create a OperationStatusPrivateEndpointConnections.
   * @param {RelayManagementClientContext} client Reference to the service client.
   */
  constructor(client: RelayManagementClientContext) {
    this.client = client;
  }

  /**
   * Gets the Operation status of private endpoint connection associated with Relay namespace.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param privateEndpointConnectionName The PrivateEndpointConnection name.
   * @param [options] The optional parameters
   * @returns Promise<Models.OperationStatusPrivateEndpointConnectionsGetResponse>
   */
  get(resourceGroupName: string, namespaceName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase): Promise<Models.OperationStatusPrivateEndpointConnectionsGetResponse>;
  /**
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param privateEndpointConnectionName The PrivateEndpointConnection name.
   * @param callback The callback
   */
  get(resourceGroupName: string, namespaceName: string, privateEndpointConnectionName: string, callback: msRest.ServiceCallback<Models.OperationStatusItem>): void;
  /**
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param privateEndpointConnectionName The PrivateEndpointConnection name.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, namespaceName: string, privateEndpointConnectionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationStatusItem>): void;
  get(resourceGroupName: string, namespaceName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OperationStatusItem>, callback?: msRest.ServiceCallback<Models.OperationStatusItem>): Promise<Models.OperationStatusPrivateEndpointConnectionsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        namespaceName,
        privateEndpointConnectionName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.OperationStatusPrivateEndpointConnectionsGetResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/privateEndpointConnections/{privateEndpointConnectionName}/operationStatus/{privateEndpointConnectionName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.namespaceName,
    Parameters.privateEndpointConnectionName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0,
    Parameters.operationType
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.OperationStatusItem
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
