/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { AccessConnectorss } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { AzureDatabricksManagementClient } from "../azureDatabricksManagementClient";
import {
  AccessConnectorssGetOptionalParams,
  AccessConnectorssGetResponse
} from "../models";

/** Class containing AccessConnectorss operations. */
export class AccessConnectorssImpl implements AccessConnectorss {
  private readonly client: AzureDatabricksManagementClient;

  /**
   * Initialize a new instance of the class AccessConnectorss class.
   * @param client Reference to the service client
   */
  constructor(client: AzureDatabricksManagementClient) {
    this.client = client;
  }

  /**
   * Gets an azure databricks accessConnector.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param connectorName The name of the azure databricks accessConnector.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    connectorName: string,
    options?: AccessConnectorssGetOptionalParams
  ): Promise<AccessConnectorssGetResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, connectorName, options },
      getOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/accessConnectors/{connectorName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.AccessConnector
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.connectorName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
