/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  ScanningAccount,
  AzureScanningAccountListBySubscriptionOptionalParams,
  AzureScanningAccountListByResourceGroupOptionalParams,
  AzureScanningAccountCreateOptionalParams,
  AzureScanningAccountCreateResponse,
  AzureScanningAccountUpdateOptionalParams,
  AzureScanningAccountUpdateResponse,
  AzureScanningAccountGetOptionalParams,
  AzureScanningAccountGetResponse,
  AzureScanningAccountDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a AzureScanningAccount. */
export interface AzureScanningAccount {
  /**
   * Lists Scanning Accounts within a subscription
   * @param options The options parameters.
   */
  listBySubscription(
    options?: AzureScanningAccountListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<ScanningAccount>;
  /**
   * List Scanning Accounts within a resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: AzureScanningAccountListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<ScanningAccount>;
  /**
   * Create a Scan Account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Scanning account name
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    accountName: string,
    options?: AzureScanningAccountCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<AzureScanningAccountCreateResponse>,
      AzureScanningAccountCreateResponse
    >
  >;
  /**
   * Create a Scan Account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Scanning account name
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    accountName: string,
    options?: AzureScanningAccountCreateOptionalParams
  ): Promise<AzureScanningAccountCreateResponse>;
  /**
   * Update a Scan Account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Scanning account name
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    accountName: string,
    options?: AzureScanningAccountUpdateOptionalParams
  ): Promise<AzureScanningAccountUpdateResponse>;
  /**
   * Get a Scan Account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Scanning account name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    options?: AzureScanningAccountGetOptionalParams
  ): Promise<AzureScanningAccountGetResponse>;
  /**
   * Delete a Scan Account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Scanning account name
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    options?: AzureScanningAccountDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Delete a Scan Account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Scanning account name
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    options?: AzureScanningAccountDeleteOptionalParams
  ): Promise<void>;
}
