/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * The error code compose of code and message.
 */
export interface ErrorModel {
  /**
   * The code of error.
   */
  code?: string;
  /**
   * The message of error.
   */
  message?: string;
}

/**
 * Git repository property payload
 */
export interface GitPatternRepository {
  /**
   * Name of the repository
   */
  name: string;
  /**
   * Collection of pattern of the repository
   */
  pattern?: string[];
  /**
   * URI of the repository
   */
  uri: string;
  /**
   * Label of the repository
   */
  label?: string;
  /**
   * Searching path of the repository
   */
  searchPaths?: string[];
  /**
   * Username of git repository basic auth.
   */
  username?: string;
  /**
   * Password of git repository basic auth.
   */
  password?: string;
  /**
   * Public sshKey of git repository.
   */
  hostKey?: string;
  /**
   * SshKey algorithm of git repository.
   */
  hostKeyAlgorithm?: string;
  /**
   * Private sshKey algorithm of git repository.
   */
  privateKey?: string;
  /**
   * Strict host key checking or not.
   */
  strictHostKeyChecking?: boolean;
}

/**
 * Property of git.
 */
export interface ConfigServerGitProperty {
  /**
   * Repositories of git.
   */
  repositories?: GitPatternRepository[];
  /**
   * URI of the repository
   */
  uri: string;
  /**
   * Label of the repository
   */
  label?: string;
  /**
   * Searching path of the repository
   */
  searchPaths?: string[];
  /**
   * Username of git repository basic auth.
   */
  username?: string;
  /**
   * Password of git repository basic auth.
   */
  password?: string;
  /**
   * Public sshKey of git repository.
   */
  hostKey?: string;
  /**
   * SshKey algorithm of git repository.
   */
  hostKeyAlgorithm?: string;
  /**
   * Private sshKey algorithm of git repository.
   */
  privateKey?: string;
  /**
   * Strict host key checking or not.
   */
  strictHostKeyChecking?: boolean;
}

/**
 * The settings of config server.
 */
export interface ConfigServerSettings {
  /**
   * Property of git environment.
   */
  gitProperty?: ConfigServerGitProperty;
}

/**
 * Config server git properties payload
 */
export interface ConfigServerProperties {
  /**
   * State of the config server. Possible values include: 'NotAvailable', 'Deleted', 'Failed',
   * 'Succeeded', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: ConfigServerState;
  /**
   * Error when apply config server settings.
   */
  error?: ErrorModel;
  /**
   * Settings of config server.
   */
  configServer?: ConfigServerSettings;
}

/**
 * Trace properties payload
 */
export interface TraceProperties {
  /**
   * State of the trace proxy. Possible values include: 'NotAvailable', 'Failed', 'Succeeded',
   * 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: TraceProxyState;
  /**
   * Error when apply trace proxy changes.
   */
  error?: ErrorModel;
  /**
   * Indicates whether enable the tracing functionality
   */
  enabled?: boolean;
  /**
   * Target application insight instrumentation key
   */
  appInsightInstrumentationKey?: string;
}

/**
 * Service properties payload
 */
export interface ClusterResourceProperties {
  /**
   * Provisioning state of the Service. Possible values include: 'Creating', 'Updating',
   * 'Deleting', 'Deleted', 'Succeeded', 'Failed', 'Moving', 'Moved', 'MoveFailed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Config server git properties of the Service
   */
  configServerProperties?: ConfigServerProperties;
  /**
   * Trace properties of the Service
   */
  trace?: TraceProperties;
  /**
   * Version of the Service
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: number;
  /**
   * ServiceInstanceEntity GUID which uniquely identifies a created resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceId?: string;
}

/**
 * Sku of Azure Spring Cloud
 */
export interface Sku {
  /**
   * Name of the Sku
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Tier of the Sku
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tier?: string;
}

/**
 * The core properties of ARM resources.
 */
export interface Resource extends BaseResource {
  /**
   * Fully qualified resource Id for the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The resource model definition for a ARM tracked top level resource.
 */
export interface TrackedResource extends Resource {
  /**
   * The GEO location of the resource.
   */
  location?: string;
  /**
   * Tags of the service which is a list of key value pairs that describe the resource.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Service resource
 */
export interface ServiceResource extends TrackedResource {
  /**
   * Properties of the Service resource
   */
  properties?: ClusterResourceProperties;
  /**
   * Sku of the Service resource
   */
  sku?: Sku;
}

/**
 * Test keys payload
 */
export interface TestKeys {
  /**
   * Primary key
   */
  primaryKey?: string;
  /**
   * Secondary key
   */
  secondaryKey?: string;
  /**
   * Primary test endpoint
   */
  primaryTestEndpoint?: string;
  /**
   * Secondary test endpoint
   */
  secondaryTestEndpoint?: string;
  /**
   * Indicates whether the test endpoint feature enabled or not
   */
  enabled?: boolean;
}

/**
 * Regenerate test key request payload
 */
export interface RegenerateTestKeyRequestPayload {
  /**
   * Type of the test key. Possible values include: 'Primary', 'Secondary'
   */
  keyType: TestKeyType;
}

/**
 * Temporary disk payload
 */
export interface TemporaryDisk {
  /**
   * Size of the temporary disk in GB
   */
  sizeInGB?: number;
  /**
   * Mount path of the temporary disk
   */
  mountPath?: string;
}

/**
 * Persistent disk payload
 */
export interface PersistentDisk {
  /**
   * Size of the persistent disk in GB
   */
  sizeInGB?: number;
  /**
   * Size of the used persistent disk in GB
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly usedInGB?: number;
  /**
   * Mount path of the persistent disk
   */
  mountPath?: string;
}

/**
 * App resource properties payload
 */
export interface AppResourceProperties {
  /**
   * Indicates whether the App exposes public endpoint
   */
  publicProperty?: boolean;
  /**
   * URL of the App
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * Provisioning state of the App. Possible values include: 'Succeeded', 'Failed', 'Creating',
   * 'Updating', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: AppResourceProvisioningState;
  /**
   * Name of the active deployment of the App
   */
  activeDeploymentName?: string;
  /**
   * Fully qualified dns Name.
   */
  fqdn?: string;
  /**
   * Indicate if only https is allowed.
   */
  httpsOnly?: boolean;
  /**
   * Date time when the resource is created
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdTime?: Date;
  /**
   * Temporary disk settings
   */
  temporaryDisk?: TemporaryDisk;
  /**
   * Persistent disk settings
   */
  persistentDisk?: PersistentDisk;
}

/**
 * An interface representing ManagedIdentityProperties.
 */
export interface ManagedIdentityProperties {
  type?: string;
  principalId?: string;
  tenantId?: string;
}

/**
 * The resource model definition for a ARM proxy resource. It will have everything other than
 * required location and tags.
 */
export interface ProxyResource extends Resource {
}

/**
 * App resource payload
 */
export interface AppResource extends ProxyResource {
  /**
   * Properties of the App resource
   */
  properties?: AppResourceProperties;
  /**
   * The Managed Identity type of the Service resource
   */
  identity?: ManagedIdentityProperties;
  location?: string;
}

/**
 * Resource upload definition payload
 */
export interface ResourceUploadDefinition {
  /**
   * Source relative path
   */
  relativePath?: string;
  /**
   * Upload URL
   */
  uploadUrl?: string;
}

/**
 * Binding resource properties payload
 */
export interface BindingResourceProperties {
  /**
   * The name of the bound resource
   */
  resourceName?: string;
  /**
   * The standard Azure resource type of the bound resource
   */
  resourceType?: string;
  /**
   * The Azure resource id of the bound resource
   */
  resourceId?: string;
  /**
   * The key of the bound resource
   */
  key?: string;
  /**
   * Binding parameters of the Binding resource
   */
  bindingParameters?: { [propertyName: string]: any };
  /**
   * The generated Spring Boot property file for this binding. The secret will be deducted.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly generatedProperties?: string;
  /**
   * Creation time of the Binding resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdAt?: string;
  /**
   * Update time of the Binding resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly updatedAt?: string;
}

/**
 * Binding resource payload
 */
export interface BindingResource extends ProxyResource {
  /**
   * Properties of the Binding resource
   */
  properties?: BindingResourceProperties;
}

/**
 * Certificate resource payload.
 */
export interface CertificateProperties {
  /**
   * The name of certificate.
   */
  name?: string;
  /**
   * The thumbprint of certificate.
   */
  thumbprint?: string;
  /**
   * The vault uri of user key vault.
   */
  vaultUri: string;
  /**
   * The certificate name of key vault.
   */
  keyVaultCertName: string;
  /**
   * The certificate verion of key vault.
   */
  certVersion?: string;
  /**
   * The issuer of certificate.
   */
  issuer?: string;
  /**
   * The issue date of certificate.
   */
  issuedDate?: string;
  /**
   * The expiration date of certificate.
   */
  expirationDate?: string;
  /**
   * The activate date of certificate.
   */
  activateDate?: string;
  /**
   * The subject name of certificate.
   */
  subjectName?: string;
  /**
   * The domain list of certificate.
   */
  dnsNames?: string[];
}

/**
 * Certificate resource payload.
 */
export interface CertificateResource extends ProxyResource {
  /**
   * Properties of the certificate resource payload.
   */
  properties?: CertificateProperties;
  location?: string;
}

/**
 * Collection compose of certificate resources list and a possible link for next page.
 */
export interface CertificateResourceCollection {
  /**
   * The certificate resources list.
   */
  resources?: CertificateResource[];
  /**
   * The link to next page of certificate list.
   */
  nextLink?: string;
}

/**
 * Name availability parameters payload
 */
export interface NameAvailabilityParameters {
  /**
   * Type of the resource to check name availability
   */
  type: string;
  /**
   * Name to be checked
   */
  name: string;
}

/**
 * Name availability result payload
 */
export interface NameAvailability {
  /**
   * Indicates whether the name is available
   */
  nameAvailable?: boolean;
  /**
   * Reason why the name is not available
   */
  reason?: string;
  /**
   * Message why the name is not available
   */
  message?: string;
}

/**
 * Custom domain of app resource payload.
 */
export interface CustomDomainProperties {
  /**
   * The name of domain.
   */
  name?: string;
  /**
   * The thumbprint of bound ceritifcate.
   */
  thumbprint?: string;
  /**
   * The app name of domain.
   */
  appName?: string;
  /**
   * The bound certificate name of domain.
   */
  certName?: string;
}

/**
 * Custom domain resource payload.
 */
export interface CustomDomainResource extends ProxyResource {
  /**
   * Properties of the custom domain resource.
   */
  properties?: CustomDomainProperties;
  location?: string;
}

/**
 * Collection compose of a custom domain resources list and a possible link for next page.
 */
export interface CustomDomainResourceCollection {
  /**
   * The custom domain resources list.
   */
  resources?: CustomDomainResource[];
  /**
   * The link to next page of custom domain list.
   */
  nextLink?: string;
}

/**
 * Source information for a deployment
 */
export interface UserSourceInfo {
  /**
   * Type of the source uploaded. Possible values include: 'Jar', 'NetCoreZip', 'Source'
   */
  type?: UserSourceType;
  /**
   * Relative path of the storage which stores the source
   */
  relativePath?: string;
  /**
   * Version of the source
   */
  version?: string;
  /**
   * Selector for the artifact to be used for the deployment for multi-module projects. This should
   * be
   * the relative path to the target module/project.
   */
  artifactSelector?: string;
}

/**
 * Deployment settings payload
 */
export interface DeploymentSettings {
  /**
   * Required CPU. Default value: 1.
   */
  cpu?: number;
  /**
   * Required Memory size in GB. Default value: 1.
   */
  memoryInGB?: number;
  /**
   * JVM parameter
   */
  jvmOptions?: string;
  /**
   * The path to the .NET executable relative to zip root
   */
  netCoreMainEntryPath?: string;
  /**
   * Instance count. Default value: 1.
   */
  instanceCount?: number;
  /**
   * Collection of environment variables
   */
  environmentVariables?: { [propertyName: string]: string };
  /**
   * Runtime version. Possible values include: 'Java_8', 'Java_11', 'NetCore_31'
   */
  runtimeVersion?: RuntimeVersion;
}

/**
 * Deployment instance payload
 */
export interface DeploymentInstance {
  /**
   * Name of the deployment instance
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Status of the deployment instance
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * Failed reason of the deployment instance
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reason?: string;
  /**
   * Discovery status of the deployment instance
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly discoveryStatus?: string;
}

/**
 * Deployment resource properties payload
 */
export interface DeploymentResourceProperties {
  /**
   * Uploaded source information of the deployment.
   */
  source?: UserSourceInfo;
  /**
   * App name of the deployment
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly appName?: string;
  /**
   * Provisioning state of the Deployment. Possible values include: 'Creating', 'Updating',
   * 'Succeeded', 'Failed', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: DeploymentResourceProvisioningState;
  /**
   * Deployment settings of the Deployment
   */
  deploymentSettings?: DeploymentSettings;
  /**
   * Status of the Deployment. Possible values include: 'Unknown', 'Stopped', 'Running', 'Failed',
   * 'Allocating', 'Upgrading', 'Compiling', 'Processing'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: DeploymentResourceStatus;
  /**
   * Indicates whether the Deployment is active
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly active?: boolean;
  /**
   * Date time when the resource is created
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdTime?: Date;
  /**
   * Collection of instances belong to the Deployment
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly instances?: DeploymentInstance[];
}

/**
 * Deployment resource payload
 */
export interface DeploymentResource extends ProxyResource {
  /**
   * Properties of the Deployment resource
   */
  properties?: DeploymentResourceProperties;
}

/**
 * Log file URL payload
 */
export interface LogFileUrlResponse {
  /**
   * URL of the log file
   */
  url: string;
}

/**
 * Operation display payload
 */
export interface OperationDisplay {
  /**
   * Resource provider of the operation
   */
  provider?: string;
  /**
   * Resource of the operation
   */
  resource?: string;
  /**
   * Localized friendly name for the operation
   */
  operation?: string;
  /**
   * Localized friendly description for the operation
   */
  description?: string;
}

/**
 * Specifications of the Log for Azure Monitoring
 */
export interface LogSpecification {
  /**
   * Name of the log
   */
  name?: string;
  /**
   * Localized friendly display name of the log
   */
  displayName?: string;
  /**
   * Blob duration of the log
   */
  blobDuration?: string;
}

/**
 * Specifications of the Dimension of metrics
 */
export interface MetricDimension {
  /**
   * Name of the dimension
   */
  name?: string;
  /**
   * Localized friendly display name of the dimension
   */
  displayName?: string;
  /**
   * Whether this dimension should be included for the Shoebox export scenario
   */
  toBeExportedForShoebox?: boolean;
}

/**
 * Specifications of the Metrics for Azure Monitoring
 */
export interface MetricSpecification {
  /**
   * Name of the metric
   */
  name?: string;
  /**
   * Localized friendly display name of the metric
   */
  displayName?: string;
  /**
   * Localized friendly description of the metric
   */
  displayDescription?: string;
  /**
   * Unit that makes sense for the metric
   */
  unit?: string;
  /**
   * Name of the metric category that the metric belongs to. A metric can only belong to a single
   * category.
   */
  category?: string;
  /**
   * Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.
   */
  aggregationType?: string;
  /**
   * Supported aggregation types
   */
  supportedAggregationTypes?: string[];
  /**
   * Supported time grain types
   */
  supportedTimeGrainTypes?: string[];
  /**
   * Optional. If set to true, then zero will be returned for time duration where no metric is
   * emitted/published.
   */
  fillGapWithZero?: boolean;
  /**
   * Dimensions of the metric
   */
  dimensions?: MetricDimension[];
}

/**
 * Service specification payload
 */
export interface ServiceSpecification {
  /**
   * Specifications of the Log for Azure Monitoring
   */
  logSpecifications?: LogSpecification[];
  /**
   * Specifications of the Metrics for Azure Monitoring
   */
  metricSpecifications?: MetricSpecification[];
}

/**
 * Extra Operation properties
 */
export interface OperationProperties {
  /**
   * Service specifications of the operation
   */
  serviceSpecification?: ServiceSpecification;
}

/**
 * Operation detail payload
 */
export interface OperationDetail {
  /**
   * Name of the operation
   */
  name?: string;
  /**
   * Indicates whether the operation is a data action
   */
  dataAction?: boolean;
  /**
   * Display of the operation
   */
  display?: OperationDisplay;
  /**
   * Origin of the operation
   */
  origin?: string;
  /**
   * Properties of the operation
   */
  properties?: OperationProperties;
}

/**
 * Supported deployment runtime version descriptor.
 */
export interface SupportedRuntimeVersion {
  /**
   * The raw value which could be passed to deployment CRUD operations. Possible values include:
   * 'Java_8', 'Java_11', 'NetCore_31'
   */
  value?: RuntimeVersion;
  /**
   * The platform of this runtime version (possible values: "Java" or ".NET"). Possible values
   * include: 'Java', '.NET Core'
   */
  platform?: RuntimePlatform;
  /**
   * The detailed version (major.minor) of the platform.
   */
  version?: string;
}

/**
 * An interface representing AvailableRuntimeVersions.
 */
export interface AvailableRuntimeVersions {
  /**
   * A list of all supported runtime versions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: SupportedRuntimeVersion[];
}

/**
 * The SKU capacity
 */
export interface SkuCapacity {
  /**
   * Gets or sets the minimum.
   */
  minimum: number;
  /**
   * Gets or sets the maximum.
   */
  maximum?: number;
  /**
   * Gets or sets the default.
   */
  default?: number;
  /**
   * Gets or sets the type of the scale. Possible values include: 'None', 'Manual', 'Automatic'
   */
  scaleType?: SkuScaleType;
}

/**
 * Supported Sku settings of Azure Spring Cloud
 */
export interface SkuSetting {
  /**
   * Name of the Sku
   */
  name: string;
  /**
   * Tier of the Sku
   */
  tier?: string;
  /**
   * Locations of the Sku
   */
  locations?: string[];
  /**
   * Required features of the Sku
   */
  requiredFeatures?: string[];
  /**
   * Capacity of the SKU
   */
  capacity?: SkuCapacity;
}

/**
 * Supported Skus of Azure Spring Cloud resources
 */
export interface ResourceTypeSku {
  /**
   * Resource type
   */
  resourceType?: string;
  /**
   * Supported Skus
   */
  skus?: SkuSetting[];
}

/**
 * Collection of supported Skus of Azure Spring Cloud resources
 */
export interface ResourceTypeSkuCollection {
  /**
   * Collection of supported Skus
   */
  value?: ResourceTypeSku[];
}

/**
 * Optional Parameters.
 */
export interface AppsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Indicates whether sync status
   */
  syncStatus?: string;
}

/**
 * Optional Parameters.
 */
export interface AppsUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The URL to the data plane of MSI for the given resource
   */
  xMsIdentityUrl?: string;
  /**
   * The object id of the identity resource
   */
  xMsIdentityPrincipalId?: string;
  /**
   * The tenant id of the resource
   */
  xMsHomeTenantId?: string;
  /**
   * he tenant id of the caller that made the request to ARM
   */
  xMsClientTenantId?: string;
}

/**
 * Optional Parameters.
 */
export interface AppsBeginUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The URL to the data plane of MSI for the given resource
   */
  xMsIdentityUrl?: string;
  /**
   * The object id of the identity resource
   */
  xMsIdentityPrincipalId?: string;
  /**
   * The tenant id of the resource
   */
  xMsHomeTenantId?: string;
  /**
   * he tenant id of the caller that made the request to ARM
   */
  xMsClientTenantId?: string;
}

/**
 * Optional Parameters.
 */
export interface DeploymentsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Version of the deployments to be listed
   */
  version?: string[];
}

/**
 * Optional Parameters.
 */
export interface DeploymentsListClusterAllDeploymentsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Version of the deployments to be listed
   */
  version?: string[];
}

/**
 * An interface representing AppPlatformManagementClientOptions.
 */
export interface AppPlatformManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Object that includes an array of Service resources and a possible link for next set
 * @extends Array<ServiceResource>
 */
export interface ServiceResourceList extends Array<ServiceResource> {
  /**
   * URL client should use to fetch the next page (per server side paging).
   * It's null for now, added for future use.
   */
  nextLink?: string;
}

/**
 * @interface
 * Object that includes an array of App resources and a possible link for next set
 * @extends Array<AppResource>
 */
export interface AppResourceCollection extends Array<AppResource> {
  /**
   * URL client should use to fetch the next page (per server side paging).
   * It's null for now, added for future use.
   */
  nextLink?: string;
}

/**
 * @interface
 * Object that includes an array of Binding resources and a possible link for next set
 * @extends Array<BindingResource>
 */
export interface BindingResourceCollection extends Array<BindingResource> {
  /**
   * URL client should use to fetch the next page (per server side paging).
   * It's null for now, added for future use.
   */
  nextLink?: string;
}

/**
 * @interface
 * Object that includes an array of App resources and a possible link for next set
 * @extends Array<DeploymentResource>
 */
export interface DeploymentResourceCollection extends Array<DeploymentResource> {
  /**
   * URL client should use to fetch the next page (per server side paging).
   * It's null for now, added for future use.
   */
  nextLink?: string;
}

/**
 * @interface
 * Available operations of the service
 * @extends Array<OperationDetail>
 */
export interface AvailableOperations extends Array<OperationDetail> {
  /**
   * URL client should use to fetch the next page (per server side paging).
   * It's null for now, added for future use.
   */
  nextLink?: string;
}

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Creating', 'Updating', 'Deleting', 'Deleted', 'Succeeded', 'Failed',
 * 'Moving', 'Moved', 'MoveFailed'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Creating' | 'Updating' | 'Deleting' | 'Deleted' | 'Succeeded' | 'Failed' | 'Moving' | 'Moved' | 'MoveFailed';

/**
 * Defines values for ConfigServerState.
 * Possible values include: 'NotAvailable', 'Deleted', 'Failed', 'Succeeded', 'Updating'
 * @readonly
 * @enum {string}
 */
export type ConfigServerState = 'NotAvailable' | 'Deleted' | 'Failed' | 'Succeeded' | 'Updating';

/**
 * Defines values for TraceProxyState.
 * Possible values include: 'NotAvailable', 'Failed', 'Succeeded', 'Updating'
 * @readonly
 * @enum {string}
 */
export type TraceProxyState = 'NotAvailable' | 'Failed' | 'Succeeded' | 'Updating';

/**
 * Defines values for TestKeyType.
 * Possible values include: 'Primary', 'Secondary'
 * @readonly
 * @enum {string}
 */
export type TestKeyType = 'Primary' | 'Secondary';

/**
 * Defines values for AppResourceProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Creating', 'Updating', 'Deleting'
 * @readonly
 * @enum {string}
 */
export type AppResourceProvisioningState = 'Succeeded' | 'Failed' | 'Creating' | 'Updating' | 'Deleting';

/**
 * Defines values for UserSourceType.
 * Possible values include: 'Jar', 'NetCoreZip', 'Source'
 * @readonly
 * @enum {string}
 */
export type UserSourceType = 'Jar' | 'NetCoreZip' | 'Source';

/**
 * Defines values for DeploymentResourceProvisioningState.
 * Possible values include: 'Creating', 'Updating', 'Succeeded', 'Failed', 'Deleting'
 * @readonly
 * @enum {string}
 */
export type DeploymentResourceProvisioningState = 'Creating' | 'Updating' | 'Succeeded' | 'Failed' | 'Deleting';

/**
 * Defines values for RuntimeVersion.
 * Possible values include: 'Java_8', 'Java_11', 'NetCore_31'
 * @readonly
 * @enum {string}
 */
export type RuntimeVersion = 'Java_8' | 'Java_11' | 'NetCore_31';

/**
 * Defines values for DeploymentResourceStatus.
 * Possible values include: 'Unknown', 'Stopped', 'Running', 'Failed', 'Allocating', 'Upgrading',
 * 'Compiling', 'Processing'
 * @readonly
 * @enum {string}
 */
export type DeploymentResourceStatus = 'Unknown' | 'Stopped' | 'Running' | 'Failed' | 'Allocating' | 'Upgrading' | 'Compiling' | 'Processing';

/**
 * Defines values for RuntimePlatform.
 * Possible values include: 'Java', '.NET Core'
 * @readonly
 * @enum {string}
 */
export type RuntimePlatform = 'Java' | '.NET Core';

/**
 * Defines values for SkuScaleType.
 * Possible values include: 'None', 'Manual', 'Automatic'
 * @readonly
 * @enum {string}
 */
export type SkuScaleType = 'None' | 'Manual' | 'Automatic';

/**
 * Contains response data for the get operation.
 */
export type ServicesGetResponse = ServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServicesCreateOrUpdateResponse = ServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ServicesUpdateResponse = ServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceResource;
    };
};

/**
 * Contains response data for the listTestKeys operation.
 */
export type ServicesListTestKeysResponse = TestKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TestKeys;
    };
};

/**
 * Contains response data for the regenerateTestKey operation.
 */
export type ServicesRegenerateTestKeyResponse = TestKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TestKeys;
    };
};

/**
 * Contains response data for the enableTestEndpoint operation.
 */
export type ServicesEnableTestEndpointResponse = TestKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TestKeys;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type ServicesCheckNameAvailabilityResponse = NameAvailability & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NameAvailability;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type ServicesListBySubscriptionResponse = ServiceResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceResourceList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ServicesListResponse = ServiceResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceResourceList;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServicesBeginCreateOrUpdateResponse = ServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceResource;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ServicesBeginUpdateResponse = ServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceResource;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type ServicesListBySubscriptionNextResponse = ServiceResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceResourceList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ServicesListNextResponse = ServiceResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceResourceList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AppsGetResponse = AppResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AppsCreateOrUpdateResponse = AppResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AppsUpdateResponse = AppResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type AppsListResponse = AppResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppResourceCollection;
    };
};

/**
 * Contains response data for the getResourceUploadUrl operation.
 */
export type AppsGetResourceUploadUrlResponse = ResourceUploadDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceUploadDefinition;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type AppsBeginCreateOrUpdateResponse = AppResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppResource;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type AppsBeginUpdateResponse = AppResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppResource;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type AppsListNextResponse = AppResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppResourceCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BindingsGetResponse = BindingResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BindingResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type BindingsCreateOrUpdateResponse = BindingResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BindingResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type BindingsUpdateResponse = BindingResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BindingResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type BindingsListResponse = BindingResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BindingResourceCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type BindingsListNextResponse = BindingResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BindingResourceCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CertificatesGetResponse = CertificateResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type CertificatesCreateOrUpdateResponse = CertificateResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateResource;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type CertificatesDeleteMethodResponse = CertificateResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type CertificatesListResponse = CertificateResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateResourceCollection;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type CertificatesBeginCreateOrUpdateResponse = CertificateResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CustomDomainsGetResponse = CustomDomainResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomDomainResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type CustomDomainsCreateOrUpdateResponse = CustomDomainResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomDomainResource;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type CustomDomainsDeleteMethodResponse = CustomDomainResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomDomainResource;
    };
};

/**
 * Contains response data for the patch operation.
 */
export type CustomDomainsPatchResponse = CustomDomainResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomDomainResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type CustomDomainsListResponse = CustomDomainResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomDomainResourceCollection;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type CustomDomainsCheckNameAvailabilityResponse = NameAvailability & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NameAvailability;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DeploymentsGetResponse = DeploymentResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DeploymentsCreateOrUpdateResponse = DeploymentResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DeploymentsUpdateResponse = DeploymentResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DeploymentsListResponse = DeploymentResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentResourceCollection;
    };
};

/**
 * Contains response data for the listClusterAllDeployments operation.
 */
export type DeploymentsListClusterAllDeploymentsResponse = DeploymentResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentResourceCollection;
    };
};

/**
 * Contains response data for the getLogFileUrl operation.
 */
export type DeploymentsGetLogFileUrlResponse = LogFileUrlResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogFileUrlResponse;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DeploymentsBeginCreateOrUpdateResponse = DeploymentResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentResource;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type DeploymentsBeginUpdateResponse = DeploymentResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentResource;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type DeploymentsListNextResponse = DeploymentResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentResourceCollection;
    };
};

/**
 * Contains response data for the listClusterAllDeploymentsNext operation.
 */
export type DeploymentsListClusterAllDeploymentsNextResponse = DeploymentResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentResourceCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = AvailableOperations & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailableOperations;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = AvailableOperations & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailableOperations;
    };
};

/**
 * Contains response data for the listRuntimeVersions operation.
 */
export type RuntimeVersionsListRuntimeVersionsResponse = AvailableRuntimeVersions & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailableRuntimeVersions;
    };
};

/**
 * Contains response data for the listServiceSku operation.
 */
export type SkuListServiceSkuResponse = ResourceTypeSkuCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceTypeSkuCollection;
    };
};

/**
 * Contains response data for the listDeploymentSku operation.
 */
export type SkuListDeploymentSkuResponse = ResourceTypeSkuCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceTypeSkuCollection;
    };
};
