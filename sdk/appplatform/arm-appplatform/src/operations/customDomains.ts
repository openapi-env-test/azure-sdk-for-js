/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/customDomainsMappers";
import * as Parameters from "../models/parameters";
import { AppPlatformManagementClientContext } from "../appPlatformManagementClientContext";

/** Class representing a CustomDomains. */
export class CustomDomains {
  private readonly client: AppPlatformManagementClientContext;

  /**
   * Create a CustomDomains.
   * @param {AppPlatformManagementClientContext} client Reference to the service client.
   */
  constructor(client: AppPlatformManagementClientContext) {
    this.client = client;
  }

  /**
   * Get the custom domain of one lifecycle application.
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.CustomDomainsGetResponse>
   */
  get(resourceGroupName: string, serviceName: string, appName: string, domainName: string, options?: msRest.RequestOptionsBase): Promise<Models.CustomDomainsGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param callback The callback
   */
  get(resourceGroupName: string, serviceName: string, appName: string, domainName: string, callback: msRest.ServiceCallback<Models.CustomDomainResource>): void;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, serviceName: string, appName: string, domainName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CustomDomainResource>): void;
  get(resourceGroupName: string, serviceName: string, appName: string, domainName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CustomDomainResource>, callback?: msRest.ServiceCallback<Models.CustomDomainResource>): Promise<Models.CustomDomainsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serviceName,
        appName,
        domainName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.CustomDomainsGetResponse>;
  }

  /**
   * Create or update custom domain of one lifecycle application.
   * @param domainResource Parameters for the create or update operation
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.CustomDomainsCreateOrUpdateResponse>
   */
  createOrUpdate(domainResource: Models.CustomDomainResource, resourceGroupName: string, serviceName: string, appName: string, domainName: string, options?: msRest.RequestOptionsBase): Promise<Models.CustomDomainsCreateOrUpdateResponse>;
  /**
   * @param domainResource Parameters for the create or update operation
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param callback The callback
   */
  createOrUpdate(domainResource: Models.CustomDomainResource, resourceGroupName: string, serviceName: string, appName: string, domainName: string, callback: msRest.ServiceCallback<Models.CustomDomainResource>): void;
  /**
   * @param domainResource Parameters for the create or update operation
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(domainResource: Models.CustomDomainResource, resourceGroupName: string, serviceName: string, appName: string, domainName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CustomDomainResource>): void;
  createOrUpdate(domainResource: Models.CustomDomainResource, resourceGroupName: string, serviceName: string, appName: string, domainName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CustomDomainResource>, callback?: msRest.ServiceCallback<Models.CustomDomainResource>): Promise<Models.CustomDomainsCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        domainResource,
        resourceGroupName,
        serviceName,
        appName,
        domainName,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.CustomDomainsCreateOrUpdateResponse>;
  }

  /**
   * Delete the custom domain of one lifecycle application.
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.CustomDomainsDeleteMethodResponse>
   */
  deleteMethod(resourceGroupName: string, serviceName: string, appName: string, domainName: string, options?: msRest.RequestOptionsBase): Promise<Models.CustomDomainsDeleteMethodResponse>;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, serviceName: string, appName: string, domainName: string, callback: msRest.ServiceCallback<Models.CustomDomainResource>): void;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, serviceName: string, appName: string, domainName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CustomDomainResource>): void;
  deleteMethod(resourceGroupName: string, serviceName: string, appName: string, domainName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CustomDomainResource>, callback?: msRest.ServiceCallback<Models.CustomDomainResource>): Promise<Models.CustomDomainsDeleteMethodResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serviceName,
        appName,
        domainName,
        options
      },
      deleteMethodOperationSpec,
      callback) as Promise<Models.CustomDomainsDeleteMethodResponse>;
  }

  /**
   * Update custom domain of one lifecycle application.
   * @param domainResource Parameters for the create or update operation
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.CustomDomainsPatchResponse>
   */
  patch(domainResource: Models.CustomDomainResource, resourceGroupName: string, serviceName: string, appName: string, domainName: string, options?: msRest.RequestOptionsBase): Promise<Models.CustomDomainsPatchResponse>;
  /**
   * @param domainResource Parameters for the create or update operation
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param callback The callback
   */
  patch(domainResource: Models.CustomDomainResource, resourceGroupName: string, serviceName: string, appName: string, domainName: string, callback: msRest.ServiceCallback<Models.CustomDomainResource>): void;
  /**
   * @param domainResource Parameters for the create or update operation
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  patch(domainResource: Models.CustomDomainResource, resourceGroupName: string, serviceName: string, appName: string, domainName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CustomDomainResource>): void;
  patch(domainResource: Models.CustomDomainResource, resourceGroupName: string, serviceName: string, appName: string, domainName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CustomDomainResource>, callback?: msRest.ServiceCallback<Models.CustomDomainResource>): Promise<Models.CustomDomainsPatchResponse> {
    return this.client.sendOperationRequest(
      {
        domainResource,
        resourceGroupName,
        serviceName,
        appName,
        domainName,
        options
      },
      patchOperationSpec,
      callback) as Promise<Models.CustomDomainsPatchResponse>;
  }

  /**
   * List the custom domains of one lifecycle application.
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.CustomDomainsListResponse>
   */
  list(resourceGroupName: string, serviceName: string, appName: string, domainName: string, options?: msRest.RequestOptionsBase): Promise<Models.CustomDomainsListResponse>;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param callback The callback
   */
  list(resourceGroupName: string, serviceName: string, appName: string, domainName: string, callback: msRest.ServiceCallback<Models.CustomDomainResourceCollection>): void;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, serviceName: string, appName: string, domainName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CustomDomainResourceCollection>): void;
  list(resourceGroupName: string, serviceName: string, appName: string, domainName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CustomDomainResourceCollection>, callback?: msRest.ServiceCallback<Models.CustomDomainResourceCollection>): Promise<Models.CustomDomainsListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serviceName,
        appName,
        domainName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.CustomDomainsListResponse>;
  }

  /**
   * Check the resource name is valid as well as not in use.
   * @param parameters
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.CustomDomainsCheckNameAvailabilityResponse>
   */
  checkNameAvailability(parameters: Models.NameAvailabilityParameters, resourceGroupName: string, serviceName: string, appName: string, domainName: string, options?: msRest.RequestOptionsBase): Promise<Models.CustomDomainsCheckNameAvailabilityResponse>;
  /**
   * @param parameters
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param callback The callback
   */
  checkNameAvailability(parameters: Models.NameAvailabilityParameters, resourceGroupName: string, serviceName: string, appName: string, domainName: string, callback: msRest.ServiceCallback<Models.NameAvailability>): void;
  /**
   * @param parameters
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  checkNameAvailability(parameters: Models.NameAvailabilityParameters, resourceGroupName: string, serviceName: string, appName: string, domainName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.NameAvailability>): void;
  checkNameAvailability(parameters: Models.NameAvailabilityParameters, resourceGroupName: string, serviceName: string, appName: string, domainName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.NameAvailability>, callback?: msRest.ServiceCallback<Models.NameAvailability>): Promise<Models.CustomDomainsCheckNameAvailabilityResponse> {
    return this.client.sendOperationRequest(
      {
        parameters,
        resourceGroupName,
        serviceName,
        appName,
        domainName,
        options
      },
      checkNameAvailabilityOperationSpec,
      callback) as Promise<Models.CustomDomainsCheckNameAvailabilityResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.appName,
    Parameters.domainName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CustomDomainResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.appName,
    Parameters.domainName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "domainResource",
    mapper: {
      ...Mappers.CustomDomainResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.CustomDomainResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.appName,
    Parameters.domainName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CustomDomainResource
    },
    204: {
      bodyMapper: Mappers.CustomDomainResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const patchOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.appName,
    Parameters.domainName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "domainResource",
    mapper: {
      ...Mappers.CustomDomainResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.CustomDomainResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.appName,
    Parameters.domainName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CustomDomainResourceCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const checkNameAvailabilityOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/checknameavailability",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.appName,
    Parameters.domainName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.NameAvailabilityParameters,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.NameAvailability
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
