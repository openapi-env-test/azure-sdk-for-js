/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/skuOperationsMappers";
import * as Parameters from "../models/parameters";
import { AppPlatformManagementClientContext } from "../appPlatformManagementClientContext";

/** Class representing a SkuOperations. */
export class SkuOperations {
  private readonly client: AppPlatformManagementClientContext;

  /**
   * Create a SkuOperations.
   * @param {AppPlatformManagementClientContext} client Reference to the service client.
   */
  constructor(client: AppPlatformManagementClientContext) {
    this.client = client;
  }

  /**
   * @param [options] The optional parameters
   * @returns Promise<Models.SkuListServiceSkuResponse>
   */
  listServiceSku(options?: msRest.RequestOptionsBase): Promise<Models.SkuListServiceSkuResponse>;
  /**
   * @param callback The callback
   */
  listServiceSku(callback: msRest.ServiceCallback<Models.ResourceTypeSkuCollection>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  listServiceSku(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceTypeSkuCollection>): void;
  listServiceSku(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceTypeSkuCollection>, callback?: msRest.ServiceCallback<Models.ResourceTypeSkuCollection>): Promise<Models.SkuListServiceSkuResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listServiceSkuOperationSpec,
      callback) as Promise<Models.SkuListServiceSkuResponse>;
  }

  /**
   * @param [options] The optional parameters
   * @returns Promise<Models.SkuListDeploymentSkuResponse>
   */
  listDeploymentSku(options?: msRest.RequestOptionsBase): Promise<Models.SkuListDeploymentSkuResponse>;
  /**
   * @param callback The callback
   */
  listDeploymentSku(callback: msRest.ServiceCallback<Models.ResourceTypeSkuCollection>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  listDeploymentSku(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceTypeSkuCollection>): void;
  listDeploymentSku(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceTypeSkuCollection>, callback?: msRest.ServiceCallback<Models.ResourceTypeSkuCollection>): Promise<Models.SkuListDeploymentSkuResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listDeploymentSkuOperationSpec,
      callback) as Promise<Models.SkuListDeploymentSkuResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listServiceSkuOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "skus/Spring",
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ResourceTypeSkuCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listDeploymentSkuOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "skus/Spring/apps/deployments",
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ResourceTypeSkuCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
