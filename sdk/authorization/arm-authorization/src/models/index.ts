/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Role Assignment schedule request */
export interface RoleAssignmentScheduleRequest {
  /**
   * The role assignment schedule request ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The role assignment schedule request name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The role assignment schedule request type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The role assignment schedule request scope.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scope?: string;
  /** The role definition ID. */
  roleDefinitionId?: string;
  /** The principal ID. */
  principalId?: string;
  /**
   * The principal type of the assigned principal ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalType?: PrincipalType;
  /** The type of the role assignment schedule request. Eg: SelfActivate, AdminAssign etc */
  requestType?: RequestType;
  /**
   * The status of the role assignment schedule request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: Status;
  /**
   * The approvalId of the role assignment schedule request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly approvalId?: string;
  /** The resultant role assignment schedule id or the role assignment schedule id being updated */
  targetRoleAssignmentScheduleId?: string;
  /** The role assignment schedule instance id being updated */
  targetRoleAssignmentScheduleInstanceId?: string;
  /** Schedule info of the role assignment schedule */
  scheduleInfo?: RoleAssignmentScheduleRequestPropertiesScheduleInfo;
  /** The linked role eligibility schedule id - to activate an eligibility. */
  linkedRoleEligibilityScheduleId?: string;
  /** Justification for the role assignment */
  justification?: string;
  /** Ticket Info of the role assignment */
  ticketInfo?: RoleAssignmentScheduleRequestPropertiesTicketInfo;
  /** The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container' */
  condition?: string;
  /** Version of the condition. Currently accepted value is '2.0' */
  conditionVersion?: string;
  /**
   * DateTime when role assignment schedule request was created
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdOn?: Date;
  /**
   * Id of the user who created this request
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly requestorId?: string;
  /**
   * Additional properties of principal, scope and role definition
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expandedProperties?: ExpandedProperties;
}

/** Schedule info of the role assignment schedule */
export interface RoleAssignmentScheduleRequestPropertiesScheduleInfo {
  /** Start DateTime of the role assignment schedule. */
  startDateTime?: Date;
  /** Expiration of the role assignment schedule */
  expiration?: RoleAssignmentScheduleRequestPropertiesScheduleInfoExpiration;
}

/** Expiration of the role assignment schedule */
export interface RoleAssignmentScheduleRequestPropertiesScheduleInfoExpiration {
  /** Type of the role assignment schedule expiration */
  type?: Type;
  /** End DateTime of the role assignment schedule. */
  endDateTime?: Date;
  /** Duration of the role assignment schedule in TimeSpan. */
  duration?: string;
}

/** Ticket Info of the role assignment */
export interface RoleAssignmentScheduleRequestPropertiesTicketInfo {
  /** Ticket number for the role assignment */
  ticketNumber?: string;
  /** Ticket system name for the role assignment */
  ticketSystem?: string;
}

/** Expanded info of resource, role and principal */
export interface ExpandedProperties {
  /** Details of the resource scope */
  scope?: ExpandedPropertiesScope;
  /** Details of role definition */
  roleDefinition?: ExpandedPropertiesRoleDefinition;
  /** Details of the principal */
  principal?: ExpandedPropertiesPrincipal;
}

/** Details of the resource scope */
export interface ExpandedPropertiesScope {
  /** Scope id of the resource */
  id?: string;
  /** Display name of the resource */
  displayName?: string;
  /** Type of the resource */
  type?: string;
}

/** Details of role definition */
export interface ExpandedPropertiesRoleDefinition {
  /** Id of the role definition */
  id?: string;
  /** Display name of the role definition */
  displayName?: string;
  /** Type of the role definition */
  type?: string;
}

/** Details of the principal */
export interface ExpandedPropertiesPrincipal {
  /** Id of the principal */
  id?: string;
  /** Display name of the principal */
  displayName?: string;
  /** Email id of the principal */
  email?: string;
  /** Type of the principal */
  type?: string;
}

/** An error response from the service. */
export interface CloudError {
  /** An error response from the service. */
  error?: CloudErrorBody;
}

/** An error response from the service. */
export interface CloudErrorBody {
  /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */
  code?: string;
  /** A message describing the error, intended to be suitable for display in a user interface. */
  message?: string;
}

/** Role assignment schedule request list operation result. */
export interface RoleAssignmentScheduleRequestListResult {
  /** Role assignment schedule request list. */
  value?: RoleAssignmentScheduleRequest[];
  /** The URL to use for getting the next set of results. */
  nextLink?: string;
}

/** Role assignment schedule request filter */
export interface RoleAssignmentScheduleRequestFilter {
  /** Returns role assignment requests of the specific principal. */
  principalId?: string;
  /** Returns role assignment requests of the specific role definition. */
  roleDefinitionId?: string;
  /** Returns role assignment requests created by specific principal. */
  requestorId?: string;
  /** Returns role assignment requests of specific status. */
  status?: string;
}

/** Known values of {@link PrincipalType} that the service accepts. */
export enum KnownPrincipalType {
  /** User */
  User = "User",
  /** Group */
  Group = "Group",
  /** ServicePrincipal */
  ServicePrincipal = "ServicePrincipal",
  /** ForeignGroup */
  ForeignGroup = "ForeignGroup",
  /** Device */
  Device = "Device"
}

/**
 * Defines values for PrincipalType. \
 * {@link KnownPrincipalType} can be used interchangeably with PrincipalType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Group** \
 * **ServicePrincipal** \
 * **ForeignGroup** \
 * **Device**
 */
export type PrincipalType = string;

/** Known values of {@link RequestType} that the service accepts. */
export enum KnownRequestType {
  /** AdminAssign */
  AdminAssign = "AdminAssign",
  /** AdminRemove */
  AdminRemove = "AdminRemove",
  /** AdminUpdate */
  AdminUpdate = "AdminUpdate",
  /** AdminExtend */
  AdminExtend = "AdminExtend",
  /** AdminRenew */
  AdminRenew = "AdminRenew",
  /** SelfActivate */
  SelfActivate = "SelfActivate",
  /** SelfDeactivate */
  SelfDeactivate = "SelfDeactivate",
  /** SelfExtend */
  SelfExtend = "SelfExtend",
  /** SelfRenew */
  SelfRenew = "SelfRenew"
}

/**
 * Defines values for RequestType. \
 * {@link KnownRequestType} can be used interchangeably with RequestType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AdminAssign** \
 * **AdminRemove** \
 * **AdminUpdate** \
 * **AdminExtend** \
 * **AdminRenew** \
 * **SelfActivate** \
 * **SelfDeactivate** \
 * **SelfExtend** \
 * **SelfRenew**
 */
export type RequestType = string;

/** Known values of {@link Status} that the service accepts. */
export enum KnownStatus {
  /** Accepted */
  Accepted = "Accepted",
  /** PendingEvaluation */
  PendingEvaluation = "PendingEvaluation",
  /** Granted */
  Granted = "Granted",
  /** Denied */
  Denied = "Denied",
  /** PendingProvisioning */
  PendingProvisioning = "PendingProvisioning",
  /** Provisioned */
  Provisioned = "Provisioned",
  /** PendingRevocation */
  PendingRevocation = "PendingRevocation",
  /** Revoked */
  Revoked = "Revoked",
  /** Canceled */
  Canceled = "Canceled",
  /** Failed */
  Failed = "Failed",
  /** PendingApprovalProvisioning */
  PendingApprovalProvisioning = "PendingApprovalProvisioning",
  /** PendingApproval */
  PendingApproval = "PendingApproval",
  /** FailedAsResourceIsLocked */
  FailedAsResourceIsLocked = "FailedAsResourceIsLocked",
  /** PendingAdminDecision */
  PendingAdminDecision = "PendingAdminDecision",
  /** AdminApproved */
  AdminApproved = "AdminApproved",
  /** AdminDenied */
  AdminDenied = "AdminDenied",
  /** TimedOut */
  TimedOut = "TimedOut",
  /** ProvisioningStarted */
  ProvisioningStarted = "ProvisioningStarted",
  /** Invalid */
  Invalid = "Invalid",
  /** PendingScheduleCreation */
  PendingScheduleCreation = "PendingScheduleCreation",
  /** ScheduleCreated */
  ScheduleCreated = "ScheduleCreated",
  /** PendingExternalProvisioning */
  PendingExternalProvisioning = "PendingExternalProvisioning"
}

/**
 * Defines values for Status. \
 * {@link KnownStatus} can be used interchangeably with Status,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **PendingEvaluation** \
 * **Granted** \
 * **Denied** \
 * **PendingProvisioning** \
 * **Provisioned** \
 * **PendingRevocation** \
 * **Revoked** \
 * **Canceled** \
 * **Failed** \
 * **PendingApprovalProvisioning** \
 * **PendingApproval** \
 * **FailedAsResourceIsLocked** \
 * **PendingAdminDecision** \
 * **AdminApproved** \
 * **AdminDenied** \
 * **TimedOut** \
 * **ProvisioningStarted** \
 * **Invalid** \
 * **PendingScheduleCreation** \
 * **ScheduleCreated** \
 * **PendingExternalProvisioning**
 */
export type Status = string;

/** Known values of {@link Type} that the service accepts. */
export enum KnownType {
  /** AfterDuration */
  AfterDuration = "AfterDuration",
  /** AfterDateTime */
  AfterDateTime = "AfterDateTime",
  /** NoExpiration */
  NoExpiration = "NoExpiration"
}

/**
 * Defines values for Type. \
 * {@link KnownType} can be used interchangeably with Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AfterDuration** \
 * **AfterDateTime** \
 * **NoExpiration**
 */
export type Type = string;

/** Optional parameters. */
export interface RoleAssignmentScheduleRequestsCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type RoleAssignmentScheduleRequestsCreateResponse = RoleAssignmentScheduleRequest;

/** Optional parameters. */
export interface RoleAssignmentScheduleRequestsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type RoleAssignmentScheduleRequestsGetResponse = RoleAssignmentScheduleRequest;

/** Optional parameters. */
export interface RoleAssignmentScheduleRequestsListForScopeOptionalParams
  extends coreClient.OperationOptions {
  /** The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedule requests at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedule requests at, above or below the scope for the specified principal. Use $filter=asRequestor() to return all role assignment schedule requests requested by the current user. Use $filter=asTarget() to return all role assignment schedule requests created for the current user. Use $filter=asApprover() to return all role assignment schedule requests where the current user is an approver. */
  filter?: string;
}

/** Contains response data for the listForScope operation. */
export type RoleAssignmentScheduleRequestsListForScopeResponse = RoleAssignmentScheduleRequestListResult;

/** Optional parameters. */
export interface RoleAssignmentScheduleRequestsCancelOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface RoleAssignmentScheduleRequestsValidateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validate operation. */
export type RoleAssignmentScheduleRequestsValidateResponse = RoleAssignmentScheduleRequest;

/** Optional parameters. */
export interface RoleAssignmentScheduleRequestsListForScopeNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listForScopeNext operation. */
export type RoleAssignmentScheduleRequestsListForScopeNextResponse = RoleAssignmentScheduleRequestListResult;

/** Optional parameters. */
export interface AuthorizationManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
