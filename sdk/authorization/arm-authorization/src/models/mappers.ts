/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const RoleAssignmentScheduleRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentScheduleRequest",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "properties.roleDefinitionId",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "properties.principalId",
        type: {
          name: "String"
        }
      },
      principalType: {
        serializedName: "properties.principalType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      requestType: {
        serializedName: "properties.requestType",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      approvalId: {
        serializedName: "properties.approvalId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      targetRoleAssignmentScheduleId: {
        serializedName: "properties.targetRoleAssignmentScheduleId",
        type: {
          name: "String"
        }
      },
      targetRoleAssignmentScheduleInstanceId: {
        serializedName: "properties.targetRoleAssignmentScheduleInstanceId",
        type: {
          name: "String"
        }
      },
      scheduleInfo: {
        serializedName: "properties.scheduleInfo",
        type: {
          name: "Composite",
          className: "RoleAssignmentScheduleRequestPropertiesScheduleInfo"
        }
      },
      linkedRoleEligibilityScheduleId: {
        serializedName: "properties.linkedRoleEligibilityScheduleId",
        type: {
          name: "String"
        }
      },
      justification: {
        serializedName: "properties.justification",
        type: {
          name: "String"
        }
      },
      ticketInfo: {
        serializedName: "properties.ticketInfo",
        type: {
          name: "Composite",
          className: "RoleAssignmentScheduleRequestPropertiesTicketInfo"
        }
      },
      condition: {
        serializedName: "properties.condition",
        type: {
          name: "String"
        }
      },
      conditionVersion: {
        serializedName: "properties.conditionVersion",
        type: {
          name: "String"
        }
      },
      createdOn: {
        serializedName: "properties.createdOn",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      requestorId: {
        serializedName: "properties.requestorId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      expandedProperties: {
        serializedName: "properties.expandedProperties",
        type: {
          name: "Composite",
          className: "ExpandedProperties"
        }
      }
    }
  }
};

export const RoleAssignmentScheduleRequestPropertiesScheduleInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentScheduleRequestPropertiesScheduleInfo",
    modelProperties: {
      startDateTime: {
        serializedName: "startDateTime",
        type: {
          name: "DateTime"
        }
      },
      expiration: {
        serializedName: "expiration",
        type: {
          name: "Composite",
          className:
            "RoleAssignmentScheduleRequestPropertiesScheduleInfoExpiration"
        }
      }
    }
  }
};

export const RoleAssignmentScheduleRequestPropertiesScheduleInfoExpiration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentScheduleRequestPropertiesScheduleInfoExpiration",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      endDateTime: {
        serializedName: "endDateTime",
        type: {
          name: "DateTime"
        }
      },
      duration: {
        serializedName: "duration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignmentScheduleRequestPropertiesTicketInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentScheduleRequestPropertiesTicketInfo",
    modelProperties: {
      ticketNumber: {
        serializedName: "ticketNumber",
        type: {
          name: "String"
        }
      },
      ticketSystem: {
        serializedName: "ticketSystem",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExpandedProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExpandedProperties",
    modelProperties: {
      scope: {
        serializedName: "scope",
        type: {
          name: "Composite",
          className: "ExpandedPropertiesScope"
        }
      },
      roleDefinition: {
        serializedName: "roleDefinition",
        type: {
          name: "Composite",
          className: "ExpandedPropertiesRoleDefinition"
        }
      },
      principal: {
        serializedName: "principal",
        type: {
          name: "Composite",
          className: "ExpandedPropertiesPrincipal"
        }
      }
    }
  }
};

export const ExpandedPropertiesScope: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExpandedPropertiesScope",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExpandedPropertiesRoleDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExpandedPropertiesRoleDefinition",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExpandedPropertiesPrincipal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExpandedPropertiesPrincipal",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CloudErrorBody"
        }
      }
    }
  }
};

export const CloudErrorBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudErrorBody",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignmentScheduleRequestListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentScheduleRequestListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RoleAssignmentScheduleRequest"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignmentScheduleRequestFilter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentScheduleRequestFilter",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "roleDefinitionId",
        type: {
          name: "String"
        }
      },
      requestorId: {
        serializedName: "requestorId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};
