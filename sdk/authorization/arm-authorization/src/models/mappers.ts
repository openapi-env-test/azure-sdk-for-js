/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const AccessReviewScheduleSettings: msRest.CompositeMapper = {
  serializedName: "AccessReviewScheduleSettings",
  type: {
    name: "Composite",
    className: "AccessReviewScheduleSettings",
    modelProperties: {
      mailNotificationsEnabled: {
        serializedName: "mailNotificationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      reminderNotificationsEnabled: {
        serializedName: "reminderNotificationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      defaultDecisionEnabled: {
        serializedName: "defaultDecisionEnabled",
        type: {
          name: "Boolean"
        }
      },
      justificationRequiredOnApproval: {
        serializedName: "justificationRequiredOnApproval",
        type: {
          name: "Boolean"
        }
      },
      defaultDecision: {
        serializedName: "defaultDecision",
        type: {
          name: "String"
        }
      },
      autoApplyDecisionsEnabled: {
        serializedName: "autoApplyDecisionsEnabled",
        type: {
          name: "Boolean"
        }
      },
      recommendationsEnabled: {
        serializedName: "recommendationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      instanceDurationInDays: {
        serializedName: "instanceDurationInDays",
        type: {
          name: "Number"
        }
      },
      recurrence: {
        serializedName: "recurrence",
        type: {
          name: "Composite",
          className: "AccessReviewRecurrenceSettings"
        }
      }
    }
  }
};

export const AccessReviewReviewer: msRest.CompositeMapper = {
  serializedName: "AccessReviewReviewer",
  type: {
    name: "Composite",
    className: "AccessReviewReviewer",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      principalType: {
        readOnly: true,
        serializedName: "principalType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewInstance: msRest.CompositeMapper = {
  serializedName: "AccessReviewInstance",
  type: {
    name: "Composite",
    className: "AccessReviewInstance",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      startDateTime: {
        nullable: false,
        serializedName: "properties.startDateTime",
        type: {
          name: "DateTime"
        }
      },
      endDateTime: {
        nullable: false,
        serializedName: "properties.endDateTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AccessReviewScheduleDefinitionProperties: msRest.CompositeMapper = {
  serializedName: "AccessReviewScheduleDefinitionProperties",
  type: {
    name: "Composite",
    className: "AccessReviewScheduleDefinitionProperties",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      descriptionForAdmins: {
        serializedName: "descriptionForAdmins",
        type: {
          name: "String"
        }
      },
      descriptionForReviewers: {
        serializedName: "descriptionForReviewers",
        type: {
          name: "String"
        }
      },
      principalId: {
        readOnly: true,
        serializedName: "createdBy.principalId",
        type: {
          name: "String"
        }
      },
      principalType: {
        readOnly: true,
        serializedName: "createdBy.principalType",
        type: {
          name: "String"
        }
      },
      principalName: {
        readOnly: true,
        serializedName: "createdBy.principalName",
        type: {
          name: "String"
        }
      },
      userPrincipalName: {
        readOnly: true,
        serializedName: "createdBy.userPrincipalName",
        type: {
          name: "String"
        }
      },
      mailNotificationsEnabled: {
        serializedName: "settings.mailNotificationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      reminderNotificationsEnabled: {
        serializedName: "settings.reminderNotificationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      defaultDecisionEnabled: {
        serializedName: "settings.defaultDecisionEnabled",
        type: {
          name: "Boolean"
        }
      },
      justificationRequiredOnApproval: {
        serializedName: "settings.justificationRequiredOnApproval",
        type: {
          name: "Boolean"
        }
      },
      defaultDecision: {
        serializedName: "settings.defaultDecision",
        type: {
          name: "String"
        }
      },
      autoApplyDecisionsEnabled: {
        serializedName: "settings.autoApplyDecisionsEnabled",
        type: {
          name: "Boolean"
        }
      },
      recommendationsEnabled: {
        serializedName: "settings.recommendationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      instanceDurationInDays: {
        serializedName: "settings.instanceDurationInDays",
        type: {
          name: "Number"
        }
      },
      type: {
        serializedName: "settings.recurrence.pattern.type",
        type: {
          name: "String"
        }
      },
      interval: {
        serializedName: "settings.recurrence.pattern.interval",
        type: {
          name: "Number"
        }
      },
      type1: {
        serializedName: "settings.recurrence.range.type",
        type: {
          name: "String"
        }
      },
      numberOfOccurrences: {
        serializedName: "settings.recurrence.range.numberOfOccurrences",
        type: {
          name: "Number"
        }
      },
      startDate: {
        nullable: false,
        serializedName: "settings.recurrence.range.startDate",
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        nullable: false,
        serializedName: "settings.recurrence.range.endDate",
        type: {
          name: "DateTime"
        }
      },
      resourceId: {
        readOnly: true,
        serializedName: "scope.resourceId",
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        readOnly: true,
        serializedName: "scope.roleDefinitionId",
        type: {
          name: "String"
        }
      },
      principalType1: {
        readOnly: true,
        serializedName: "scope.principalType",
        type: {
          name: "String"
        }
      },
      reviewers: {
        serializedName: "reviewers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewReviewer"
            }
          }
        }
      },
      reviewersType: {
        readOnly: true,
        serializedName: "reviewersType",
        type: {
          name: "String"
        }
      },
      instances: {
        serializedName: "instances",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewInstance"
            }
          }
        }
      }
    }
  }
};

export const AccessReviewScheduleDefinition: msRest.CompositeMapper = {
  serializedName: "AccessReviewScheduleDefinition",
  type: {
    name: "Composite",
    className: "AccessReviewScheduleDefinition",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      descriptionForAdmins: {
        serializedName: "properties.descriptionForAdmins",
        type: {
          name: "String"
        }
      },
      descriptionForReviewers: {
        serializedName: "properties.descriptionForReviewers",
        type: {
          name: "String"
        }
      },
      principalId: {
        readOnly: true,
        serializedName: "properties.createdBy.principalId",
        type: {
          name: "String"
        }
      },
      principalType: {
        readOnly: true,
        serializedName: "properties.createdBy.principalType",
        type: {
          name: "String"
        }
      },
      principalName: {
        readOnly: true,
        serializedName: "properties.createdBy.principalName",
        type: {
          name: "String"
        }
      },
      userPrincipalName: {
        readOnly: true,
        serializedName: "properties.createdBy.userPrincipalName",
        type: {
          name: "String"
        }
      },
      mailNotificationsEnabled: {
        serializedName: "properties.settings.mailNotificationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      reminderNotificationsEnabled: {
        serializedName: "properties.settings.reminderNotificationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      defaultDecisionEnabled: {
        serializedName: "properties.settings.defaultDecisionEnabled",
        type: {
          name: "Boolean"
        }
      },
      justificationRequiredOnApproval: {
        serializedName: "properties.settings.justificationRequiredOnApproval",
        type: {
          name: "Boolean"
        }
      },
      defaultDecision: {
        serializedName: "properties.settings.defaultDecision",
        type: {
          name: "String"
        }
      },
      autoApplyDecisionsEnabled: {
        serializedName: "properties.settings.autoApplyDecisionsEnabled",
        type: {
          name: "Boolean"
        }
      },
      recommendationsEnabled: {
        serializedName: "properties.settings.recommendationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      instanceDurationInDays: {
        serializedName: "properties.settings.instanceDurationInDays",
        type: {
          name: "Number"
        }
      },
      type1: {
        serializedName: "properties.settings.recurrence.pattern.type",
        type: {
          name: "String"
        }
      },
      interval: {
        serializedName: "properties.settings.recurrence.pattern.interval",
        type: {
          name: "Number"
        }
      },
      type2: {
        serializedName: "properties.settings.recurrence.range.type",
        type: {
          name: "String"
        }
      },
      numberOfOccurrences: {
        serializedName: "properties.settings.recurrence.range.numberOfOccurrences",
        type: {
          name: "Number"
        }
      },
      startDate: {
        nullable: false,
        serializedName: "properties.settings.recurrence.range.startDate",
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        nullable: false,
        serializedName: "properties.settings.recurrence.range.endDate",
        type: {
          name: "DateTime"
        }
      },
      resourceId: {
        readOnly: true,
        serializedName: "properties.scope.resourceId",
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        readOnly: true,
        serializedName: "properties.scope.roleDefinitionId",
        type: {
          name: "String"
        }
      },
      principalType1: {
        readOnly: true,
        serializedName: "properties.scope.principalType",
        type: {
          name: "String"
        }
      },
      reviewers: {
        serializedName: "properties.reviewers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewReviewer"
            }
          }
        }
      },
      reviewersType: {
        readOnly: true,
        serializedName: "properties.reviewersType",
        type: {
          name: "String"
        }
      },
      instances: {
        serializedName: "properties.instances",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewInstance"
            }
          }
        }
      }
    }
  }
};

export const AccessReviewDefaultSettings: msRest.CompositeMapper = {
  serializedName: "AccessReviewDefaultSettings",
  type: {
    name: "Composite",
    className: "AccessReviewDefaultSettings",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      mailNotificationsEnabled: {
        serializedName: "properties.mailNotificationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      reminderNotificationsEnabled: {
        serializedName: "properties.reminderNotificationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      defaultDecisionEnabled: {
        serializedName: "properties.defaultDecisionEnabled",
        type: {
          name: "Boolean"
        }
      },
      justificationRequiredOnApproval: {
        serializedName: "properties.justificationRequiredOnApproval",
        type: {
          name: "Boolean"
        }
      },
      defaultDecision: {
        serializedName: "properties.defaultDecision",
        type: {
          name: "String"
        }
      },
      autoApplyDecisionsEnabled: {
        serializedName: "properties.autoApplyDecisionsEnabled",
        type: {
          name: "Boolean"
        }
      },
      recommendationsEnabled: {
        serializedName: "properties.recommendationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      instanceDurationInDays: {
        serializedName: "properties.instanceDurationInDays",
        type: {
          name: "Number"
        }
      },
      type1: {
        serializedName: "properties.recurrence.pattern.type",
        type: {
          name: "String"
        }
      },
      interval: {
        serializedName: "properties.recurrence.pattern.interval",
        type: {
          name: "Number"
        }
      },
      type2: {
        serializedName: "properties.recurrence.range.type",
        type: {
          name: "String"
        }
      },
      numberOfOccurrences: {
        serializedName: "properties.recurrence.range.numberOfOccurrences",
        type: {
          name: "Number"
        }
      },
      startDate: {
        nullable: false,
        serializedName: "properties.recurrence.range.startDate",
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        nullable: false,
        serializedName: "properties.recurrence.range.endDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AccessReviewDecisionTarget: msRest.CompositeMapper = {
  serializedName: "AccessReviewDecisionTarget",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "AccessReviewDecisionTarget",
    className: "AccessReviewDecisionTarget",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewDecisionProperties: msRest.CompositeMapper = {
  serializedName: "AccessReviewDecisionProperties",
  type: {
    name: "Composite",
    className: "AccessReviewDecisionProperties",
    modelProperties: {
      type: {
        required: true,
        serializedName: "target.type",
        type: {
          name: "String"
        }
      },
      recommendation: {
        readOnly: true,
        serializedName: "recommendation",
        type: {
          name: "String"
        }
      },
      decision: {
        serializedName: "decision",
        type: {
          name: "String"
        }
      },
      justification: {
        serializedName: "justification",
        type: {
          name: "String"
        }
      },
      reviewedDateTime: {
        nullable: false,
        readOnly: true,
        serializedName: "reviewedDateTime",
        type: {
          name: "DateTime"
        }
      },
      principalId: {
        readOnly: true,
        serializedName: "reviewedBy.principalId",
        type: {
          name: "String"
        }
      },
      principalType: {
        readOnly: true,
        serializedName: "reviewedBy.principalType",
        type: {
          name: "String"
        }
      },
      principalName: {
        readOnly: true,
        serializedName: "reviewedBy.principalName",
        type: {
          name: "String"
        }
      },
      userPrincipalName: {
        readOnly: true,
        serializedName: "reviewedBy.userPrincipalName",
        type: {
          name: "String"
        }
      },
      applyResult: {
        readOnly: true,
        serializedName: "applyResult",
        type: {
          name: "String"
        }
      },
      appliedDateTime: {
        nullable: false,
        readOnly: true,
        serializedName: "appliedDateTime",
        type: {
          name: "DateTime"
        }
      },
      principalId1: {
        readOnly: true,
        serializedName: "appliedBy.principalId",
        type: {
          name: "String"
        }
      },
      principalType1: {
        readOnly: true,
        serializedName: "appliedBy.principalType",
        type: {
          name: "String"
        }
      },
      principalName1: {
        readOnly: true,
        serializedName: "appliedBy.principalName",
        type: {
          name: "String"
        }
      },
      userPrincipalName1: {
        readOnly: true,
        serializedName: "appliedBy.userPrincipalName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewDecision: msRest.CompositeMapper = {
  serializedName: "AccessReviewDecision",
  type: {
    name: "Composite",
    className: "AccessReviewDecision",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      type1: {
        required: true,
        serializedName: "properties.target.type",
        type: {
          name: "String"
        }
      },
      recommendation: {
        readOnly: true,
        serializedName: "properties.recommendation",
        type: {
          name: "String"
        }
      },
      decision: {
        serializedName: "properties.decision",
        type: {
          name: "String"
        }
      },
      justification: {
        serializedName: "properties.justification",
        type: {
          name: "String"
        }
      },
      reviewedDateTime: {
        nullable: false,
        readOnly: true,
        serializedName: "properties.reviewedDateTime",
        type: {
          name: "DateTime"
        }
      },
      principalId: {
        readOnly: true,
        serializedName: "properties.reviewedBy.principalId",
        type: {
          name: "String"
        }
      },
      principalType: {
        readOnly: true,
        serializedName: "properties.reviewedBy.principalType",
        type: {
          name: "String"
        }
      },
      principalName: {
        readOnly: true,
        serializedName: "properties.reviewedBy.principalName",
        type: {
          name: "String"
        }
      },
      userPrincipalName: {
        readOnly: true,
        serializedName: "properties.reviewedBy.userPrincipalName",
        type: {
          name: "String"
        }
      },
      applyResult: {
        readOnly: true,
        serializedName: "properties.applyResult",
        type: {
          name: "String"
        }
      },
      appliedDateTime: {
        nullable: false,
        readOnly: true,
        serializedName: "properties.appliedDateTime",
        type: {
          name: "DateTime"
        }
      },
      principalId1: {
        readOnly: true,
        serializedName: "properties.appliedBy.principalId",
        type: {
          name: "String"
        }
      },
      principalType1: {
        readOnly: true,
        serializedName: "properties.appliedBy.principalType",
        type: {
          name: "String"
        }
      },
      principalName1: {
        readOnly: true,
        serializedName: "properties.appliedBy.principalName",
        type: {
          name: "String"
        }
      },
      userPrincipalName1: {
        readOnly: true,
        serializedName: "properties.appliedBy.userPrincipalName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserDecisionTarget: msRest.CompositeMapper = {
  serializedName: "user",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AccessReviewDecisionTarget.type.polymorphicDiscriminator,
    uberParent: "AccessReviewDecisionTarget",
    className: "UserDecisionTarget",
    modelProperties: {
      ...AccessReviewDecisionTarget.type.modelProperties,
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      principalName: {
        readOnly: true,
        serializedName: "principalName",
        type: {
          name: "String"
        }
      },
      userPrincipalName: {
        readOnly: true,
        serializedName: "userPrincipalName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServicePrincipalDecisionTarget: msRest.CompositeMapper = {
  serializedName: "servicePrincipal",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AccessReviewDecisionTarget.type.polymorphicDiscriminator,
    uberParent: "AccessReviewDecisionTarget",
    className: "ServicePrincipalDecisionTarget",
    modelProperties: {
      ...AccessReviewDecisionTarget.type.modelProperties,
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      principalName: {
        readOnly: true,
        serializedName: "principalName",
        type: {
          name: "String"
        }
      },
      appId: {
        readOnly: true,
        serializedName: "appId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorDefinitionProperties: msRest.CompositeMapper = {
  serializedName: "ErrorDefinitionProperties",
  type: {
    name: "Composite",
    className: "ErrorDefinitionProperties",
    modelProperties: {
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorDefinition: msRest.CompositeMapper = {
  serializedName: "ErrorDefinition",
  type: {
    name: "Composite",
    className: "ErrorDefinition",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDefinitionProperties"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "OperationDisplay",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewScheduleDefinitionListResult: msRest.CompositeMapper = {
  serializedName: "AccessReviewScheduleDefinitionListResult",
  type: {
    name: "Composite",
    className: "AccessReviewScheduleDefinitionListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewScheduleDefinition"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewInstanceListResult: msRest.CompositeMapper = {
  serializedName: "AccessReviewInstanceListResult",
  type: {
    name: "Composite",
    className: "AccessReviewInstanceListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewInstance"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewDecisionListResult: msRest.CompositeMapper = {
  serializedName: "AccessReviewDecisionListResult",
  type: {
    name: "Composite",
    className: "AccessReviewDecisionListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewDecision"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const discriminators = {
  'AccessReviewDecisionTarget' : AccessReviewDecisionTarget,
  'AccessReviewDecisionTarget.user' : UserDecisionTarget,
  'AccessReviewDecisionTarget.servicePrincipal' : ServicePrincipalDecisionTarget

};
