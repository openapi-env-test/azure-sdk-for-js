/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/accessReviewInstanceMyDecisionsMappers";
import * as Parameters from "../models/parameters";
import { AuthorizationManagementClientContext } from "../authorizationManagementClientContext";

/** Class representing a AccessReviewInstanceMyDecisions. */
export class AccessReviewInstanceMyDecisions {
  private readonly client: AuthorizationManagementClientContext;

  /**
   * Create a AccessReviewInstanceMyDecisions.
   * @param {AuthorizationManagementClientContext} client Reference to the service client.
   */
  constructor(client: AuthorizationManagementClientContext) {
    this.client = client;
  }

  /**
   * Get my access review instance decisions.
   * @param scheduleDefinitionId The id of the access review schedule definition.
   * @param id The id of the access review instance.
   * @param [options] The optional parameters
   * @returns Promise<Models.AccessReviewInstanceMyDecisionsListResponse>
   */
  list(scheduleDefinitionId: string, id: string, options?: msRest.RequestOptionsBase): Promise<Models.AccessReviewInstanceMyDecisionsListResponse>;
  /**
   * @param scheduleDefinitionId The id of the access review schedule definition.
   * @param id The id of the access review instance.
   * @param callback The callback
   */
  list(scheduleDefinitionId: string, id: string, callback: msRest.ServiceCallback<Models.AccessReviewDecisionListResult>): void;
  /**
   * @param scheduleDefinitionId The id of the access review schedule definition.
   * @param id The id of the access review instance.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(scheduleDefinitionId: string, id: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AccessReviewDecisionListResult>): void;
  list(scheduleDefinitionId: string, id: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AccessReviewDecisionListResult>, callback?: msRest.ServiceCallback<Models.AccessReviewDecisionListResult>): Promise<Models.AccessReviewInstanceMyDecisionsListResponse> {
    return this.client.sendOperationRequest(
      {
        scheduleDefinitionId,
        id,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.AccessReviewInstanceMyDecisionsListResponse>;
  }

  /**
   * Get my single access review instance decision.
   * @param scheduleDefinitionId The id of the access review schedule definition.
   * @param id The id of the access review instance.
   * @param decisionId The id of the decision record.
   * @param [options] The optional parameters
   * @returns Promise<Models.AccessReviewInstanceMyDecisionsGetByIdResponse>
   */
  getById(scheduleDefinitionId: string, id: string, decisionId: string, options?: msRest.RequestOptionsBase): Promise<Models.AccessReviewInstanceMyDecisionsGetByIdResponse>;
  /**
   * @param scheduleDefinitionId The id of the access review schedule definition.
   * @param id The id of the access review instance.
   * @param decisionId The id of the decision record.
   * @param callback The callback
   */
  getById(scheduleDefinitionId: string, id: string, decisionId: string, callback: msRest.ServiceCallback<Models.AccessReviewDecision>): void;
  /**
   * @param scheduleDefinitionId The id of the access review schedule definition.
   * @param id The id of the access review instance.
   * @param decisionId The id of the decision record.
   * @param options The optional parameters
   * @param callback The callback
   */
  getById(scheduleDefinitionId: string, id: string, decisionId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AccessReviewDecision>): void;
  getById(scheduleDefinitionId: string, id: string, decisionId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AccessReviewDecision>, callback?: msRest.ServiceCallback<Models.AccessReviewDecision>): Promise<Models.AccessReviewInstanceMyDecisionsGetByIdResponse> {
    return this.client.sendOperationRequest(
      {
        scheduleDefinitionId,
        id,
        decisionId,
        options
      },
      getByIdOperationSpec,
      callback) as Promise<Models.AccessReviewInstanceMyDecisionsGetByIdResponse>;
  }

  /**
   * Record a decision.
   * @param scheduleDefinitionId The id of the access review schedule definition.
   * @param id The id of the access review instance.
   * @param decisionId The id of the decision record.
   * @param properties Access review decision properties to patch.
   * @param [options] The optional parameters
   * @returns Promise<Models.AccessReviewInstanceMyDecisionsPatchResponse>
   */
  patch(scheduleDefinitionId: string, id: string, decisionId: string, properties: Models.AccessReviewDecisionProperties, options?: msRest.RequestOptionsBase): Promise<Models.AccessReviewInstanceMyDecisionsPatchResponse>;
  /**
   * @param scheduleDefinitionId The id of the access review schedule definition.
   * @param id The id of the access review instance.
   * @param decisionId The id of the decision record.
   * @param properties Access review decision properties to patch.
   * @param callback The callback
   */
  patch(scheduleDefinitionId: string, id: string, decisionId: string, properties: Models.AccessReviewDecisionProperties, callback: msRest.ServiceCallback<Models.AccessReviewDecision>): void;
  /**
   * @param scheduleDefinitionId The id of the access review schedule definition.
   * @param id The id of the access review instance.
   * @param decisionId The id of the decision record.
   * @param properties Access review decision properties to patch.
   * @param options The optional parameters
   * @param callback The callback
   */
  patch(scheduleDefinitionId: string, id: string, decisionId: string, properties: Models.AccessReviewDecisionProperties, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AccessReviewDecision>): void;
  patch(scheduleDefinitionId: string, id: string, decisionId: string, properties: Models.AccessReviewDecisionProperties, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AccessReviewDecision>, callback?: msRest.ServiceCallback<Models.AccessReviewDecision>): Promise<Models.AccessReviewInstanceMyDecisionsPatchResponse> {
    return this.client.sendOperationRequest(
      {
        scheduleDefinitionId,
        id,
        decisionId,
        properties,
        options
      },
      patchOperationSpec,
      callback) as Promise<Models.AccessReviewInstanceMyDecisionsPatchResponse>;
  }

  /**
   * Get my access review instance decisions.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AccessReviewInstanceMyDecisionsListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AccessReviewInstanceMyDecisionsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AccessReviewDecisionListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AccessReviewDecisionListResult>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AccessReviewDecisionListResult>, callback?: msRest.ServiceCallback<Models.AccessReviewDecisionListResult>): Promise<Models.AccessReviewInstanceMyDecisionsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.AccessReviewInstanceMyDecisionsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/decisions",
  urlParameters: [
    Parameters.scheduleDefinitionId,
    Parameters.id
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AccessReviewDecisionListResult
    },
    default: {
      bodyMapper: Mappers.ErrorDefinition
    }
  },
  serializer
};

const getByIdOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/decisions/{decisionId}",
  urlParameters: [
    Parameters.scheduleDefinitionId,
    Parameters.id,
    Parameters.decisionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AccessReviewDecision
    },
    default: {
      bodyMapper: Mappers.ErrorDefinition
    }
  },
  serializer
};

const patchOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/decisions/{decisionId}",
  urlParameters: [
    Parameters.scheduleDefinitionId,
    Parameters.id,
    Parameters.decisionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "properties",
    mapper: {
      ...Mappers.AccessReviewDecisionProperties,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.AccessReviewDecision
    },
    default: {
      bodyMapper: Mappers.ErrorDefinition
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AccessReviewDecisionListResult
    },
    default: {
      bodyMapper: Mappers.ErrorDefinition
    }
  },
  serializer
};
