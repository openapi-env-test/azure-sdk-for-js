/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/accessReviewDefaultSettingsOperationsMappers";
import * as Parameters from "../models/parameters";
import { AuthorizationManagementClientContext } from "../authorizationManagementClientContext";

/** Class representing a AccessReviewDefaultSettingsOperations. */
export class AccessReviewDefaultSettingsOperations {
  private readonly client: AuthorizationManagementClientContext;

  /**
   * Create a AccessReviewDefaultSettingsOperations.
   * @param {AuthorizationManagementClientContext} client Reference to the service client.
   */
  constructor(client: AuthorizationManagementClientContext) {
    this.client = client;
  }

  /**
   * Get access review default settings for the subscription
   * @param [options] The optional parameters
   * @returns Promise<Models.AccessReviewDefaultSettingsGetResponse>
   */
  get(options?: msRest.RequestOptionsBase): Promise<Models.AccessReviewDefaultSettingsGetResponse>;
  /**
   * @param callback The callback
   */
  get(callback: msRest.ServiceCallback<Models.AccessReviewDefaultSettings>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  get(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AccessReviewDefaultSettings>): void;
  get(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AccessReviewDefaultSettings>, callback?: msRest.ServiceCallback<Models.AccessReviewDefaultSettings>): Promise<Models.AccessReviewDefaultSettingsGetResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      getOperationSpec,
      callback) as Promise<Models.AccessReviewDefaultSettingsGetResponse>;
  }

  /**
   * Get access review default settings for the subscription
   * @param properties Access review schedule settings.
   * @param [options] The optional parameters
   * @returns Promise<Models.AccessReviewDefaultSettingsPutResponse>
   */
  put(properties: Models.AccessReviewScheduleSettings, options?: msRest.RequestOptionsBase): Promise<Models.AccessReviewDefaultSettingsPutResponse>;
  /**
   * @param properties Access review schedule settings.
   * @param callback The callback
   */
  put(properties: Models.AccessReviewScheduleSettings, callback: msRest.ServiceCallback<Models.AccessReviewDefaultSettings>): void;
  /**
   * @param properties Access review schedule settings.
   * @param options The optional parameters
   * @param callback The callback
   */
  put(properties: Models.AccessReviewScheduleSettings, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AccessReviewDefaultSettings>): void;
  put(properties: Models.AccessReviewScheduleSettings, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AccessReviewDefaultSettings>, callback?: msRest.ServiceCallback<Models.AccessReviewDefaultSettings>): Promise<Models.AccessReviewDefaultSettingsPutResponse> {
    return this.client.sendOperationRequest(
      {
        properties,
        options
      },
      putOperationSpec,
      callback) as Promise<Models.AccessReviewDefaultSettingsPutResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewScheduleSettings/default",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AccessReviewDefaultSettings
    },
    default: {
      bodyMapper: Mappers.ErrorDefinition
    }
  },
  serializer
};

const putOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewScheduleSettings/default",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "properties",
    mapper: {
      ...Mappers.AccessReviewScheduleSettings,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.AccessReviewDefaultSettings
    },
    default: {
      bodyMapper: Mappers.ErrorDefinition
    }
  },
  serializer
};
