/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { ComputeManagementClientContext } from "./computeManagementClientContext";


class ComputeManagementClient extends ComputeManagementClientContext {
  // Operation groups
  disks: operations.Disks;
  snapshots: operations.Snapshots;
  diskEncryptionSets: operations.DiskEncryptionSets;
  diskAccesses: operations.DiskAccesses;
  diskRestorePoint: operations.DiskRestorePointOperations;
  galleries: operations.Galleries;
  galleryImages: operations.GalleryImages;
  galleryImageVersions: operations.GalleryImageVersions;
  galleryApplications: operations.GalleryApplications;
  galleryApplicationVersions: operations.GalleryApplicationVersions;
  gallerySharingProfile: operations.GallerySharingProfile;
  sharedGalleries: operations.SharedGalleries;
  sharedGalleryImages: operations.SharedGalleryImages;
  sharedGalleryImageVersions: operations.SharedGalleryImageVersions;

  /**
   * Initializes a new instance of the ComputeManagementClient class.
   * @param credentials Credentials needed for the client to connect to Azure.
   * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure
   * subscription. The subscription ID forms part of the URI for every service call.
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials, subscriptionId: string, options?: Models.ComputeManagementClientOptions) {
    super(credentials, subscriptionId, options);
    this.disks = new operations.Disks(this);
    this.snapshots = new operations.Snapshots(this);
    this.diskEncryptionSets = new operations.DiskEncryptionSets(this);
    this.diskAccesses = new operations.DiskAccesses(this);
    this.diskRestorePoint = new operations.DiskRestorePointOperations(this);
    this.galleries = new operations.Galleries(this);
    this.galleryImages = new operations.GalleryImages(this);
    this.galleryImageVersions = new operations.GalleryImageVersions(this);
    this.galleryApplications = new operations.GalleryApplications(this);
    this.galleryApplicationVersions = new operations.GalleryApplicationVersions(this);
    this.gallerySharingProfile = new operations.GallerySharingProfile(this);
    this.sharedGalleries = new operations.SharedGalleries(this);
    this.sharedGalleryImages = new operations.SharedGalleryImages(this);
    this.sharedGalleryImageVersions = new operations.SharedGalleryImageVersions(this);
  }
}

// Operation Specifications

export {
  ComputeManagementClient,
  ComputeManagementClientContext,
  Models as ComputeManagementModels,
  Mappers as ComputeManagementMappers
};
export * from "./operations";
