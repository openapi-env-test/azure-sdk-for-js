/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ProxyOnlyResource: msRest.CompositeMapper = {
  serializedName: "ProxyOnlyResource",
  type: {
    name: "Composite",
    className: "ProxyOnlyResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiskSku: msRest.CompositeMapper = {
  serializedName: "DiskSku",
  type: {
    name: "Composite",
    className: "DiskSku",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        readOnly: true,
        serializedName: "tier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExtendedLocation: msRest.CompositeMapper = {
  serializedName: "ExtendedLocation",
  type: {
    name: "Composite",
    className: "ExtendedLocation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PurchasePlan: msRest.CompositeMapper = {
  serializedName: "PurchasePlan",
  type: {
    name: "Composite",
    className: "PurchasePlan",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      publisher: {
        required: true,
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      product: {
        required: true,
        serializedName: "product",
        type: {
          name: "String"
        }
      },
      promotionCode: {
        serializedName: "promotionCode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageDiskReference: msRest.CompositeMapper = {
  serializedName: "ImageDiskReference",
  type: {
    name: "Composite",
    className: "ImageDiskReference",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      lun: {
        serializedName: "lun",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CreationData: msRest.CompositeMapper = {
  serializedName: "CreationData",
  type: {
    name: "Composite",
    className: "CreationData",
    modelProperties: {
      createOption: {
        required: true,
        serializedName: "createOption",
        type: {
          name: "String"
        }
      },
      storageAccountId: {
        serializedName: "storageAccountId",
        type: {
          name: "String"
        }
      },
      imageReference: {
        serializedName: "imageReference",
        type: {
          name: "Composite",
          className: "ImageDiskReference"
        }
      },
      galleryImageReference: {
        serializedName: "galleryImageReference",
        type: {
          name: "Composite",
          className: "ImageDiskReference"
        }
      },
      sourceUri: {
        serializedName: "sourceUri",
        type: {
          name: "String"
        }
      },
      sourceResourceId: {
        serializedName: "sourceResourceId",
        type: {
          name: "String"
        }
      },
      sourceUniqueId: {
        readOnly: true,
        serializedName: "sourceUniqueId",
        type: {
          name: "String"
        }
      },
      uploadSizeBytes: {
        serializedName: "uploadSizeBytes",
        type: {
          name: "Number"
        }
      },
      logicalSectorSize: {
        serializedName: "logicalSectorSize",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SourceVault: msRest.CompositeMapper = {
  serializedName: "SourceVault",
  type: {
    name: "Composite",
    className: "SourceVault",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyVaultAndSecretReference: msRest.CompositeMapper = {
  serializedName: "KeyVaultAndSecretReference",
  type: {
    name: "Composite",
    className: "KeyVaultAndSecretReference",
    modelProperties: {
      sourceVault: {
        required: true,
        serializedName: "sourceVault",
        type: {
          name: "Composite",
          className: "SourceVault"
        }
      },
      secretUrl: {
        required: true,
        serializedName: "secretUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyVaultAndKeyReference: msRest.CompositeMapper = {
  serializedName: "KeyVaultAndKeyReference",
  type: {
    name: "Composite",
    className: "KeyVaultAndKeyReference",
    modelProperties: {
      sourceVault: {
        required: true,
        serializedName: "sourceVault",
        type: {
          name: "Composite",
          className: "SourceVault"
        }
      },
      keyUrl: {
        required: true,
        serializedName: "keyUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EncryptionSettingsElement: msRest.CompositeMapper = {
  serializedName: "EncryptionSettingsElement",
  type: {
    name: "Composite",
    className: "EncryptionSettingsElement",
    modelProperties: {
      diskEncryptionKey: {
        serializedName: "diskEncryptionKey",
        type: {
          name: "Composite",
          className: "KeyVaultAndSecretReference"
        }
      },
      keyEncryptionKey: {
        serializedName: "keyEncryptionKey",
        type: {
          name: "Composite",
          className: "KeyVaultAndKeyReference"
        }
      }
    }
  }
};

export const EncryptionSettingsCollection: msRest.CompositeMapper = {
  serializedName: "EncryptionSettingsCollection",
  type: {
    name: "Composite",
    className: "EncryptionSettingsCollection",
    modelProperties: {
      enabled: {
        required: true,
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      encryptionSettings: {
        serializedName: "encryptionSettings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EncryptionSettingsElement"
            }
          }
        }
      },
      encryptionSettingsVersion: {
        serializedName: "encryptionSettingsVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Encryption: msRest.CompositeMapper = {
  serializedName: "Encryption",
  type: {
    name: "Composite",
    className: "Encryption",
    modelProperties: {
      diskEncryptionSetId: {
        serializedName: "diskEncryptionSetId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ShareInfoElement: msRest.CompositeMapper = {
  serializedName: "ShareInfoElement",
  type: {
    name: "Composite",
    className: "ShareInfoElement",
    modelProperties: {
      vmUri: {
        readOnly: true,
        serializedName: "vmUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Disk: msRest.CompositeMapper = {
  serializedName: "Disk",
  type: {
    name: "Composite",
    className: "Disk",
    modelProperties: {
      ...Resource.type.modelProperties,
      managedBy: {
        readOnly: true,
        serializedName: "managedBy",
        type: {
          name: "String"
        }
      },
      managedByExtended: {
        readOnly: true,
        serializedName: "managedByExtended",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "DiskSku"
        }
      },
      zones: {
        serializedName: "zones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation"
        }
      },
      timeCreated: {
        readOnly: true,
        serializedName: "properties.timeCreated",
        type: {
          name: "DateTime"
        }
      },
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "Enum",
          allowedValues: [
            "Windows",
            "Linux"
          ]
        }
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String"
        }
      },
      purchasePlan: {
        serializedName: "properties.purchasePlan",
        type: {
          name: "Composite",
          className: "PurchasePlan"
        }
      },
      creationData: {
        required: true,
        serializedName: "properties.creationData",
        type: {
          name: "Composite",
          className: "CreationData"
        }
      },
      diskSizeGB: {
        serializedName: "properties.diskSizeGB",
        type: {
          name: "Number"
        }
      },
      diskSizeBytes: {
        readOnly: true,
        serializedName: "properties.diskSizeBytes",
        type: {
          name: "Number"
        }
      },
      uniqueId: {
        readOnly: true,
        serializedName: "properties.uniqueId",
        type: {
          name: "String"
        }
      },
      encryptionSettingsCollection: {
        serializedName: "properties.encryptionSettingsCollection",
        type: {
          name: "Composite",
          className: "EncryptionSettingsCollection"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      diskIOPSReadWrite: {
        serializedName: "properties.diskIOPSReadWrite",
        type: {
          name: "Number"
        }
      },
      diskMBpsReadWrite: {
        serializedName: "properties.diskMBpsReadWrite",
        type: {
          name: "Number"
        }
      },
      diskIOPSReadOnly: {
        serializedName: "properties.diskIOPSReadOnly",
        type: {
          name: "Number"
        }
      },
      diskMBpsReadOnly: {
        serializedName: "properties.diskMBpsReadOnly",
        type: {
          name: "Number"
        }
      },
      diskState: {
        serializedName: "properties.diskState",
        type: {
          name: "String"
        }
      },
      encryption: {
        serializedName: "properties.encryption",
        type: {
          name: "Composite",
          className: "Encryption"
        }
      },
      maxShares: {
        serializedName: "properties.maxShares",
        type: {
          name: "Number"
        }
      },
      shareInfo: {
        readOnly: true,
        serializedName: "properties.shareInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ShareInfoElement"
            }
          }
        }
      },
      networkAccessPolicy: {
        serializedName: "properties.networkAccessPolicy",
        type: {
          name: "String"
        }
      },
      diskAccessId: {
        serializedName: "properties.diskAccessId",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "properties.tier",
        type: {
          name: "String"
        }
      },
      burstingEnabled: {
        serializedName: "properties.burstingEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DiskUpdate: msRest.CompositeMapper = {
  serializedName: "DiskUpdate",
  type: {
    name: "Composite",
    className: "DiskUpdate",
    modelProperties: {
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "Enum",
          allowedValues: [
            "Windows",
            "Linux"
          ]
        }
      },
      diskSizeGB: {
        serializedName: "properties.diskSizeGB",
        type: {
          name: "Number"
        }
      },
      encryptionSettingsCollection: {
        serializedName: "properties.encryptionSettingsCollection",
        type: {
          name: "Composite",
          className: "EncryptionSettingsCollection"
        }
      },
      diskIOPSReadWrite: {
        serializedName: "properties.diskIOPSReadWrite",
        type: {
          name: "Number"
        }
      },
      diskMBpsReadWrite: {
        serializedName: "properties.diskMBpsReadWrite",
        type: {
          name: "Number"
        }
      },
      diskIOPSReadOnly: {
        serializedName: "properties.diskIOPSReadOnly",
        type: {
          name: "Number"
        }
      },
      diskMBpsReadOnly: {
        serializedName: "properties.diskMBpsReadOnly",
        type: {
          name: "Number"
        }
      },
      maxShares: {
        serializedName: "properties.maxShares",
        type: {
          name: "Number"
        }
      },
      encryption: {
        serializedName: "properties.encryption",
        type: {
          name: "Composite",
          className: "Encryption"
        }
      },
      networkAccessPolicy: {
        serializedName: "properties.networkAccessPolicy",
        type: {
          name: "String"
        }
      },
      diskAccessId: {
        serializedName: "properties.diskAccessId",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "properties.tier",
        type: {
          name: "String"
        }
      },
      burstingEnabled: {
        serializedName: "properties.burstingEnabled",
        type: {
          name: "Boolean"
        }
      },
      purchasePlan: {
        serializedName: "properties.purchasePlan",
        type: {
          name: "Composite",
          className: "PurchasePlan"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "DiskSku"
        }
      }
    }
  }
};

export const SnapshotSku: msRest.CompositeMapper = {
  serializedName: "SnapshotSku",
  type: {
    name: "Composite",
    className: "SnapshotSku",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        readOnly: true,
        serializedName: "tier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyForDiskEncryptionSet: msRest.CompositeMapper = {
  serializedName: "KeyForDiskEncryptionSet",
  type: {
    name: "Composite",
    className: "KeyForDiskEncryptionSet",
    modelProperties: {
      sourceVault: {
        serializedName: "sourceVault",
        type: {
          name: "Composite",
          className: "SourceVault"
        }
      },
      keyUrl: {
        required: true,
        serializedName: "keyUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GrantAccessData: msRest.CompositeMapper = {
  serializedName: "GrantAccessData",
  type: {
    name: "Composite",
    className: "GrantAccessData",
    modelProperties: {
      access: {
        required: true,
        serializedName: "access",
        type: {
          name: "String"
        }
      },
      durationInSeconds: {
        required: true,
        serializedName: "durationInSeconds",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AccessUri: msRest.CompositeMapper = {
  serializedName: "AccessUri",
  type: {
    name: "Composite",
    className: "AccessUri",
    modelProperties: {
      accessSAS: {
        readOnly: true,
        serializedName: "accessSAS",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Snapshot: msRest.CompositeMapper = {
  serializedName: "Snapshot",
  type: {
    name: "Composite",
    className: "Snapshot",
    modelProperties: {
      ...Resource.type.modelProperties,
      managedBy: {
        readOnly: true,
        serializedName: "managedBy",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "SnapshotSku"
        }
      },
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation"
        }
      },
      timeCreated: {
        readOnly: true,
        serializedName: "properties.timeCreated",
        type: {
          name: "DateTime"
        }
      },
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "Enum",
          allowedValues: [
            "Windows",
            "Linux"
          ]
        }
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String"
        }
      },
      purchasePlan: {
        serializedName: "properties.purchasePlan",
        type: {
          name: "Composite",
          className: "PurchasePlan"
        }
      },
      creationData: {
        required: true,
        serializedName: "properties.creationData",
        type: {
          name: "Composite",
          className: "CreationData"
        }
      },
      diskSizeGB: {
        serializedName: "properties.diskSizeGB",
        type: {
          name: "Number"
        }
      },
      diskSizeBytes: {
        readOnly: true,
        serializedName: "properties.diskSizeBytes",
        type: {
          name: "Number"
        }
      },
      diskState: {
        serializedName: "properties.diskState",
        type: {
          name: "String"
        }
      },
      uniqueId: {
        readOnly: true,
        serializedName: "properties.uniqueId",
        type: {
          name: "String"
        }
      },
      encryptionSettingsCollection: {
        serializedName: "properties.encryptionSettingsCollection",
        type: {
          name: "Composite",
          className: "EncryptionSettingsCollection"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      incremental: {
        serializedName: "properties.incremental",
        type: {
          name: "Boolean"
        }
      },
      encryption: {
        serializedName: "properties.encryption",
        type: {
          name: "Composite",
          className: "Encryption"
        }
      },
      networkAccessPolicy: {
        serializedName: "properties.networkAccessPolicy",
        type: {
          name: "String"
        }
      },
      diskAccessId: {
        serializedName: "properties.diskAccessId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SnapshotUpdate: msRest.CompositeMapper = {
  serializedName: "SnapshotUpdate",
  type: {
    name: "Composite",
    className: "SnapshotUpdate",
    modelProperties: {
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "Enum",
          allowedValues: [
            "Windows",
            "Linux"
          ]
        }
      },
      diskSizeGB: {
        serializedName: "properties.diskSizeGB",
        type: {
          name: "Number"
        }
      },
      encryptionSettingsCollection: {
        serializedName: "properties.encryptionSettingsCollection",
        type: {
          name: "Composite",
          className: "EncryptionSettingsCollection"
        }
      },
      encryption: {
        serializedName: "properties.encryption",
        type: {
          name: "Composite",
          className: "Encryption"
        }
      },
      networkAccessPolicy: {
        serializedName: "properties.networkAccessPolicy",
        type: {
          name: "String"
        }
      },
      diskAccessId: {
        serializedName: "properties.diskAccessId",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "SnapshotSku"
        }
      }
    }
  }
};

export const EncryptionSetIdentity: msRest.CompositeMapper = {
  serializedName: "EncryptionSetIdentity",
  type: {
    name: "Composite",
    className: "EncryptionSetIdentity",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiskEncryptionSet: msRest.CompositeMapper = {
  serializedName: "DiskEncryptionSet",
  type: {
    name: "Composite",
    className: "DiskEncryptionSet",
    modelProperties: {
      ...Resource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "EncryptionSetIdentity"
        }
      },
      encryptionType: {
        serializedName: "properties.encryptionType",
        type: {
          name: "String"
        }
      },
      activeKey: {
        serializedName: "properties.activeKey",
        type: {
          name: "Composite",
          className: "KeyForDiskEncryptionSet"
        }
      },
      previousKeys: {
        readOnly: true,
        serializedName: "properties.previousKeys",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KeyForDiskEncryptionSet"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiskEncryptionSetUpdate: msRest.CompositeMapper = {
  serializedName: "DiskEncryptionSetUpdate",
  type: {
    name: "Composite",
    className: "DiskEncryptionSetUpdate",
    modelProperties: {
      encryptionType: {
        serializedName: "properties.encryptionType",
        type: {
          name: "String"
        }
      },
      activeKey: {
        serializedName: "properties.activeKey",
        type: {
          name: "Composite",
          className: "KeyForDiskEncryptionSet"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PrivateEndpoint: msRest.CompositeMapper = {
  serializedName: "PrivateEndpoint",
  type: {
    name: "Composite",
    className: "PrivateEndpoint",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkServiceConnectionState: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServiceConnectionState",
  type: {
    name: "Composite",
    className: "PrivateLinkServiceConnectionState",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      actionsRequired: {
        serializedName: "actionsRequired",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnection: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointConnection",
  type: {
    name: "Composite",
    className: "PrivateEndpointConnection",
    modelProperties: {
      privateEndpoint: {
        serializedName: "properties.privateEndpoint",
        type: {
          name: "Composite",
          className: "PrivateEndpoint"
        }
      },
      privateLinkServiceConnectionState: {
        required: true,
        serializedName: "properties.privateLinkServiceConnectionState",
        type: {
          name: "Composite",
          className: "PrivateLinkServiceConnectionState"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiskAccess: msRest.CompositeMapper = {
  serializedName: "DiskAccess",
  type: {
    name: "Composite",
    className: "DiskAccess",
    modelProperties: {
      ...Resource.type.modelProperties,
      privateEndpointConnections: {
        readOnly: true,
        serializedName: "properties.privateEndpointConnections",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      timeCreated: {
        readOnly: true,
        serializedName: "properties.timeCreated",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const DiskAccessUpdate: msRest.CompositeMapper = {
  serializedName: "DiskAccessUpdate",
  type: {
    name: "Composite",
    className: "DiskAccessUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PrivateLinkResource: msRest.CompositeMapper = {
  serializedName: "PrivateLinkResource",
  type: {
    name: "Composite",
    className: "PrivateLinkResource",
    modelProperties: {
      groupId: {
        readOnly: true,
        serializedName: "properties.groupId",
        type: {
          name: "String"
        }
      },
      requiredMembers: {
        readOnly: true,
        serializedName: "properties.requiredMembers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      requiredZoneNames: {
        serializedName: "properties.requiredZoneNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiskRestorePoint: msRest.CompositeMapper = {
  serializedName: "DiskRestorePoint",
  type: {
    name: "Composite",
    className: "DiskRestorePoint",
    modelProperties: {
      ...ProxyOnlyResource.type.modelProperties,
      timeCreated: {
        readOnly: true,
        serializedName: "properties.timeCreated",
        type: {
          name: "DateTime"
        }
      },
      sourceResourceId: {
        readOnly: true,
        serializedName: "properties.sourceResourceId",
        type: {
          name: "String"
        }
      },
      osType: {
        readOnly: true,
        serializedName: "properties.osType",
        type: {
          name: "Enum",
          allowedValues: [
            "Windows",
            "Linux"
          ]
        }
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String"
        }
      },
      purchasePlan: {
        serializedName: "properties.purchasePlan",
        type: {
          name: "Composite",
          className: "PurchasePlan"
        }
      },
      familyId: {
        readOnly: true,
        serializedName: "properties.familyId",
        type: {
          name: "String"
        }
      },
      sourceUniqueId: {
        readOnly: true,
        serializedName: "properties.sourceUniqueId",
        type: {
          name: "String"
        }
      },
      encryption: {
        readOnly: true,
        serializedName: "properties.encryption",
        type: {
          name: "Composite",
          className: "Encryption"
        }
      }
    }
  }
};

export const PrivateLinkResourceListResult: msRest.CompositeMapper = {
  serializedName: "PrivateLinkResourceListResult",
  type: {
    name: "Composite",
    className: "PrivateLinkResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkResource"
            }
          }
        }
      }
    }
  }
};

export const ApiErrorBase: msRest.CompositeMapper = {
  serializedName: "ApiErrorBase",
  type: {
    name: "Composite",
    className: "ApiErrorBase",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InnerError: msRest.CompositeMapper = {
  serializedName: "InnerError",
  type: {
    name: "Composite",
    className: "InnerError",
    modelProperties: {
      exceptiontype: {
        serializedName: "exceptiontype",
        type: {
          name: "String"
        }
      },
      errordetail: {
        serializedName: "errordetail",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiError: msRest.CompositeMapper = {
  serializedName: "ApiError",
  type: {
    name: "Composite",
    className: "ApiError",
    modelProperties: {
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApiErrorBase"
            }
          }
        }
      },
      innererror: {
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "InnerError"
        }
      },
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryIdentifier: msRest.CompositeMapper = {
  serializedName: "GalleryIdentifier",
  type: {
    name: "Composite",
    className: "GalleryIdentifier",
    modelProperties: {
      uniqueName: {
        readOnly: true,
        serializedName: "uniqueName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SharingProfileGroup: msRest.CompositeMapper = {
  serializedName: "SharingProfileGroup",
  type: {
    name: "Composite",
    className: "SharingProfileGroup",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      ids: {
        serializedName: "ids",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SharingProfile: msRest.CompositeMapper = {
  serializedName: "SharingProfile",
  type: {
    name: "Composite",
    className: "SharingProfile",
    modelProperties: {
      permissions: {
        serializedName: "permissions",
        type: {
          name: "String"
        }
      },
      groups: {
        readOnly: true,
        serializedName: "groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SharingProfileGroup"
            }
          }
        }
      }
    }
  }
};

export const Gallery: msRest.CompositeMapper = {
  serializedName: "Gallery",
  type: {
    name: "Composite",
    className: "Gallery",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      identifier: {
        serializedName: "properties.identifier",
        type: {
          name: "Composite",
          className: "GalleryIdentifier"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      sharingProfile: {
        serializedName: "properties.sharingProfile",
        type: {
          name: "Composite",
          className: "SharingProfile"
        }
      }
    }
  }
};

export const UpdateResourceDefinition: msRest.CompositeMapper = {
  serializedName: "UpdateResourceDefinition",
  type: {
    name: "Composite",
    className: "UpdateResourceDefinition",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const GalleryUpdate: msRest.CompositeMapper = {
  serializedName: "GalleryUpdate",
  type: {
    name: "Composite",
    className: "GalleryUpdate",
    modelProperties: {
      ...UpdateResourceDefinition.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      identifier: {
        serializedName: "properties.identifier",
        type: {
          name: "Composite",
          className: "GalleryIdentifier"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      sharingProfile: {
        serializedName: "properties.sharingProfile",
        type: {
          name: "Composite",
          className: "SharingProfile"
        }
      }
    }
  }
};

export const GalleryApplication: msRest.CompositeMapper = {
  serializedName: "GalleryApplication",
  type: {
    name: "Composite",
    className: "GalleryApplication",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      eula: {
        serializedName: "properties.eula",
        type: {
          name: "String"
        }
      },
      privacyStatementUri: {
        serializedName: "properties.privacyStatementUri",
        type: {
          name: "String"
        }
      },
      releaseNoteUri: {
        serializedName: "properties.releaseNoteUri",
        type: {
          name: "String"
        }
      },
      endOfLifeDate: {
        serializedName: "properties.endOfLifeDate",
        type: {
          name: "DateTime"
        }
      },
      supportedOSType: {
        required: true,
        serializedName: "properties.supportedOSType",
        type: {
          name: "Enum",
          allowedValues: [
            "Windows",
            "Linux"
          ]
        }
      }
    }
  }
};

export const GalleryApplicationUpdate: msRest.CompositeMapper = {
  serializedName: "GalleryApplicationUpdate",
  type: {
    name: "Composite",
    className: "GalleryApplicationUpdate",
    modelProperties: {
      ...UpdateResourceDefinition.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      eula: {
        serializedName: "properties.eula",
        type: {
          name: "String"
        }
      },
      privacyStatementUri: {
        serializedName: "properties.privacyStatementUri",
        type: {
          name: "String"
        }
      },
      releaseNoteUri: {
        serializedName: "properties.releaseNoteUri",
        type: {
          name: "String"
        }
      },
      endOfLifeDate: {
        serializedName: "properties.endOfLifeDate",
        type: {
          name: "DateTime"
        }
      },
      supportedOSType: {
        required: true,
        serializedName: "properties.supportedOSType",
        type: {
          name: "Enum",
          allowedValues: [
            "Windows",
            "Linux"
          ]
        }
      }
    }
  }
};

export const UserArtifactSource: msRest.CompositeMapper = {
  serializedName: "UserArtifactSource",
  type: {
    name: "Composite",
    className: "UserArtifactSource",
    modelProperties: {
      mediaLink: {
        required: true,
        serializedName: "mediaLink",
        type: {
          name: "String"
        }
      },
      defaultConfigurationLink: {
        serializedName: "defaultConfigurationLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserArtifactManage: msRest.CompositeMapper = {
  serializedName: "UserArtifactManage",
  type: {
    name: "Composite",
    className: "UserArtifactManage",
    modelProperties: {
      install: {
        required: true,
        serializedName: "install",
        type: {
          name: "String"
        }
      },
      remove: {
        required: true,
        serializedName: "remove",
        type: {
          name: "String"
        }
      },
      update: {
        serializedName: "update",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryArtifactPublishingProfileBase: msRest.CompositeMapper = {
  serializedName: "GalleryArtifactPublishingProfileBase",
  type: {
    name: "Composite",
    className: "GalleryArtifactPublishingProfileBase",
    modelProperties: {
      targetRegions: {
        serializedName: "targetRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TargetRegion"
            }
          }
        }
      },
      replicaCount: {
        serializedName: "replicaCount",
        type: {
          name: "Number"
        }
      },
      excludeFromLatest: {
        serializedName: "excludeFromLatest",
        type: {
          name: "Boolean"
        }
      },
      publishedDate: {
        readOnly: true,
        serializedName: "publishedDate",
        type: {
          name: "DateTime"
        }
      },
      endOfLifeDate: {
        serializedName: "endOfLifeDate",
        type: {
          name: "DateTime"
        }
      },
      storageAccountType: {
        serializedName: "storageAccountType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryApplicationVersionPublishingProfile: msRest.CompositeMapper = {
  serializedName: "GalleryApplicationVersionPublishingProfile",
  type: {
    name: "Composite",
    className: "GalleryApplicationVersionPublishingProfile",
    modelProperties: {
      ...GalleryArtifactPublishingProfileBase.type.modelProperties,
      source: {
        required: true,
        serializedName: "source",
        type: {
          name: "Composite",
          className: "UserArtifactSource"
        }
      },
      manageActions: {
        serializedName: "manageActions",
        type: {
          name: "Composite",
          className: "UserArtifactManage"
        }
      },
      enableHealthCheck: {
        serializedName: "enableHealthCheck",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const RegionalReplicationStatus: msRest.CompositeMapper = {
  serializedName: "RegionalReplicationStatus",
  type: {
    name: "Composite",
    className: "RegionalReplicationStatus",
    modelProperties: {
      region: {
        readOnly: true,
        serializedName: "region",
        type: {
          name: "String"
        }
      },
      state: {
        readOnly: true,
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "String"
        }
      },
      progress: {
        readOnly: true,
        serializedName: "progress",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ReplicationStatus: msRest.CompositeMapper = {
  serializedName: "ReplicationStatus",
  type: {
    name: "Composite",
    className: "ReplicationStatus",
    modelProperties: {
      aggregatedState: {
        readOnly: true,
        serializedName: "aggregatedState",
        type: {
          name: "String"
        }
      },
      summary: {
        readOnly: true,
        serializedName: "summary",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RegionalReplicationStatus"
            }
          }
        }
      }
    }
  }
};

export const GalleryApplicationVersion: msRest.CompositeMapper = {
  serializedName: "GalleryApplicationVersion",
  type: {
    name: "Composite",
    className: "GalleryApplicationVersion",
    modelProperties: {
      ...Resource.type.modelProperties,
      publishingProfile: {
        required: true,
        serializedName: "properties.publishingProfile",
        type: {
          name: "Composite",
          className: "GalleryApplicationVersionPublishingProfile"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      replicationStatus: {
        readOnly: true,
        serializedName: "properties.replicationStatus",
        type: {
          name: "Composite",
          className: "ReplicationStatus"
        }
      }
    }
  }
};

export const GalleryApplicationVersionUpdate: msRest.CompositeMapper = {
  serializedName: "GalleryApplicationVersionUpdate",
  type: {
    name: "Composite",
    className: "GalleryApplicationVersionUpdate",
    modelProperties: {
      ...UpdateResourceDefinition.type.modelProperties,
      publishingProfile: {
        required: true,
        serializedName: "properties.publishingProfile",
        type: {
          name: "Composite",
          className: "GalleryApplicationVersionPublishingProfile"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      replicationStatus: {
        readOnly: true,
        serializedName: "properties.replicationStatus",
        type: {
          name: "Composite",
          className: "ReplicationStatus"
        }
      }
    }
  }
};

export const GalleryImageFeature: msRest.CompositeMapper = {
  serializedName: "GalleryImageFeature",
  type: {
    name: "Composite",
    className: "GalleryImageFeature",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryImageIdentifier: msRest.CompositeMapper = {
  serializedName: "GalleryImageIdentifier",
  type: {
    name: "Composite",
    className: "GalleryImageIdentifier",
    modelProperties: {
      publisher: {
        required: true,
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      offer: {
        required: true,
        serializedName: "offer",
        type: {
          name: "String"
        }
      },
      sku: {
        required: true,
        serializedName: "sku",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceRange: msRest.CompositeMapper = {
  serializedName: "ResourceRange",
  type: {
    name: "Composite",
    className: "ResourceRange",
    modelProperties: {
      min: {
        serializedName: "min",
        type: {
          name: "Number"
        }
      },
      max: {
        serializedName: "max",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RecommendedMachineConfiguration: msRest.CompositeMapper = {
  serializedName: "RecommendedMachineConfiguration",
  type: {
    name: "Composite",
    className: "RecommendedMachineConfiguration",
    modelProperties: {
      vCPUs: {
        serializedName: "vCPUs",
        type: {
          name: "Composite",
          className: "ResourceRange"
        }
      },
      memory: {
        serializedName: "memory",
        type: {
          name: "Composite",
          className: "ResourceRange"
        }
      }
    }
  }
};

export const Disallowed: msRest.CompositeMapper = {
  serializedName: "Disallowed",
  type: {
    name: "Composite",
    className: "Disallowed",
    modelProperties: {
      diskTypes: {
        serializedName: "diskTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ImagePurchasePlan: msRest.CompositeMapper = {
  serializedName: "ImagePurchasePlan",
  type: {
    name: "Composite",
    className: "ImagePurchasePlan",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      product: {
        serializedName: "product",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryImage: msRest.CompositeMapper = {
  serializedName: "GalleryImage",
  type: {
    name: "Composite",
    className: "GalleryImage",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      eula: {
        serializedName: "properties.eula",
        type: {
          name: "String"
        }
      },
      privacyStatementUri: {
        serializedName: "properties.privacyStatementUri",
        type: {
          name: "String"
        }
      },
      releaseNoteUri: {
        serializedName: "properties.releaseNoteUri",
        type: {
          name: "String"
        }
      },
      osType: {
        required: true,
        serializedName: "properties.osType",
        type: {
          name: "Enum",
          allowedValues: [
            "Windows",
            "Linux"
          ]
        }
      },
      osState: {
        required: true,
        serializedName: "properties.osState",
        type: {
          name: "Enum",
          allowedValues: [
            "Generalized",
            "Specialized"
          ]
        }
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String"
        }
      },
      features: {
        serializedName: "properties.features",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryImageFeature"
            }
          }
        }
      },
      endOfLifeDate: {
        serializedName: "properties.endOfLifeDate",
        type: {
          name: "DateTime"
        }
      },
      identifier: {
        required: true,
        serializedName: "properties.identifier",
        type: {
          name: "Composite",
          className: "GalleryImageIdentifier"
        }
      },
      recommended: {
        serializedName: "properties.recommended",
        type: {
          name: "Composite",
          className: "RecommendedMachineConfiguration"
        }
      },
      disallowed: {
        serializedName: "properties.disallowed",
        type: {
          name: "Composite",
          className: "Disallowed"
        }
      },
      purchasePlan: {
        serializedName: "properties.purchasePlan",
        type: {
          name: "Composite",
          className: "ImagePurchasePlan"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryImageUpdate: msRest.CompositeMapper = {
  serializedName: "GalleryImageUpdate",
  type: {
    name: "Composite",
    className: "GalleryImageUpdate",
    modelProperties: {
      ...UpdateResourceDefinition.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      eula: {
        serializedName: "properties.eula",
        type: {
          name: "String"
        }
      },
      privacyStatementUri: {
        serializedName: "properties.privacyStatementUri",
        type: {
          name: "String"
        }
      },
      releaseNoteUri: {
        serializedName: "properties.releaseNoteUri",
        type: {
          name: "String"
        }
      },
      osType: {
        required: true,
        serializedName: "properties.osType",
        type: {
          name: "Enum",
          allowedValues: [
            "Windows",
            "Linux"
          ]
        }
      },
      osState: {
        required: true,
        serializedName: "properties.osState",
        type: {
          name: "Enum",
          allowedValues: [
            "Generalized",
            "Specialized"
          ]
        }
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String"
        }
      },
      features: {
        serializedName: "properties.features",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryImageFeature"
            }
          }
        }
      },
      endOfLifeDate: {
        serializedName: "properties.endOfLifeDate",
        type: {
          name: "DateTime"
        }
      },
      identifier: {
        required: true,
        serializedName: "properties.identifier",
        type: {
          name: "Composite",
          className: "GalleryImageIdentifier"
        }
      },
      recommended: {
        serializedName: "properties.recommended",
        type: {
          name: "Composite",
          className: "RecommendedMachineConfiguration"
        }
      },
      disallowed: {
        serializedName: "properties.disallowed",
        type: {
          name: "Composite",
          className: "Disallowed"
        }
      },
      purchasePlan: {
        serializedName: "properties.purchasePlan",
        type: {
          name: "Composite",
          className: "ImagePurchasePlan"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryImageVersionPublishingProfile: msRest.CompositeMapper = {
  serializedName: "GalleryImageVersionPublishingProfile",
  type: {
    name: "Composite",
    className: "GalleryImageVersionPublishingProfile",
    modelProperties: {
      ...GalleryArtifactPublishingProfileBase.type.modelProperties
    }
  }
};

export const GalleryArtifactVersionSource: msRest.CompositeMapper = {
  serializedName: "GalleryArtifactVersionSource",
  type: {
    name: "Composite",
    className: "GalleryArtifactVersionSource",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      uri: {
        serializedName: "uri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryDiskImage: msRest.CompositeMapper = {
  serializedName: "GalleryDiskImage",
  type: {
    name: "Composite",
    className: "GalleryDiskImage",
    modelProperties: {
      sizeInGB: {
        readOnly: true,
        serializedName: "sizeInGB",
        type: {
          name: "Number"
        }
      },
      hostCaching: {
        serializedName: "hostCaching",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "ReadOnly",
            "ReadWrite"
          ]
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "GalleryArtifactVersionSource"
        }
      }
    }
  }
};

export const GalleryOSDiskImage: msRest.CompositeMapper = {
  serializedName: "GalleryOSDiskImage",
  type: {
    name: "Composite",
    className: "GalleryOSDiskImage",
    modelProperties: {
      ...GalleryDiskImage.type.modelProperties
    }
  }
};

export const GalleryDataDiskImage: msRest.CompositeMapper = {
  serializedName: "GalleryDataDiskImage",
  type: {
    name: "Composite",
    className: "GalleryDataDiskImage",
    modelProperties: {
      ...GalleryDiskImage.type.modelProperties,
      lun: {
        required: true,
        serializedName: "lun",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GalleryImageVersionStorageProfile: msRest.CompositeMapper = {
  serializedName: "GalleryImageVersionStorageProfile",
  type: {
    name: "Composite",
    className: "GalleryImageVersionStorageProfile",
    modelProperties: {
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "GalleryArtifactVersionSource"
        }
      },
      osDiskImage: {
        serializedName: "osDiskImage",
        type: {
          name: "Composite",
          className: "GalleryOSDiskImage"
        }
      },
      dataDiskImages: {
        serializedName: "dataDiskImages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryDataDiskImage"
            }
          }
        }
      }
    }
  }
};

export const GalleryImageVersion: msRest.CompositeMapper = {
  serializedName: "GalleryImageVersion",
  type: {
    name: "Composite",
    className: "GalleryImageVersion",
    modelProperties: {
      ...Resource.type.modelProperties,
      publishingProfile: {
        serializedName: "properties.publishingProfile",
        type: {
          name: "Composite",
          className: "GalleryImageVersionPublishingProfile"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      storageProfile: {
        required: true,
        serializedName: "properties.storageProfile",
        type: {
          name: "Composite",
          className: "GalleryImageVersionStorageProfile"
        }
      },
      replicationStatus: {
        readOnly: true,
        serializedName: "properties.replicationStatus",
        type: {
          name: "Composite",
          className: "ReplicationStatus"
        }
      }
    }
  }
};

export const GalleryImageVersionUpdate: msRest.CompositeMapper = {
  serializedName: "GalleryImageVersionUpdate",
  type: {
    name: "Composite",
    className: "GalleryImageVersionUpdate",
    modelProperties: {
      ...UpdateResourceDefinition.type.modelProperties,
      publishingProfile: {
        serializedName: "properties.publishingProfile",
        type: {
          name: "Composite",
          className: "GalleryImageVersionPublishingProfile"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      storageProfile: {
        required: true,
        serializedName: "properties.storageProfile",
        type: {
          name: "Composite",
          className: "GalleryImageVersionStorageProfile"
        }
      },
      replicationStatus: {
        readOnly: true,
        serializedName: "properties.replicationStatus",
        type: {
          name: "Composite",
          className: "ReplicationStatus"
        }
      }
    }
  }
};

export const DiskImageEncryption: msRest.CompositeMapper = {
  serializedName: "DiskImageEncryption",
  type: {
    name: "Composite",
    className: "DiskImageEncryption",
    modelProperties: {
      diskEncryptionSetId: {
        serializedName: "diskEncryptionSetId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OSDiskImageEncryption: msRest.CompositeMapper = {
  serializedName: "OSDiskImageEncryption",
  type: {
    name: "Composite",
    className: "OSDiskImageEncryption",
    modelProperties: {
      ...DiskImageEncryption.type.modelProperties
    }
  }
};

export const DataDiskImageEncryption: msRest.CompositeMapper = {
  serializedName: "DataDiskImageEncryption",
  type: {
    name: "Composite",
    className: "DataDiskImageEncryption",
    modelProperties: {
      ...DiskImageEncryption.type.modelProperties,
      lun: {
        required: true,
        serializedName: "lun",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const EncryptionImages: msRest.CompositeMapper = {
  serializedName: "EncryptionImages",
  type: {
    name: "Composite",
    className: "EncryptionImages",
    modelProperties: {
      osDiskImage: {
        serializedName: "osDiskImage",
        type: {
          name: "Composite",
          className: "OSDiskImageEncryption"
        }
      },
      dataDiskImages: {
        serializedName: "dataDiskImages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataDiskImageEncryption"
            }
          }
        }
      }
    }
  }
};

export const TargetRegion: msRest.CompositeMapper = {
  serializedName: "TargetRegion",
  type: {
    name: "Composite",
    className: "TargetRegion",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      regionalReplicaCount: {
        serializedName: "regionalReplicaCount",
        type: {
          name: "Number"
        }
      },
      storageAccountType: {
        serializedName: "storageAccountType",
        type: {
          name: "String"
        }
      },
      encryption: {
        serializedName: "encryption",
        type: {
          name: "Composite",
          className: "EncryptionImages"
        }
      }
    }
  }
};

export const ManagedArtifact: msRest.CompositeMapper = {
  serializedName: "ManagedArtifact",
  type: {
    name: "Composite",
    className: "ManagedArtifact",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryArtifactSource: msRest.CompositeMapper = {
  serializedName: "GalleryArtifactSource",
  type: {
    name: "Composite",
    className: "GalleryArtifactSource",
    modelProperties: {
      managedImage: {
        required: true,
        serializedName: "managedImage",
        type: {
          name: "Composite",
          className: "ManagedArtifact"
        }
      }
    }
  }
};

export const SharingUpdate: msRest.CompositeMapper = {
  serializedName: "SharingUpdate",
  type: {
    name: "Composite",
    className: "SharingUpdate",
    modelProperties: {
      operationType: {
        required: true,
        serializedName: "operationType",
        type: {
          name: "String"
        }
      },
      groups: {
        serializedName: "groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SharingProfileGroup"
            }
          }
        }
      }
    }
  }
};

export const PirResource: msRest.CompositeMapper = {
  serializedName: "PirResource",
  type: {
    name: "Composite",
    className: "PirResource",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PirSharedGalleryResource: msRest.CompositeMapper = {
  serializedName: "PirSharedGalleryResource",
  type: {
    name: "Composite",
    className: "PirSharedGalleryResource",
    modelProperties: {
      ...PirResource.type.modelProperties,
      uniqueId: {
        serializedName: "identifier.uniqueId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SharedGallery: msRest.CompositeMapper = {
  serializedName: "SharedGallery",
  type: {
    name: "Composite",
    className: "SharedGallery",
    modelProperties: {
      ...PirSharedGalleryResource.type.modelProperties
    }
  }
};

export const SharedGalleryImage: msRest.CompositeMapper = {
  serializedName: "SharedGalleryImage",
  type: {
    name: "Composite",
    className: "SharedGalleryImage",
    modelProperties: {
      ...PirSharedGalleryResource.type.modelProperties,
      osType: {
        required: true,
        serializedName: "properties.osType",
        type: {
          name: "Enum",
          allowedValues: [
            "Windows",
            "Linux"
          ]
        }
      },
      osState: {
        required: true,
        serializedName: "properties.osState",
        type: {
          name: "Enum",
          allowedValues: [
            "Generalized",
            "Specialized"
          ]
        }
      },
      endOfLifeDate: {
        serializedName: "properties.endOfLifeDate",
        type: {
          name: "DateTime"
        }
      },
      identifier: {
        required: true,
        serializedName: "properties.identifier",
        type: {
          name: "Composite",
          className: "GalleryImageIdentifier"
        }
      },
      recommended: {
        serializedName: "properties.recommended",
        type: {
          name: "Composite",
          className: "RecommendedMachineConfiguration"
        }
      },
      disallowed: {
        serializedName: "properties.disallowed",
        type: {
          name: "Composite",
          className: "Disallowed"
        }
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String"
        }
      },
      features: {
        serializedName: "properties.features",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryImageFeature"
            }
          }
        }
      },
      purchasePlan: {
        serializedName: "properties.purchasePlan",
        type: {
          name: "Composite",
          className: "ImagePurchasePlan"
        }
      }
    }
  }
};

export const SharedGalleryImageVersion: msRest.CompositeMapper = {
  serializedName: "SharedGalleryImageVersion",
  type: {
    name: "Composite",
    className: "SharedGalleryImageVersion",
    modelProperties: {
      ...PirSharedGalleryResource.type.modelProperties,
      publishedDate: {
        serializedName: "properties.publishedDate",
        type: {
          name: "DateTime"
        }
      },
      endOfLifeDate: {
        serializedName: "properties.endOfLifeDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const DiskList: msRest.CompositeMapper = {
  serializedName: "DiskList",
  type: {
    name: "Composite",
    className: "DiskList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Disk"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SnapshotList: msRest.CompositeMapper = {
  serializedName: "SnapshotList",
  type: {
    name: "Composite",
    className: "SnapshotList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Snapshot"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiskEncryptionSetList: msRest.CompositeMapper = {
  serializedName: "DiskEncryptionSetList",
  type: {
    name: "Composite",
    className: "DiskEncryptionSetList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiskEncryptionSet"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceUriList: msRest.CompositeMapper = {
  serializedName: "ResourceUriList",
  type: {
    name: "Composite",
    className: "ResourceUriList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiskAccessList: msRest.CompositeMapper = {
  serializedName: "DiskAccessList",
  type: {
    name: "Composite",
    className: "DiskAccessList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiskAccess"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnectionListResult: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointConnectionListResult",
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiskRestorePointList: msRest.CompositeMapper = {
  serializedName: "DiskRestorePointList",
  type: {
    name: "Composite",
    className: "DiskRestorePointList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiskRestorePoint"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryList: msRest.CompositeMapper = {
  serializedName: "GalleryList",
  type: {
    name: "Composite",
    className: "GalleryList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Gallery"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryImageList: msRest.CompositeMapper = {
  serializedName: "GalleryImageList",
  type: {
    name: "Composite",
    className: "GalleryImageList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryImage"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryImageVersionList: msRest.CompositeMapper = {
  serializedName: "GalleryImageVersionList",
  type: {
    name: "Composite",
    className: "GalleryImageVersionList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryImageVersion"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryApplicationList: msRest.CompositeMapper = {
  serializedName: "GalleryApplicationList",
  type: {
    name: "Composite",
    className: "GalleryApplicationList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryApplication"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryApplicationVersionList: msRest.CompositeMapper = {
  serializedName: "GalleryApplicationVersionList",
  type: {
    name: "Composite",
    className: "GalleryApplicationVersionList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryApplicationVersion"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SharedGalleryList: msRest.CompositeMapper = {
  serializedName: "SharedGalleryList",
  type: {
    name: "Composite",
    className: "SharedGalleryList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SharedGallery"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SharedGalleryImageList: msRest.CompositeMapper = {
  serializedName: "SharedGalleryImageList",
  type: {
    name: "Composite",
    className: "SharedGalleryImageList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SharedGalleryImage"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SharedGalleryImageVersionList: msRest.CompositeMapper = {
  serializedName: "SharedGalleryImageVersionList",
  type: {
    name: "Composite",
    className: "SharedGalleryImageVersionList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SharedGalleryImageVersion"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
