/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * The Resource model definition.
 */
export interface Resource extends BaseResource {
  /**
   * Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location
   */
  location: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * The ProxyOnly Resource model definition.
 */
export interface ProxyOnlyResource {
  /**
   * Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, or UltraSSD_LRS.
 */
export interface DiskSku {
  /**
   * The sku name. Possible values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS',
   * 'UltraSSD_LRS'
   */
  name?: DiskStorageAccountTypes;
  /**
   * The sku tier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tier?: string;
}

/**
 * The complex type of the extended location.
 */
export interface ExtendedLocation {
  /**
   * The name of the extended location.
   */
  name?: string;
  /**
   * The type of the extended location. Possible values include: 'EdgeZone'
   */
  type?: ExtendedLocationTypes;
}

/**
 * Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.
 */
export interface PurchasePlan {
  /**
   * The plan ID.
   */
  name: string;
  /**
   * The publisher ID.
   */
  publisher: string;
  /**
   * Specifies the product of the image from the marketplace. This is the same value as Offer under
   * the imageReference element.
   */
  product: string;
  /**
   * The Offer Promotion Code.
   */
  promotionCode?: string;
}

/**
 * The source image used for creating the disk.
 */
export interface ImageDiskReference {
  /**
   * A relative uri containing either a Platform Image Repository or user image reference.
   */
  id: string;
  /**
   * If the disk is created from an image's data disk, this is an index that indicates which of the
   * data disks in the image to use. For OS disks, this field is null.
   */
  lun?: number;
}

/**
 * Data used when creating a disk.
 */
export interface CreationData {
  /**
   * This enumerates the possible sources of a disk's creation. Possible values include: 'Empty',
   * 'Attach', 'FromImage', 'Import', 'Copy', 'Restore', 'Upload'
   */
  createOption: DiskCreateOption;
  /**
   * Required if createOption is Import. The Azure Resource Manager identifier of the storage
   * account containing the blob to import as a disk.
   */
  storageAccountId?: string;
  /**
   * Disk source information.
   */
  imageReference?: ImageDiskReference;
  /**
   * Required if creating from a Gallery Image. The id of the ImageDiskReference will be the ARM id
   * of the shared galley image version from which to create a disk.
   */
  galleryImageReference?: ImageDiskReference;
  /**
   * If createOption is Import, this is the URI of a blob to be imported into a managed disk.
   */
  sourceUri?: string;
  /**
   * If createOption is Copy, this is the ARM id of the source snapshot or disk.
   */
  sourceResourceId?: string;
  /**
   * If this field is set, this is the unique id identifying the source of this resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sourceUniqueId?: string;
  /**
   * If createOption is Upload, this is the size of the contents of the upload including the VHD
   * footer. This value should be between 20972032 (20 MiB + 512 bytes for the VHD footer) and
   * 35183298347520 bytes (32 TiB + 512 bytes for the VHD footer).
   */
  uploadSizeBytes?: number;
  /**
   * Logical sector size in bytes for Ultra disks. Supported values are 512 ad 4096. 4096 is the
   * default.
   */
  logicalSectorSize?: number;
}

/**
 * The vault id is an Azure Resource Manager Resource id in the form
 * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}
 */
export interface SourceVault {
  /**
   * Resource Id
   */
  id?: string;
}

/**
 * Key Vault Secret Url and vault id of the encryption key
 */
export interface KeyVaultAndSecretReference {
  /**
   * Resource id of the KeyVault containing the key or secret
   */
  sourceVault: SourceVault;
  /**
   * Url pointing to a key or secret in KeyVault
   */
  secretUrl: string;
}

/**
 * Key Vault Key Url and vault id of KeK, KeK is optional and when provided is used to unwrap the
 * encryptionKey
 */
export interface KeyVaultAndKeyReference {
  /**
   * Resource id of the KeyVault containing the key or secret
   */
  sourceVault: SourceVault;
  /**
   * Url pointing to a key or secret in KeyVault
   */
  keyUrl: string;
}

/**
 * Encryption settings for one disk volume.
 */
export interface EncryptionSettingsElement {
  /**
   * Key Vault Secret Url and vault id of the disk encryption key
   */
  diskEncryptionKey?: KeyVaultAndSecretReference;
  /**
   * Key Vault Key Url and vault id of the key encryption key. KeyEncryptionKey is optional and
   * when provided is used to unwrap the disk encryption key.
   */
  keyEncryptionKey?: KeyVaultAndKeyReference;
}

/**
 * Encryption settings for disk or snapshot
 */
export interface EncryptionSettingsCollection {
  /**
   * Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable
   * encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to
   * disable encryption. If EncryptionSettings is null in the request object, the existing settings
   * remain unchanged.
   */
  enabled: boolean;
  /**
   * A collection of encryption settings, one for each disk volume.
   */
  encryptionSettings?: EncryptionSettingsElement[];
  /**
   * Describes what type of encryption is used for the disks. Once this field is set, it cannot be
   * overwritten. '1.0' corresponds to Azure Disk Encryption with AAD app.'1.1' corresponds to
   * Azure Disk Encryption.
   */
  encryptionSettingsVersion?: string;
}

/**
 * Encryption at rest settings for disk or snapshot
 */
export interface Encryption {
  /**
   * ResourceId of the disk encryption set to use for enabling encryption at rest.
   */
  diskEncryptionSetId?: string;
  /**
   * Possible values include: 'EncryptionAtRestWithPlatformKey', 'EncryptionAtRestWithCustomerKey',
   * 'EncryptionAtRestWithPlatformAndCustomerKeys'
   */
  type?: EncryptionType;
}

/**
 * An interface representing ShareInfoElement.
 */
export interface ShareInfoElement {
  /**
   * A relative URI containing the ID of the VM that has the disk attached.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vmUri?: string;
}

/**
 * Disk resource.
 */
export interface Disk extends Resource {
  /**
   * A relative URI containing the ID of the VM that has the disk attached.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly managedBy?: string;
  /**
   * List of relative URIs containing the IDs of the VMs that have the disk attached. maxShares
   * should be set to a value greater than one for disks to allow attaching them to multiple VMs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly managedByExtended?: string[];
  sku?: DiskSku;
  /**
   * The Logical zone list for Disk.
   */
  zones?: string[];
  /**
   * The extended location where the disk will be created. Extended location cannot be changed.
   */
  extendedLocation?: ExtendedLocation;
  /**
   * The time when the disk was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeCreated?: Date;
  /**
   * The Operating System type. Possible values include: 'Windows', 'Linux'
   */
  osType?: OperatingSystemTypes;
  /**
   * The hypervisor generation of the Virtual Machine. Applicable to OS disks only. Possible values
   * include: 'V1', 'V2'
   */
  hyperVGeneration?: HyperVGeneration;
  /**
   * Purchase plan information for the the image from which the OS disk was created. E.g. - {name:
   * 2019-Datacenter, publisher: MicrosoftWindowsServer, product: WindowsServer}
   */
  purchasePlan?: PurchasePlan;
  /**
   * Disk source information. CreationData information cannot be changed after the disk has been
   * created.
   */
  creationData: CreationData;
  /**
   * If creationData.createOption is Empty, this field is mandatory and it indicates the size of
   * the disk to create. If this field is present for updates or creation with other options, it
   * indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and
   * can only increase the disk's size.
   */
  diskSizeGB?: number;
  /**
   * The size of the disk in bytes. This field is read only.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly diskSizeBytes?: number;
  /**
   * Unique Guid identifying the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly uniqueId?: string;
  /**
   * Encryption settings collection used for Azure Disk Encryption, can contain multiple encryption
   * settings per disk or snapshot.
   */
  encryptionSettingsCollection?: EncryptionSettingsCollection;
  /**
   * The disk provisioning state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can
   * transfer between 4k and 256k bytes.
   */
  diskIOPSReadWrite?: number;
  /**
   * The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of
   * bytes per second - MB here uses the ISO notation, of powers of 10.
   */
  diskMBpsReadWrite?: number;
  /**
   * The total number of IOPS that will be allowed across all VMs mounting the shared disk as
   * ReadOnly. One operation can transfer between 4k and 256k bytes.
   */
  diskIOPSReadOnly?: number;
  /**
   * The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as
   * ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers
   * of 10.
   */
  diskMBpsReadOnly?: number;
  /**
   * The state of the disk. Possible values include: 'Unattached', 'Attached', 'Reserved',
   * 'ActiveSAS', 'ReadyToUpload', 'ActiveUpload'
   */
  diskState?: DiskState;
  /**
   * Encryption property can be used to encrypt data at rest with customer managed keys or platform
   * managed keys.
   */
  encryption?: Encryption;
  /**
   * The maximum number of VMs that can attach to the disk at the same time. Value greater than one
   * indicates a disk that can be mounted on multiple VMs at the same time.
   */
  maxShares?: number;
  /**
   * Details of the list of all VMs that have the disk attached. maxShares should be set to a value
   * greater than one for disks to allow attaching them to multiple VMs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly shareInfo?: ShareInfoElement[];
  /**
   * Possible values include: 'AllowAll', 'AllowPrivate', 'DenyAll'
   */
  networkAccessPolicy?: NetworkAccessPolicy;
  /**
   * ARM id of the DiskAccess resource for using private endpoints on disks.
   */
  diskAccessId?: string;
  /**
   * Performance tier of the disk (e.g, P4, S10) as described here:
   * https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra
   * disks.
   */
  tier?: string;
  /**
   * Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting
   * is disabled by default. Does not apply to Ultra disks.
   */
  burstingEnabled?: boolean;
}

/**
 * Disk update resource.
 */
export interface DiskUpdate {
  /**
   * the Operating System type. Possible values include: 'Windows', 'Linux'
   */
  osType?: OperatingSystemTypes;
  /**
   * If creationData.createOption is Empty, this field is mandatory and it indicates the size of
   * the disk to create. If this field is present for updates or creation with other options, it
   * indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and
   * can only increase the disk's size.
   */
  diskSizeGB?: number;
  /**
   * Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption
   * settings per disk or snapshot.
   */
  encryptionSettingsCollection?: EncryptionSettingsCollection;
  /**
   * The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can
   * transfer between 4k and 256k bytes.
   */
  diskIOPSReadWrite?: number;
  /**
   * The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of
   * bytes per second - MB here uses the ISO notation, of powers of 10.
   */
  diskMBpsReadWrite?: number;
  /**
   * The total number of IOPS that will be allowed across all VMs mounting the shared disk as
   * ReadOnly. One operation can transfer between 4k and 256k bytes.
   */
  diskIOPSReadOnly?: number;
  /**
   * The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as
   * ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers
   * of 10.
   */
  diskMBpsReadOnly?: number;
  /**
   * The maximum number of VMs that can attach to the disk at the same time. Value greater than one
   * indicates a disk that can be mounted on multiple VMs at the same time.
   */
  maxShares?: number;
  /**
   * Encryption property can be used to encrypt data at rest with customer managed keys or platform
   * managed keys.
   */
  encryption?: Encryption;
  /**
   * Possible values include: 'AllowAll', 'AllowPrivate', 'DenyAll'
   */
  networkAccessPolicy?: NetworkAccessPolicy;
  /**
   * ARM id of the DiskAccess resource for using private endpoints on disks.
   */
  diskAccessId?: string;
  /**
   * Performance tier of the disk (e.g, P4, S10) as described here:
   * https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra
   * disks.
   */
  tier?: string;
  /**
   * Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting
   * is disabled by default. Does not apply to Ultra disks.
   */
  burstingEnabled?: boolean;
  /**
   * Purchase plan information to be added on the OS disk
   */
  purchasePlan?: PurchasePlan;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
  sku?: DiskSku;
}

/**
 * The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS. This is an optional
 * parameter for incremental snapshot and the default behavior is the SKU will be set to the same
 * sku as the previous snapshot
 */
export interface SnapshotSku {
  /**
   * The sku name. Possible values include: 'Standard_LRS', 'Premium_LRS', 'Standard_ZRS'
   */
  name?: SnapshotStorageAccountTypes;
  /**
   * The sku tier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tier?: string;
}

/**
 * Key Vault Key Url to be used for server side encryption of Managed Disks and Snapshots
 */
export interface KeyForDiskEncryptionSet {
  /**
   * Resource id of the KeyVault containing the key or secret. This property is optional and cannot
   * be used if the KeyVault subscription is not the same as the Disk Encryption Set subscription.
   */
  sourceVault?: SourceVault;
  /**
   * Fully versioned Key Url pointing to a key in KeyVault
   */
  keyUrl: string;
}

/**
 * Data used for requesting a SAS.
 */
export interface GrantAccessData {
  /**
   * Possible values include: 'None', 'Read', 'Write'
   */
  access: AccessLevel;
  /**
   * Time duration in seconds until the SAS access expires.
   */
  durationInSeconds: number;
}

/**
 * A disk access SAS uri.
 */
export interface AccessUri {
  /**
   * A SAS uri for accessing a disk.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accessSAS?: string;
}

/**
 * Snapshot resource.
 */
export interface Snapshot extends Resource {
  /**
   * Unused. Always Null.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly managedBy?: string;
  sku?: SnapshotSku;
  /**
   * The extended location where the snapshot will be created. Extended location cannot be changed.
   */
  extendedLocation?: ExtendedLocation;
  /**
   * The time when the snapshot was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeCreated?: Date;
  /**
   * The Operating System type. Possible values include: 'Windows', 'Linux'
   */
  osType?: OperatingSystemTypes;
  /**
   * The hypervisor generation of the Virtual Machine. Applicable to OS disks only. Possible values
   * include: 'V1', 'V2'
   */
  hyperVGeneration?: HyperVGeneration;
  /**
   * Purchase plan information for the image from which the source disk for the snapshot was
   * originally created.
   */
  purchasePlan?: PurchasePlan;
  /**
   * Disk source information. CreationData information cannot be changed after the disk has been
   * created.
   */
  creationData: CreationData;
  /**
   * If creationData.createOption is Empty, this field is mandatory and it indicates the size of
   * the disk to create. If this field is present for updates or creation with other options, it
   * indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and
   * can only increase the disk's size.
   */
  diskSizeGB?: number;
  /**
   * The size of the disk in bytes. This field is read only.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly diskSizeBytes?: number;
  /**
   * The state of the snapshot. Possible values include: 'Unattached', 'Attached', 'Reserved',
   * 'ActiveSAS', 'ReadyToUpload', 'ActiveUpload'
   */
  diskState?: DiskState;
  /**
   * Unique Guid identifying the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly uniqueId?: string;
  /**
   * Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption
   * settings per disk or snapshot.
   */
  encryptionSettingsCollection?: EncryptionSettingsCollection;
  /**
   * The disk provisioning state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space
   * than full snapshots and can be diffed.
   */
  incremental?: boolean;
  /**
   * Encryption property can be used to encrypt data at rest with customer managed keys or platform
   * managed keys.
   */
  encryption?: Encryption;
  /**
   * Possible values include: 'AllowAll', 'AllowPrivate', 'DenyAll'
   */
  networkAccessPolicy?: NetworkAccessPolicy;
  /**
   * ARM id of the DiskAccess resource for using private endpoints on disks.
   */
  diskAccessId?: string;
}

/**
 * Snapshot update resource.
 */
export interface SnapshotUpdate {
  /**
   * the Operating System type. Possible values include: 'Windows', 'Linux'
   */
  osType?: OperatingSystemTypes;
  /**
   * If creationData.createOption is Empty, this field is mandatory and it indicates the size of
   * the disk to create. If this field is present for updates or creation with other options, it
   * indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and
   * can only increase the disk's size.
   */
  diskSizeGB?: number;
  /**
   * Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption
   * settings per disk or snapshot.
   */
  encryptionSettingsCollection?: EncryptionSettingsCollection;
  /**
   * Encryption property can be used to encrypt data at rest with customer managed keys or platform
   * managed keys.
   */
  encryption?: Encryption;
  /**
   * Possible values include: 'AllowAll', 'AllowPrivate', 'DenyAll'
   */
  networkAccessPolicy?: NetworkAccessPolicy;
  /**
   * ARM id of the DiskAccess resource for using private endpoints on disks.
   */
  diskAccessId?: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
  sku?: SnapshotSku;
}

/**
 * The managed identity for the disk encryption set. It should be given permission on the key vault
 * before it can be used to encrypt disks.
 */
export interface EncryptionSetIdentity {
  /**
   * The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported
   * for new creations. Disk Encryption Sets can be updated with Identity type None during
   * migration of subscription to a new Azure Active Directory tenant; it will cause the encrypted
   * resources to lose access to the keys. Possible values include: 'SystemAssigned', 'None'
   */
  type?: DiskEncryptionSetIdentityType;
  /**
   * The object id of the Managed Identity Resource. This will be sent to the RP from ARM via the
   * x-ms-identity-principal-id header in the PUT request if the resource has a
   * systemAssigned(implicit) identity
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The tenant id of the Managed Identity Resource. This will be sent to the RP from ARM via the
   * x-ms-client-tenant-id header in the PUT request if the resource has a systemAssigned(implicit)
   * identity
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
}

/**
 * disk encryption set resource.
 */
export interface DiskEncryptionSet extends Resource {
  identity?: EncryptionSetIdentity;
  /**
   * Possible values include: 'EncryptionAtRestWithCustomerKey',
   * 'EncryptionAtRestWithPlatformAndCustomerKeys'
   */
  encryptionType?: DiskEncryptionSetType;
  /**
   * The key vault key which is currently used by this disk encryption set.
   */
  activeKey?: KeyForDiskEncryptionSet;
  /**
   * A readonly collection of key vault keys previously used by this disk encryption set while a
   * key rotation is in progress. It will be empty if there is no ongoing key rotation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly previousKeys?: KeyForDiskEncryptionSet[];
  /**
   * The disk encryption set provisioning state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
}

/**
 * disk encryption set update resource.
 */
export interface DiskEncryptionSetUpdate {
  /**
   * Possible values include: 'EncryptionAtRestWithCustomerKey',
   * 'EncryptionAtRestWithPlatformAndCustomerKeys'
   */
  encryptionType?: DiskEncryptionSetType;
  activeKey?: KeyForDiskEncryptionSet;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * The Private Endpoint resource.
 */
export interface PrivateEndpoint {
  /**
   * The ARM identifier for Private Endpoint
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
}

/**
 * A collection of information about the state of the connection between service consumer and
 * provider.
 */
export interface PrivateLinkServiceConnectionState {
  /**
   * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the
   * service. Possible values include: 'Pending', 'Approved', 'Rejected'
   */
  status?: PrivateEndpointServiceConnectionStatus;
  /**
   * The reason for approval/rejection of the connection.
   */
  description?: string;
  /**
   * A message indicating if changes on the service provider require any updates on the consumer.
   */
  actionsRequired?: string;
}

/**
 * The Private Endpoint Connection resource.
 */
export interface PrivateEndpointConnection extends BaseResource {
  /**
   * The resource of private end point.
   */
  privateEndpoint?: PrivateEndpoint;
  /**
   * A collection of information about the state of the connection between DiskAccess and Virtual
   * Network.
   */
  privateLinkServiceConnectionState: PrivateLinkServiceConnectionState;
  /**
   * The provisioning state of the private endpoint connection resource. Possible values include:
   * 'Succeeded', 'Creating', 'Deleting', 'Failed'
   */
  provisioningState?: PrivateEndpointConnectionProvisioningState;
  /**
   * private endpoint connection Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * private endpoint connection name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * private endpoint connection type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * disk access resource.
 */
export interface DiskAccess extends Resource {
  /**
   * A readonly collection of private endpoint connections created on the disk. Currently only one
   * endpoint connection is supported.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
  /**
   * The disk access resource provisioning state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The time when the disk access was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeCreated?: Date;
}

/**
 * Used for updating a disk access resource.
 */
export interface DiskAccessUpdate {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A private link resource
 */
export interface PrivateLinkResource {
  /**
   * The private link resource group id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly groupId?: string;
  /**
   * The private link resource required member names.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requiredMembers?: string[];
  /**
   * The private link resource DNS zone name.
   */
  requiredZoneNames?: string[];
  /**
   * private link resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * private link resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * private link resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Properties of disk restore point
 */
export interface DiskRestorePoint extends ProxyOnlyResource {
  /**
   * The timestamp of restorePoint creation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeCreated?: Date;
  /**
   * arm id of source disk
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sourceResourceId?: string;
  /**
   * The Operating System type. Possible values include: 'Windows', 'Linux'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly osType?: OperatingSystemTypes;
  /**
   * The hypervisor generation of the Virtual Machine. Applicable to OS disks only. Possible values
   * include: 'V1', 'V2'
   */
  hyperVGeneration?: HyperVGeneration;
  /**
   * Purchase plan information for the the image from which the OS disk was created.
   */
  purchasePlan?: PurchasePlan;
  /**
   * id of the backing snapshot's MIS family
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly familyId?: string;
  /**
   * unique incarnation id of the source disk
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sourceUniqueId?: string;
  /**
   * Encryption property can be used to encrypt data at rest with customer managed keys or platform
   * managed keys.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly encryption?: Encryption;
}

/**
 * A list of private link resources
 */
export interface PrivateLinkResourceListResult {
  /**
   * Array of private link resources
   */
  value?: PrivateLinkResource[];
}

/**
 * Api error base.
 */
export interface ApiErrorBase {
  /**
   * The error code.
   */
  code?: string;
  /**
   * The target of the particular error.
   */
  target?: string;
  /**
   * The error message.
   */
  message?: string;
}

/**
 * Inner error details.
 */
export interface InnerError {
  /**
   * The exception type.
   */
  exceptiontype?: string;
  /**
   * The internal error message or exception dump.
   */
  errordetail?: string;
}

/**
 * Api error.
 */
export interface ApiError {
  /**
   * The Api error details
   */
  details?: ApiErrorBase[];
  /**
   * The Api inner error
   */
  innererror?: InnerError;
  /**
   * The error code.
   */
  code?: string;
  /**
   * The target of the particular error.
   */
  target?: string;
  /**
   * The error message.
   */
  message?: string;
}

/**
 * Describes the gallery unique name.
 */
export interface GalleryIdentifier {
  /**
   * The unique name of the Shared Image Gallery. This name is generated automatically by Azure.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly uniqueName?: string;
}

/**
 * Group of the gallery sharing profile
 */
export interface SharingProfileGroup {
  /**
   * This property allows you to specify the type of sharing group. <br><br> Possible values are:
   * <br><br> **Subscriptions** <br><br> **AADTenants**. Possible values include: 'Subscriptions',
   * 'AADTenants'
   */
  type?: SharingProfileGroupTypes;
  /**
   * A list of subscription/tenant ids the gallery is aimed to be shared to.
   */
  ids?: string[];
}

/**
 * Profile for gallery sharing to subscription or tenant
 */
export interface SharingProfile {
  /**
   * This property allows you to specify the permission of sharing gallery. <br><br> Possible
   * values are: <br><br> **Private** <br><br> **Groups**. Possible values include: 'Private',
   * 'Groups'
   */
  permissions?: GallerySharingPermissionTypes;
  /**
   * A list of sharing profile groups.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly groups?: SharingProfileGroup[];
}

/**
 * Specifies information about the Shared Image Gallery that you want to create or update.
 */
export interface Gallery extends Resource {
  /**
   * The description of this Shared Image Gallery resource. This property is updatable.
   */
  description?: string;
  identifier?: GalleryIdentifier;
  /**
   * The current state of the gallery. The provisioning state, which only appears in the response.
   * Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded', 'Deleting',
   * 'Migrating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  sharingProfile?: SharingProfile;
}

/**
 * The Update Resource model definition.
 */
export interface UpdateResourceDefinition extends BaseResource {
  /**
   * Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Specifies information about the Shared Image Gallery that you want to update.
 */
export interface GalleryUpdate extends UpdateResourceDefinition {
  /**
   * The description of this Shared Image Gallery resource. This property is updatable.
   */
  description?: string;
  identifier?: GalleryIdentifier;
  /**
   * The current state of the gallery. The provisioning state, which only appears in the response.
   * Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded', 'Deleting',
   * 'Migrating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  sharingProfile?: SharingProfile;
}

/**
 * Specifies information about the gallery Application Definition that you want to create or
 * update.
 */
export interface GalleryApplication extends Resource {
  /**
   * The description of this gallery Application Definition resource. This property is updatable.
   */
  description?: string;
  /**
   * The Eula agreement for the gallery Application Definition.
   */
  eula?: string;
  /**
   * The privacy statement uri.
   */
  privacyStatementUri?: string;
  /**
   * The release note uri.
   */
  releaseNoteUri?: string;
  /**
   * The end of life date of the gallery Application Definition. This property can be used for
   * decommissioning purposes. This property is updatable.
   */
  endOfLifeDate?: Date;
  /**
   * This property allows you to specify the supported type of the OS that application is built
   * for. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**. Possible values
   * include: 'Windows', 'Linux'
   */
  supportedOSType: OperatingSystemTypes;
}

/**
 * Specifies information about the gallery Application Definition that you want to update.
 */
export interface GalleryApplicationUpdate extends UpdateResourceDefinition {
  /**
   * The description of this gallery Application Definition resource. This property is updatable.
   */
  description?: string;
  /**
   * The Eula agreement for the gallery Application Definition.
   */
  eula?: string;
  /**
   * The privacy statement uri.
   */
  privacyStatementUri?: string;
  /**
   * The release note uri.
   */
  releaseNoteUri?: string;
  /**
   * The end of life date of the gallery Application Definition. This property can be used for
   * decommissioning purposes. This property is updatable.
   */
  endOfLifeDate?: Date;
  /**
   * This property allows you to specify the supported type of the OS that application is built
   * for. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**. Possible values
   * include: 'Windows', 'Linux'
   */
  supportedOSType: OperatingSystemTypes;
}

/**
 * The source image from which the Image Version is going to be created.
 */
export interface UserArtifactSource {
  /**
   * Required. The mediaLink of the artifact, must be a readable storage page blob.
   */
  mediaLink: string;
  /**
   * Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
   */
  defaultConfigurationLink?: string;
}

/**
 * An interface representing UserArtifactManage.
 */
export interface UserArtifactManage {
  /**
   * Required. The path and arguments to install the gallery application. This is limited to 4096
   * characters.
   */
  install: string;
  /**
   * Required. The path and arguments to remove the gallery application. This is limited to 4096
   * characters.
   */
  remove: string;
  /**
   * Optional. The path and arguments to update the gallery application. If not present, then
   * update operation will invoke remove command on the previous version and install command on the
   * current version of the gallery application. This is limited to 4096 characters.
   */
  update?: string;
}

/**
 * Describes the basic gallery artifact publishing profile.
 */
export interface GalleryArtifactPublishingProfileBase {
  /**
   * The target regions where the Image Version is going to be replicated to. This property is
   * updatable.
   */
  targetRegions?: TargetRegion[];
  /**
   * The number of replicas of the Image Version to be created per region. This property would take
   * effect for a region when regionalReplicaCount is not specified. This property is updatable.
   */
  replicaCount?: number;
  /**
   * If set to true, Virtual Machines deployed from the latest version of the Image Definition
   * won't use this Image Version.
   */
  excludeFromLatest?: boolean;
  /**
   * The timestamp for when the gallery image version is published.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publishedDate?: Date;
  /**
   * The end of life date of the gallery image version. This property can be used for
   * decommissioning purposes. This property is updatable.
   */
  endOfLifeDate?: Date;
  /**
   * Specifies the storage account type to be used to store the image. This property is not
   * updatable. Possible values include: 'Standard_LRS', 'Standard_ZRS', 'Premium_LRS'
   */
  storageAccountType?: StorageAccountType;
}

/**
 * The publishing profile of a gallery image version.
 */
export interface GalleryApplicationVersionPublishingProfile extends GalleryArtifactPublishingProfileBase {
  source: UserArtifactSource;
  manageActions?: UserArtifactManage;
  /**
   * Optional. Whether or not this application reports health.
   */
  enableHealthCheck?: boolean;
}

/**
 * This is the regional replication status.
 */
export interface RegionalReplicationStatus {
  /**
   * The region to which the gallery image version is being replicated to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly region?: string;
  /**
   * This is the regional replication state. Possible values include: 'Unknown', 'Replicating',
   * 'Completed', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: ReplicationState;
  /**
   * The details of the replication status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: string;
  /**
   * It indicates progress of the replication job.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly progress?: number;
}

/**
 * This is the replication status of the gallery image version.
 */
export interface ReplicationStatus {
  /**
   * This is the aggregated replication status based on all the regional replication status flags.
   * Possible values include: 'Unknown', 'InProgress', 'Completed', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly aggregatedState?: AggregatedReplicationState;
  /**
   * This is a summary of replication status for each region.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly summary?: RegionalReplicationStatus[];
}

/**
 * Specifies information about the gallery Application Version that you want to create or update.
 */
export interface GalleryApplicationVersion extends Resource {
  publishingProfile: GalleryApplicationVersionPublishingProfile;
  /**
   * The current state of the gallery Application Version. The provisioning state, which only
   * appears in the response. Possible values include: 'Creating', 'Updating', 'Failed',
   * 'Succeeded', 'Deleting', 'Migrating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState1;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationStatus?: ReplicationStatus;
}

/**
 * Specifies information about the gallery Application Version that you want to update.
 */
export interface GalleryApplicationVersionUpdate extends UpdateResourceDefinition {
  publishingProfile: GalleryApplicationVersionPublishingProfile;
  /**
   * The current state of the gallery Application Version. The provisioning state, which only
   * appears in the response. Possible values include: 'Creating', 'Updating', 'Failed',
   * 'Succeeded', 'Deleting', 'Migrating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState1;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationStatus?: ReplicationStatus;
}

/**
 * A feature for gallery image.
 */
export interface GalleryImageFeature {
  /**
   * The name of the gallery image feature.
   */
  name?: string;
  /**
   * The value of the gallery image feature.
   */
  value?: string;
}

/**
 * This is the gallery image definition identifier.
 */
export interface GalleryImageIdentifier {
  /**
   * The name of the gallery image definition publisher.
   */
  publisher: string;
  /**
   * The name of the gallery image definition offer.
   */
  offer: string;
  /**
   * The name of the gallery image definition SKU.
   */
  sku: string;
}

/**
 * Describes the resource range.
 */
export interface ResourceRange {
  /**
   * The minimum number of the resource.
   */
  min?: number;
  /**
   * The maximum number of the resource.
   */
  max?: number;
}

/**
 * The properties describe the recommended machine configuration for this Image Definition. These
 * properties are updatable.
 */
export interface RecommendedMachineConfiguration {
  vCPUs?: ResourceRange;
  memory?: ResourceRange;
}

/**
 * Describes the disallowed disk types.
 */
export interface Disallowed {
  /**
   * A list of disk types.
   */
  diskTypes?: string[];
}

/**
 * Describes the gallery image definition purchase plan. This is used by marketplace images.
 */
export interface ImagePurchasePlan {
  /**
   * The plan ID.
   */
  name?: string;
  /**
   * The publisher ID.
   */
  publisher?: string;
  /**
   * The product ID.
   */
  product?: string;
}

/**
 * Specifies information about the gallery image definition that you want to create or update.
 */
export interface GalleryImage extends Resource {
  /**
   * The description of this gallery image definition resource. This property is updatable.
   */
  description?: string;
  /**
   * The Eula agreement for the gallery image definition.
   */
  eula?: string;
  /**
   * The privacy statement uri.
   */
  privacyStatementUri?: string;
  /**
   * The release note uri.
   */
  releaseNoteUri?: string;
  /**
   * This property allows you to specify the type of the OS that is included in the disk when
   * creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows**
   * <br><br> **Linux**. Possible values include: 'Windows', 'Linux'
   */
  osType: OperatingSystemTypes;
  /**
   * This property allows the user to specify whether the virtual machines created under this image
   * are 'Generalized' or 'Specialized'. Possible values include: 'Generalized', 'Specialized'
   */
  osState: OperatingSystemStateTypes;
  /**
   * The hypervisor generation of the Virtual Machine. Applicable to OS disks only. Possible values
   * include: 'V1', 'V2'
   */
  hyperVGeneration?: HyperVGeneration;
  /**
   * A list of gallery image features.
   */
  features?: GalleryImageFeature[];
  /**
   * The end of life date of the gallery image definition. This property can be used for
   * decommissioning purposes. This property is updatable.
   */
  endOfLifeDate?: Date;
  identifier: GalleryImageIdentifier;
  recommended?: RecommendedMachineConfiguration;
  disallowed?: Disallowed;
  purchasePlan?: ImagePurchasePlan;
  /**
   * The current state of the gallery image definition. The provisioning state, which only appears
   * in the response. Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded',
   * 'Deleting', 'Migrating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState2;
}

/**
 * Specifies information about the gallery image definition that you want to update.
 */
export interface GalleryImageUpdate extends UpdateResourceDefinition {
  /**
   * The description of this gallery image definition resource. This property is updatable.
   */
  description?: string;
  /**
   * The Eula agreement for the gallery image definition.
   */
  eula?: string;
  /**
   * The privacy statement uri.
   */
  privacyStatementUri?: string;
  /**
   * The release note uri.
   */
  releaseNoteUri?: string;
  /**
   * This property allows you to specify the type of the OS that is included in the disk when
   * creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows**
   * <br><br> **Linux**. Possible values include: 'Windows', 'Linux'
   */
  osType: OperatingSystemTypes;
  /**
   * This property allows the user to specify whether the virtual machines created under this image
   * are 'Generalized' or 'Specialized'. Possible values include: 'Generalized', 'Specialized'
   */
  osState: OperatingSystemStateTypes;
  /**
   * The hypervisor generation of the Virtual Machine. Applicable to OS disks only. Possible values
   * include: 'V1', 'V2'
   */
  hyperVGeneration?: HyperVGeneration;
  /**
   * A list of gallery image features.
   */
  features?: GalleryImageFeature[];
  /**
   * The end of life date of the gallery image definition. This property can be used for
   * decommissioning purposes. This property is updatable.
   */
  endOfLifeDate?: Date;
  identifier: GalleryImageIdentifier;
  recommended?: RecommendedMachineConfiguration;
  disallowed?: Disallowed;
  purchasePlan?: ImagePurchasePlan;
  /**
   * The current state of the gallery image definition. The provisioning state, which only appears
   * in the response. Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded',
   * 'Deleting', 'Migrating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState2;
}

/**
 * The publishing profile of a gallery image Version.
 */
export interface GalleryImageVersionPublishingProfile extends GalleryArtifactPublishingProfileBase {
}

/**
 * The gallery artifact version source.
 */
export interface GalleryArtifactVersionSource {
  /**
   * The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user
   * image or storage account resource.
   */
  id?: string;
  /**
   * The uri of the gallery artifact version source. Currently used to specify vhd/blob source.
   */
  uri?: string;
}

/**
 * This is the disk image base class.
 */
export interface GalleryDiskImage {
  /**
   * This property indicates the size of the VHD to be created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sizeInGB?: number;
  /**
   * The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'. Possible
   * values include: 'None', 'ReadOnly', 'ReadWrite'
   */
  hostCaching?: HostCaching;
  source?: GalleryArtifactVersionSource;
}

/**
 * This is the OS disk image.
 */
export interface GalleryOSDiskImage extends GalleryDiskImage {
}

/**
 * This is the data disk image.
 */
export interface GalleryDataDiskImage extends GalleryDiskImage {
  /**
   * This property specifies the logical unit number of the data disk. This value is used to
   * identify data disks within the Virtual Machine and therefore must be unique for each data disk
   * attached to the Virtual Machine.
   */
  lun: number;
}

/**
 * This is the storage profile of a Gallery Image Version.
 */
export interface GalleryImageVersionStorageProfile {
  source?: GalleryArtifactVersionSource;
  osDiskImage?: GalleryOSDiskImage;
  /**
   * A list of data disk images.
   */
  dataDiskImages?: GalleryDataDiskImage[];
}

/**
 * Specifies information about the gallery image version that you want to create or update.
 */
export interface GalleryImageVersion extends Resource {
  publishingProfile?: GalleryImageVersionPublishingProfile;
  /**
   * The current state of the gallery image version. The provisioning state, which only appears in
   * the response. Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded',
   * 'Deleting', 'Migrating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState3;
  storageProfile: GalleryImageVersionStorageProfile;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationStatus?: ReplicationStatus;
}

/**
 * Specifies information about the gallery image version that you want to update.
 */
export interface GalleryImageVersionUpdate extends UpdateResourceDefinition {
  publishingProfile?: GalleryImageVersionPublishingProfile;
  /**
   * The current state of the gallery image version. The provisioning state, which only appears in
   * the response. Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded',
   * 'Deleting', 'Migrating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState3;
  storageProfile: GalleryImageVersionStorageProfile;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationStatus?: ReplicationStatus;
}

/**
 * This is the disk image encryption base class.
 */
export interface DiskImageEncryption {
  /**
   * A relative URI containing the resource ID of the disk encryption set.
   */
  diskEncryptionSetId?: string;
}

/**
 * Contains encryption settings for an OS disk image.
 */
export interface OSDiskImageEncryption extends DiskImageEncryption {
}

/**
 * Contains encryption settings for a data disk image.
 */
export interface DataDiskImageEncryption extends DiskImageEncryption {
  /**
   * This property specifies the logical unit number of the data disk. This value is used to
   * identify data disks within the Virtual Machine and therefore must be unique for each data disk
   * attached to the Virtual Machine.
   */
  lun: number;
}

/**
 * Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in
 * the gallery artifact.
 */
export interface EncryptionImages {
  osDiskImage?: OSDiskImageEncryption;
  /**
   * A list of encryption specifications for data disk images.
   */
  dataDiskImages?: DataDiskImageEncryption[];
}

/**
 * Describes the target region information.
 */
export interface TargetRegion {
  /**
   * The name of the region.
   */
  name: string;
  /**
   * The number of replicas of the Image Version to be created per region. This property is
   * updatable.
   */
  regionalReplicaCount?: number;
  /**
   * Specifies the storage account type to be used to store the image. This property is not
   * updatable. Possible values include: 'Standard_LRS', 'Standard_ZRS', 'Premium_LRS'
   */
  storageAccountType?: StorageAccountType;
  encryption?: EncryptionImages;
}

/**
 * The managed artifact.
 */
export interface ManagedArtifact {
  /**
   * The managed artifact id.
   */
  id: string;
}

/**
 * The source image from which the Image Version is going to be created.
 */
export interface GalleryArtifactSource {
  managedImage: ManagedArtifact;
}

/**
 * Specifies information about the gallery sharing profile update.
 */
export interface SharingUpdate extends BaseResource {
  /**
   * This property allows you to specify the operation type of gallery sharing update. <br><br>
   * Possible values are: <br><br> **Add** <br><br> **Remove** <br><br> **Reset**. Possible values
   * include: 'Add', 'Remove', 'Reset'
   */
  operationType: SharingUpdateOperationTypes;
  /**
   * A list of sharing profile groups.
   */
  groups?: SharingProfileGroup[];
}

/**
 * The Resource model definition.
 */
export interface PirResource {
  /**
   * Resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource location
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
}

/**
 * Base information about the shared gallery resource in pir.
 */
export interface PirSharedGalleryResource extends PirResource {
  /**
   * The unique id of this shared gallery.
   */
  uniqueId?: string;
}

/**
 * Specifies information about the Shared Gallery that you want to create or update.
 */
export interface SharedGallery extends PirSharedGalleryResource {
}

/**
 * Specifies information about the gallery image definition that you want to create or update.
 */
export interface SharedGalleryImage extends PirSharedGalleryResource {
  /**
   * This property allows you to specify the type of the OS that is included in the disk when
   * creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows**
   * <br><br> **Linux**. Possible values include: 'Windows', 'Linux'
   */
  osType: OperatingSystemTypes;
  /**
   * This property allows the user to specify whether the virtual machines created under this image
   * are 'Generalized' or 'Specialized'. Possible values include: 'Generalized', 'Specialized'
   */
  osState: OperatingSystemStateTypes;
  /**
   * The end of life date of the gallery image definition. This property can be used for
   * decommissioning purposes. This property is updatable.
   */
  endOfLifeDate?: Date;
  identifier: GalleryImageIdentifier;
  recommended?: RecommendedMachineConfiguration;
  disallowed?: Disallowed;
  /**
   * The hypervisor generation of the Virtual Machine. Applicable to OS disks only. Possible values
   * include: 'V1', 'V2'
   */
  hyperVGeneration?: HyperVGeneration;
  /**
   * A list of gallery image features.
   */
  features?: GalleryImageFeature[];
  purchasePlan?: ImagePurchasePlan;
}

/**
 * Specifies information about the gallery image version that you want to create or update.
 */
export interface SharedGalleryImageVersion extends PirSharedGalleryResource {
  /**
   * The published date of the gallery image version Definition. This property can be used for
   * decommissioning purposes. This property is updatable.
   */
  publishedDate?: Date;
  /**
   * The end of life date of the gallery image version Definition. This property can be used for
   * decommissioning purposes. This property is updatable.
   */
  endOfLifeDate?: Date;
}

/**
 * Optional Parameters.
 */
export interface GalleriesGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The select expression to apply on the operation. Possible values include: 'Permissions'
   */
  select?: SelectPermissions;
}

/**
 * Optional Parameters.
 */
export interface GalleryImageVersionsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation. Possible values include: 'ReplicationStatus'
   */
  expand?: ReplicationStatusTypes;
}

/**
 * Optional Parameters.
 */
export interface GalleryApplicationVersionsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation. Possible values include: 'ReplicationStatus'
   */
  expand?: ReplicationStatusTypes;
}

/**
 * Optional Parameters.
 */
export interface SharedGalleriesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query parameter to decide what shared galleries to fetch when doing listing operations.
   * Possible values include: 'tenant'
   */
  sharedTo?: SharedToValues;
}

/**
 * Optional Parameters.
 */
export interface SharedGalleriesListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query parameter to decide what shared galleries to fetch when doing listing operations.
   * Possible values include: 'tenant'
   */
  sharedTo?: SharedToValues;
}

/**
 * Optional Parameters.
 */
export interface SharedGalleryImagesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query parameter to decide what shared galleries to fetch when doing listing operations.
   * Possible values include: 'tenant'
   */
  sharedTo?: SharedToValues;
}

/**
 * Optional Parameters.
 */
export interface SharedGalleryImagesListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query parameter to decide what shared galleries to fetch when doing listing operations.
   * Possible values include: 'tenant'
   */
  sharedTo?: SharedToValues;
}

/**
 * Optional Parameters.
 */
export interface SharedGalleryImageVersionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query parameter to decide what shared galleries to fetch when doing listing operations.
   * Possible values include: 'tenant'
   */
  sharedTo?: SharedToValues;
}

/**
 * Optional Parameters.
 */
export interface SharedGalleryImageVersionsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query parameter to decide what shared galleries to fetch when doing listing operations.
   * Possible values include: 'tenant'
   */
  sharedTo?: SharedToValues;
}

/**
 * An interface representing ComputeManagementClientOptions.
 */
export interface ComputeManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * The List Disks operation response.
 * @extends Array<Disk>
 */
export interface DiskList extends Array<Disk> {
  /**
   * The uri to fetch the next page of disks. Call ListNext() with this to fetch the next page of
   * disks.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Snapshots operation response.
 * @extends Array<Snapshot>
 */
export interface SnapshotList extends Array<Snapshot> {
  /**
   * The uri to fetch the next page of snapshots. Call ListNext() with this to fetch the next page
   * of snapshots.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List disk encryption set operation response.
 * @extends Array<DiskEncryptionSet>
 */
export interface DiskEncryptionSetList extends Array<DiskEncryptionSet> {
  /**
   * The uri to fetch the next page of disk encryption sets. Call ListNext() with this to fetch the
   * next page of disk encryption sets.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List resources which are encrypted with the disk encryption set.
 * @extends Array<string>
 */
export interface ResourceUriList extends Array<string> {
  /**
   * The uri to fetch the next page of encrypted resources. Call ListNext() with this to fetch the
   * next page of encrypted resources.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List disk access operation response.
 * @extends Array<DiskAccess>
 */
export interface DiskAccessList extends Array<DiskAccess> {
  /**
   * The uri to fetch the next page of disk access resources. Call ListNext() with this to fetch
   * the next page of disk access resources.
   */
  nextLink?: string;
}

/**
 * @interface
 * A list of private link resources
 * @extends Array<PrivateEndpointConnection>
 */
export interface PrivateEndpointConnectionListResult extends Array<PrivateEndpointConnection> {
  /**
   * The uri to fetch the next page of snapshots. Call ListNext() with this to fetch the next page
   * of snapshots.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Disk Restore Points operation response.
 * @extends Array<DiskRestorePoint>
 */
export interface DiskRestorePointList extends Array<DiskRestorePoint> {
  /**
   * The uri to fetch the next page of disk restore points. Call ListNext() with this to fetch the
   * next page of disk restore points.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Galleries operation response.
 * @extends Array<Gallery>
 */
export interface GalleryList extends Array<Gallery> {
  /**
   * The uri to fetch the next page of galleries. Call ListNext() with this to fetch the next page
   * of galleries.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Gallery Images operation response.
 * @extends Array<GalleryImage>
 */
export interface GalleryImageList extends Array<GalleryImage> {
  /**
   * The uri to fetch the next page of Image Definitions in the Shared Image Gallery. Call
   * ListNext() with this to fetch the next page of gallery image definitions.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Gallery Image version operation response.
 * @extends Array<GalleryImageVersion>
 */
export interface GalleryImageVersionList extends Array<GalleryImageVersion> {
  /**
   * The uri to fetch the next page of gallery image versions. Call ListNext() with this to fetch
   * the next page of gallery image versions.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Gallery Applications operation response.
 * @extends Array<GalleryApplication>
 */
export interface GalleryApplicationList extends Array<GalleryApplication> {
  /**
   * The uri to fetch the next page of Application Definitions in the Application Gallery. Call
   * ListNext() with this to fetch the next page of gallery Application Definitions.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Gallery Application version operation response.
 * @extends Array<GalleryApplicationVersion>
 */
export interface GalleryApplicationVersionList extends Array<GalleryApplicationVersion> {
  /**
   * The uri to fetch the next page of gallery Application Versions. Call ListNext() with this to
   * fetch the next page of gallery Application Versions.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Shared Galleries operation response.
 * @extends Array<SharedGallery>
 */
export interface SharedGalleryList extends Array<SharedGallery> {
  /**
   * The uri to fetch the next page of shared galleries. Call ListNext() with this to fetch the
   * next page of shared galleries.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Shared Gallery Images operation response.
 * @extends Array<SharedGalleryImage>
 */
export interface SharedGalleryImageList extends Array<SharedGalleryImage> {
  /**
   * The uri to fetch the next page of shared gallery images. Call ListNext() with this to fetch
   * the next page of shared gallery images.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Shared Gallery Image versions operation response.
 * @extends Array<SharedGalleryImageVersion>
 */
export interface SharedGalleryImageVersionList extends Array<SharedGalleryImageVersion> {
  /**
   * The uri to fetch the next page of shared gallery image versions. Call ListNext() with this to
   * fetch the next page of shared gallery image versions.
   */
  nextLink?: string;
}

/**
 * Defines values for DiskStorageAccountTypes.
 * Possible values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS'
 * @readonly
 * @enum {string}
 */
export type DiskStorageAccountTypes = 'Standard_LRS' | 'Premium_LRS' | 'StandardSSD_LRS' | 'UltraSSD_LRS';

/**
 * Defines values for ExtendedLocationTypes.
 * Possible values include: 'EdgeZone'
 * @readonly
 * @enum {string}
 */
export type ExtendedLocationTypes = 'EdgeZone';

/**
 * Defines values for OperatingSystemTypes.
 * Possible values include: 'Windows', 'Linux'
 * @readonly
 * @enum {string}
 */
export type OperatingSystemTypes = 'Windows' | 'Linux';

/**
 * Defines values for HyperVGeneration.
 * Possible values include: 'V1', 'V2'
 * @readonly
 * @enum {string}
 */
export type HyperVGeneration = 'V1' | 'V2';

/**
 * Defines values for DiskCreateOption.
 * Possible values include: 'Empty', 'Attach', 'FromImage', 'Import', 'Copy', 'Restore', 'Upload'
 * @readonly
 * @enum {string}
 */
export type DiskCreateOption = 'Empty' | 'Attach' | 'FromImage' | 'Import' | 'Copy' | 'Restore' | 'Upload';

/**
 * Defines values for DiskState.
 * Possible values include: 'Unattached', 'Attached', 'Reserved', 'ActiveSAS', 'ReadyToUpload',
 * 'ActiveUpload'
 * @readonly
 * @enum {string}
 */
export type DiskState = 'Unattached' | 'Attached' | 'Reserved' | 'ActiveSAS' | 'ReadyToUpload' | 'ActiveUpload';

/**
 * Defines values for EncryptionType.
 * Possible values include: 'EncryptionAtRestWithPlatformKey', 'EncryptionAtRestWithCustomerKey',
 * 'EncryptionAtRestWithPlatformAndCustomerKeys'
 * @readonly
 * @enum {string}
 */
export type EncryptionType = 'EncryptionAtRestWithPlatformKey' | 'EncryptionAtRestWithCustomerKey' | 'EncryptionAtRestWithPlatformAndCustomerKeys';

/**
 * Defines values for NetworkAccessPolicy.
 * Possible values include: 'AllowAll', 'AllowPrivate', 'DenyAll'
 * @readonly
 * @enum {string}
 */
export type NetworkAccessPolicy = 'AllowAll' | 'AllowPrivate' | 'DenyAll';

/**
 * Defines values for SnapshotStorageAccountTypes.
 * Possible values include: 'Standard_LRS', 'Premium_LRS', 'Standard_ZRS'
 * @readonly
 * @enum {string}
 */
export type SnapshotStorageAccountTypes = 'Standard_LRS' | 'Premium_LRS' | 'Standard_ZRS';

/**
 * Defines values for DiskEncryptionSetType.
 * Possible values include: 'EncryptionAtRestWithCustomerKey',
 * 'EncryptionAtRestWithPlatformAndCustomerKeys'
 * @readonly
 * @enum {string}
 */
export type DiskEncryptionSetType = 'EncryptionAtRestWithCustomerKey' | 'EncryptionAtRestWithPlatformAndCustomerKeys';

/**
 * Defines values for AccessLevel.
 * Possible values include: 'None', 'Read', 'Write'
 * @readonly
 * @enum {string}
 */
export type AccessLevel = 'None' | 'Read' | 'Write';

/**
 * Defines values for DiskEncryptionSetIdentityType.
 * Possible values include: 'SystemAssigned', 'None'
 * @readonly
 * @enum {string}
 */
export type DiskEncryptionSetIdentityType = 'SystemAssigned' | 'None';

/**
 * Defines values for PrivateEndpointServiceConnectionStatus.
 * Possible values include: 'Pending', 'Approved', 'Rejected'
 * @readonly
 * @enum {string}
 */
export type PrivateEndpointServiceConnectionStatus = 'Pending' | 'Approved' | 'Rejected';

/**
 * Defines values for PrivateEndpointConnectionProvisioningState.
 * Possible values include: 'Succeeded', 'Creating', 'Deleting', 'Failed'
 * @readonly
 * @enum {string}
 */
export type PrivateEndpointConnectionProvisioningState = 'Succeeded' | 'Creating' | 'Deleting' | 'Failed';

/**
 * Defines values for GallerySharingPermissionTypes.
 * Possible values include: 'Private', 'Groups'
 * @readonly
 * @enum {string}
 */
export type GallerySharingPermissionTypes = 'Private' | 'Groups';

/**
 * Defines values for SharingProfileGroupTypes.
 * Possible values include: 'Subscriptions', 'AADTenants'
 * @readonly
 * @enum {string}
 */
export type SharingProfileGroupTypes = 'Subscriptions' | 'AADTenants';

/**
 * Defines values for AggregatedReplicationState.
 * Possible values include: 'Unknown', 'InProgress', 'Completed', 'Failed'
 * @readonly
 * @enum {string}
 */
export type AggregatedReplicationState = 'Unknown' | 'InProgress' | 'Completed' | 'Failed';

/**
 * Defines values for ReplicationState.
 * Possible values include: 'Unknown', 'Replicating', 'Completed', 'Failed'
 * @readonly
 * @enum {string}
 */
export type ReplicationState = 'Unknown' | 'Replicating' | 'Completed' | 'Failed';

/**
 * Defines values for OperatingSystemStateTypes.
 * Possible values include: 'Generalized', 'Specialized'
 * @readonly
 * @enum {string}
 */
export type OperatingSystemStateTypes = 'Generalized' | 'Specialized';

/**
 * Defines values for StorageAccountType.
 * Possible values include: 'Standard_LRS', 'Standard_ZRS', 'Premium_LRS'
 * @readonly
 * @enum {string}
 */
export type StorageAccountType = 'Standard_LRS' | 'Standard_ZRS' | 'Premium_LRS';

/**
 * Defines values for HostCaching.
 * Possible values include: 'None', 'ReadOnly', 'ReadWrite'
 * @readonly
 * @enum {string}
 */
export type HostCaching = 'None' | 'ReadOnly' | 'ReadWrite';

/**
 * Defines values for SharingUpdateOperationTypes.
 * Possible values include: 'Add', 'Remove', 'Reset'
 * @readonly
 * @enum {string}
 */
export type SharingUpdateOperationTypes = 'Add' | 'Remove' | 'Reset';

/**
 * Defines values for SelectPermissions.
 * Possible values include: 'Permissions'
 * @readonly
 * @enum {string}
 */
export type SelectPermissions = 'Permissions';

/**
 * Defines values for ReplicationStatusTypes.
 * Possible values include: 'ReplicationStatus'
 * @readonly
 * @enum {string}
 */
export type ReplicationStatusTypes = 'ReplicationStatus';

/**
 * Defines values for SharedToValues.
 * Possible values include: 'tenant'
 * @readonly
 * @enum {string}
 */
export type SharedToValues = 'tenant';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded', 'Deleting', 'Migrating'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Creating' | 'Updating' | 'Failed' | 'Succeeded' | 'Deleting' | 'Migrating';

/**
 * Defines values for ProvisioningState1.
 * Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded', 'Deleting', 'Migrating'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState1 = 'Creating' | 'Updating' | 'Failed' | 'Succeeded' | 'Deleting' | 'Migrating';

/**
 * Defines values for ProvisioningState2.
 * Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded', 'Deleting', 'Migrating'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState2 = 'Creating' | 'Updating' | 'Failed' | 'Succeeded' | 'Deleting' | 'Migrating';

/**
 * Defines values for ProvisioningState3.
 * Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded', 'Deleting', 'Migrating'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState3 = 'Creating' | 'Updating' | 'Failed' | 'Succeeded' | 'Deleting' | 'Migrating';

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DisksCreateOrUpdateResponse = Disk & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Disk;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DisksUpdateResponse = Disk & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Disk;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DisksGetResponse = Disk & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Disk;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DisksListByResourceGroupResponse = DiskList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DisksListResponse = DiskList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskList;
    };
};

/**
 * Contains response data for the grantAccess operation.
 */
export type DisksGrantAccessResponse = AccessUri & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessUri;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DisksBeginCreateOrUpdateResponse = Disk & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Disk;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type DisksBeginUpdateResponse = Disk & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Disk;
    };
};

/**
 * Contains response data for the beginGrantAccess operation.
 */
export type DisksBeginGrantAccessResponse = AccessUri & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessUri;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DisksListByResourceGroupNextResponse = DiskList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type DisksListNextResponse = DiskList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SnapshotsCreateOrUpdateResponse = Snapshot & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Snapshot;
    };
};

/**
 * Contains response data for the update operation.
 */
export type SnapshotsUpdateResponse = Snapshot & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Snapshot;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SnapshotsGetResponse = Snapshot & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Snapshot;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type SnapshotsListByResourceGroupResponse = SnapshotList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SnapshotsListResponse = SnapshotList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotList;
    };
};

/**
 * Contains response data for the grantAccess operation.
 */
export type SnapshotsGrantAccessResponse = AccessUri & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessUri;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type SnapshotsBeginCreateOrUpdateResponse = Snapshot & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Snapshot;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type SnapshotsBeginUpdateResponse = Snapshot & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Snapshot;
    };
};

/**
 * Contains response data for the beginGrantAccess operation.
 */
export type SnapshotsBeginGrantAccessResponse = AccessUri & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessUri;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type SnapshotsListByResourceGroupNextResponse = SnapshotList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SnapshotsListNextResponse = SnapshotList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DiskEncryptionSetsCreateOrUpdateResponse = DiskEncryptionSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskEncryptionSet;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DiskEncryptionSetsUpdateResponse = DiskEncryptionSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskEncryptionSet;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DiskEncryptionSetsGetResponse = DiskEncryptionSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskEncryptionSet;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DiskEncryptionSetsListByResourceGroupResponse = DiskEncryptionSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskEncryptionSetList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DiskEncryptionSetsListResponse = DiskEncryptionSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskEncryptionSetList;
    };
};

/**
 * Contains response data for the listAssociatedResources operation.
 */
export type DiskEncryptionSetsListAssociatedResourcesResponse = ResourceUriList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceUriList;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DiskEncryptionSetsBeginCreateOrUpdateResponse = DiskEncryptionSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskEncryptionSet;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type DiskEncryptionSetsBeginUpdateResponse = DiskEncryptionSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskEncryptionSet;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DiskEncryptionSetsListByResourceGroupNextResponse = DiskEncryptionSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskEncryptionSetList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type DiskEncryptionSetsListNextResponse = DiskEncryptionSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskEncryptionSetList;
    };
};

/**
 * Contains response data for the listAssociatedResourcesNext operation.
 */
export type DiskEncryptionSetsListAssociatedResourcesNextResponse = ResourceUriList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceUriList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DiskAccessesCreateOrUpdateResponse = DiskAccess & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskAccess;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DiskAccessesUpdateResponse = DiskAccess & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskAccess;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DiskAccessesGetResponse = DiskAccess & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskAccess;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DiskAccessesListByResourceGroupResponse = DiskAccessList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskAccessList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DiskAccessesListResponse = DiskAccessList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskAccessList;
    };
};

/**
 * Contains response data for the getPrivateLinkResources operation.
 */
export type DiskAccessesGetPrivateLinkResourcesResponse = PrivateLinkResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResourceListResult;
    };
};

/**
 * Contains response data for the updateAPrivateEndpointConnection operation.
 */
export type DiskAccessesUpdateAPrivateEndpointConnectionResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the getAPrivateEndpointConnection operation.
 */
export type DiskAccessesGetAPrivateEndpointConnectionResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the listPrivateEndpointConnections operation.
 */
export type DiskAccessesListPrivateEndpointConnectionsResponse = PrivateEndpointConnectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DiskAccessesBeginCreateOrUpdateResponse = DiskAccess & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskAccess;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type DiskAccessesBeginUpdateResponse = DiskAccess & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskAccess;
    };
};

/**
 * Contains response data for the beginUpdateAPrivateEndpointConnection operation.
 */
export type DiskAccessesBeginUpdateAPrivateEndpointConnectionResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DiskAccessesListByResourceGroupNextResponse = DiskAccessList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskAccessList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type DiskAccessesListNextResponse = DiskAccessList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskAccessList;
    };
};

/**
 * Contains response data for the listPrivateEndpointConnectionsNext operation.
 */
export type DiskAccessesListPrivateEndpointConnectionsNextResponse = PrivateEndpointConnectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DiskRestorePointGetResponse = DiskRestorePoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskRestorePoint;
    };
};

/**
 * Contains response data for the listByRestorePoint operation.
 */
export type DiskRestorePointListByRestorePointResponse = DiskRestorePointList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskRestorePointList;
    };
};

/**
 * Contains response data for the listByRestorePointNext operation.
 */
export type DiskRestorePointListByRestorePointNextResponse = DiskRestorePointList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskRestorePointList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type GalleriesCreateOrUpdateResponse = Gallery & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Gallery;
    };
};

/**
 * Contains response data for the update operation.
 */
export type GalleriesUpdateResponse = Gallery & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Gallery;
    };
};

/**
 * Contains response data for the get operation.
 */
export type GalleriesGetResponse = Gallery & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Gallery;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type GalleriesListByResourceGroupResponse = GalleryList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type GalleriesListResponse = GalleryList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryList;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type GalleriesBeginCreateOrUpdateResponse = Gallery & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Gallery;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type GalleriesBeginUpdateResponse = Gallery & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Gallery;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type GalleriesListByResourceGroupNextResponse = GalleryList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type GalleriesListNextResponse = GalleryList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type GalleryImagesCreateOrUpdateResponse = GalleryImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImage;
    };
};

/**
 * Contains response data for the update operation.
 */
export type GalleryImagesUpdateResponse = GalleryImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImage;
    };
};

/**
 * Contains response data for the get operation.
 */
export type GalleryImagesGetResponse = GalleryImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImage;
    };
};

/**
 * Contains response data for the listByGallery operation.
 */
export type GalleryImagesListByGalleryResponse = GalleryImageList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImageList;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type GalleryImagesBeginCreateOrUpdateResponse = GalleryImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImage;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type GalleryImagesBeginUpdateResponse = GalleryImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImage;
    };
};

/**
 * Contains response data for the listByGalleryNext operation.
 */
export type GalleryImagesListByGalleryNextResponse = GalleryImageList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImageList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type GalleryImageVersionsCreateOrUpdateResponse = GalleryImageVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImageVersion;
    };
};

/**
 * Contains response data for the update operation.
 */
export type GalleryImageVersionsUpdateResponse = GalleryImageVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImageVersion;
    };
};

/**
 * Contains response data for the get operation.
 */
export type GalleryImageVersionsGetResponse = GalleryImageVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImageVersion;
    };
};

/**
 * Contains response data for the listByGalleryImage operation.
 */
export type GalleryImageVersionsListByGalleryImageResponse = GalleryImageVersionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImageVersionList;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type GalleryImageVersionsBeginCreateOrUpdateResponse = GalleryImageVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImageVersion;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type GalleryImageVersionsBeginUpdateResponse = GalleryImageVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImageVersion;
    };
};

/**
 * Contains response data for the listByGalleryImageNext operation.
 */
export type GalleryImageVersionsListByGalleryImageNextResponse = GalleryImageVersionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImageVersionList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type GalleryApplicationsCreateOrUpdateResponse = GalleryApplication & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplication;
    };
};

/**
 * Contains response data for the update operation.
 */
export type GalleryApplicationsUpdateResponse = GalleryApplication & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplication;
    };
};

/**
 * Contains response data for the get operation.
 */
export type GalleryApplicationsGetResponse = GalleryApplication & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplication;
    };
};

/**
 * Contains response data for the listByGallery operation.
 */
export type GalleryApplicationsListByGalleryResponse = GalleryApplicationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplicationList;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type GalleryApplicationsBeginCreateOrUpdateResponse = GalleryApplication & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplication;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type GalleryApplicationsBeginUpdateResponse = GalleryApplication & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplication;
    };
};

/**
 * Contains response data for the listByGalleryNext operation.
 */
export type GalleryApplicationsListByGalleryNextResponse = GalleryApplicationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplicationList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type GalleryApplicationVersionsCreateOrUpdateResponse = GalleryApplicationVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplicationVersion;
    };
};

/**
 * Contains response data for the update operation.
 */
export type GalleryApplicationVersionsUpdateResponse = GalleryApplicationVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplicationVersion;
    };
};

/**
 * Contains response data for the get operation.
 */
export type GalleryApplicationVersionsGetResponse = GalleryApplicationVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplicationVersion;
    };
};

/**
 * Contains response data for the listByGalleryApplication operation.
 */
export type GalleryApplicationVersionsListByGalleryApplicationResponse = GalleryApplicationVersionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplicationVersionList;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type GalleryApplicationVersionsBeginCreateOrUpdateResponse = GalleryApplicationVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplicationVersion;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type GalleryApplicationVersionsBeginUpdateResponse = GalleryApplicationVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplicationVersion;
    };
};

/**
 * Contains response data for the listByGalleryApplicationNext operation.
 */
export type GalleryApplicationVersionsListByGalleryApplicationNextResponse = GalleryApplicationVersionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplicationVersionList;
    };
};

/**
 * Contains response data for the update operation.
 */
export type GallerySharingProfileUpdateResponse = SharingUpdate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharingUpdate;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type GallerySharingProfileBeginUpdateResponse = SharingUpdate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharingUpdate;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SharedGalleriesListResponse = SharedGalleryList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedGalleryList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SharedGalleriesGetResponse = SharedGallery & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedGallery;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SharedGalleriesListNextResponse = SharedGalleryList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedGalleryList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SharedGalleryImagesListResponse = SharedGalleryImageList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedGalleryImageList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SharedGalleryImagesGetResponse = SharedGalleryImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedGalleryImage;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SharedGalleryImagesListNextResponse = SharedGalleryImageList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedGalleryImageList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SharedGalleryImageVersionsListResponse = SharedGalleryImageVersionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedGalleryImageVersionList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SharedGalleryImageVersionsGetResponse = SharedGalleryImageVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedGalleryImageVersion;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SharedGalleryImageVersionsListNextResponse = SharedGalleryImageVersionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedGalleryImageVersionList;
    };
};
