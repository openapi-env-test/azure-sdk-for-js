/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  VirtualMachineExtension as VirtualMachineExtensionMapper,
  VirtualMachineExtensionUpdate as VirtualMachineExtensionUpdateMapper,
  VirtualMachineCaptureParameters as VirtualMachineCaptureParametersMapper,
  VirtualMachine as VirtualMachineMapper,
  VirtualMachineUpdate as VirtualMachineUpdateMapper,
  VirtualMachineReimageParameters as VirtualMachineReimageParametersMapper,
  VirtualMachineInstallPatchesParameters as VirtualMachineInstallPatchesParametersMapper,
  RunCommandInput as RunCommandInputMapper,
  VirtualMachineRunCommand as VirtualMachineRunCommandMapper,
  VirtualMachineRunCommandUpdate as VirtualMachineRunCommandUpdateMapper
} from "../models/mappers";

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const extensionParameters: OperationParameter = {
  parameterPath: "extensionParameters",
  mapper: VirtualMachineExtensionMapper
};

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const vmName: OperationURLParameter = {
  parameterPath: "vmName",
  mapper: {
    serializedName: "vmName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const vmExtensionName: OperationURLParameter = {
  parameterPath: "vmExtensionName",
  mapper: {
    serializedName: "vmExtensionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2022-03-01",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const extensionParameters1: OperationParameter = {
  parameterPath: "extensionParameters",
  mapper: VirtualMachineExtensionUpdateMapper
};

export const expand: OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const location: OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-\\w\\._]+$")
    },
    serializedName: "location",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters: OperationParameter = {
  parameterPath: "parameters",
  mapper: VirtualMachineCaptureParametersMapper
};

export const parameters1: OperationParameter = {
  parameterPath: "parameters",
  mapper: VirtualMachineMapper
};

export const parameters2: OperationParameter = {
  parameterPath: "parameters",
  mapper: VirtualMachineUpdateMapper
};

export const forceDeletion: OperationQueryParameter = {
  parameterPath: ["options", "forceDeletion"],
  mapper: {
    serializedName: "forceDeletion",
    type: {
      name: "Boolean"
    }
  }
};

export const expand1: OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "Enum",
      allowedValues: ["instanceView", "userData"]
    }
  }
};

export const hibernate: OperationQueryParameter = {
  parameterPath: ["options", "hibernate"],
  mapper: {
    serializedName: "hibernate",
    type: {
      name: "Boolean"
    }
  }
};

export const filter: OperationQueryParameter = {
  parameterPath: ["options", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const statusOnly: OperationQueryParameter = {
  parameterPath: ["options", "statusOnly"],
  mapper: {
    serializedName: "statusOnly",
    type: {
      name: "String"
    }
  }
};

export const skipShutdown: OperationQueryParameter = {
  parameterPath: ["options", "skipShutdown"],
  mapper: {
    defaultValue: false,
    serializedName: "skipShutdown",
    type: {
      name: "Boolean"
    }
  }
};

export const parameters3: OperationParameter = {
  parameterPath: ["options", "parameters"],
  mapper: VirtualMachineReimageParametersMapper
};

export const sasUriExpirationTimeInMinutes: OperationQueryParameter = {
  parameterPath: ["options", "sasUriExpirationTimeInMinutes"],
  mapper: {
    serializedName: "sasUriExpirationTimeInMinutes",
    type: {
      name: "Number"
    }
  }
};

export const installPatchesInput: OperationParameter = {
  parameterPath: "installPatchesInput",
  mapper: VirtualMachineInstallPatchesParametersMapper
};

export const parameters4: OperationParameter = {
  parameterPath: "parameters",
  mapper: RunCommandInputMapper
};

export const accept1: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json, text/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const commandId: OperationURLParameter = {
  parameterPath: "commandId",
  mapper: {
    serializedName: "commandId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const runCommand: OperationParameter = {
  parameterPath: "runCommand",
  mapper: VirtualMachineRunCommandMapper
};

export const runCommandName: OperationURLParameter = {
  parameterPath: "runCommandName",
  mapper: {
    serializedName: "runCommandName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const runCommand1: OperationParameter = {
  parameterPath: "runCommand",
  mapper: VirtualMachineRunCommandUpdateMapper
};

export const vmScaleSetName: OperationURLParameter = {
  parameterPath: "vmScaleSetName",
  mapper: {
    serializedName: "vmScaleSetName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const instanceId: OperationURLParameter = {
  parameterPath: "instanceId",
  mapper: {
    serializedName: "instanceId",
    required: true,
    type: {
      name: "String"
    }
  }
};
