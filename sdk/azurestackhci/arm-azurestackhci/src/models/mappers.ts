/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const ArcSettingList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArcSettingList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArcSetting"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PerNodeState: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PerNodeState",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      arcInstance: {
        serializedName: "arcInstance",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const ArcSettingsPatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArcSettingsPatch",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      connectivityProperties: {
        serializedName: "properties.connectivityProperties",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const PasswordCredential: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PasswordCredential",
    modelProperties: {
      secretText: {
        serializedName: "secretText",
        type: {
          name: "String"
        }
      },
      keyId: {
        serializedName: "keyId",
        type: {
          name: "String"
        }
      },
      startDateTime: {
        serializedName: "startDateTime",
        type: {
          name: "DateTime"
        }
      },
      endDateTime: {
        serializedName: "endDateTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ArcIdentityResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArcIdentityResponse",
    modelProperties: {
      arcApplicationClientId: {
        serializedName: "properties.arcApplicationClientId",
        type: {
          name: "String"
        }
      },
      arcApplicationTenantId: {
        serializedName: "properties.arcApplicationTenantId",
        type: {
          name: "String"
        }
      },
      arcServicePrincipalObjectId: {
        serializedName: "properties.arcServicePrincipalObjectId",
        type: {
          name: "String"
        }
      },
      arcApplicationObjectId: {
        serializedName: "properties.arcApplicationObjectId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClusterList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ClusterList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Cluster"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserAssignedIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserAssignedIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      clientId: {
        serializedName: "clientId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const SoftwareAssuranceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SoftwareAssuranceProperties",
    modelProperties: {
      softwareAssuranceStatus: {
        serializedName: "softwareAssuranceStatus",
        type: {
          name: "String"
        }
      },
      softwareAssuranceIntent: {
        serializedName: "softwareAssuranceIntent",
        type: {
          name: "String"
        }
      },
      lastUpdated: {
        serializedName: "lastUpdated",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ClusterDesiredProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ClusterDesiredProperties",
    modelProperties: {
      windowsServerSubscription: {
        serializedName: "windowsServerSubscription",
        type: {
          name: "String"
        }
      },
      diagnosticLevel: {
        serializedName: "diagnosticLevel",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClusterReportedProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ClusterReportedProperties",
    modelProperties: {
      clusterName: {
        serializedName: "clusterName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      clusterId: {
        serializedName: "clusterId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      clusterVersion: {
        serializedName: "clusterVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      nodes: {
        serializedName: "nodes",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ClusterNode"
            }
          }
        }
      },
      lastUpdated: {
        serializedName: "lastUpdated",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      imdsAttestation: {
        serializedName: "imdsAttestation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      diagnosticLevel: {
        serializedName: "diagnosticLevel",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClusterNode: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ClusterNode",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      windowsServerSubscription: {
        serializedName: "windowsServerSubscription",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      nodeType: {
        serializedName: "nodeType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      manufacturer: {
        serializedName: "manufacturer",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "osName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "osVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      osDisplayVersion: {
        serializedName: "osDisplayVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      serialNumber: {
        serializedName: "serialNumber",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      coreCount: {
        serializedName: "coreCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      memoryInGiB: {
        serializedName: "memoryInGiB",
        readOnly: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ClusterPatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ClusterPatch",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      cloudManagementEndpoint: {
        serializedName: "properties.cloudManagementEndpoint",
        type: {
          name: "String"
        }
      },
      aadClientId: {
        serializedName: "properties.aadClientId",
        type: {
          name: "String"
        }
      },
      aadTenantId: {
        serializedName: "properties.aadTenantId",
        type: {
          name: "String"
        }
      },
      desiredProperties: {
        serializedName: "properties.desiredProperties",
        type: {
          name: "Composite",
          className: "ClusterDesiredProperties"
        }
      },
      principalId: {
        serializedName: "identity.principalId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "identity.tenantId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      type: {
        serializedName: "identity.type",
        type: {
          name: "String"
        }
      },
      userAssignedIdentities: {
        serializedName: "identity.userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "UserAssignedIdentity" }
          }
        }
      }
    }
  }
};

export const UploadCertificateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UploadCertificateRequest",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "RawCertificateData"
        }
      }
    }
  }
};

export const RawCertificateData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RawCertificateData",
    modelProperties: {
      certificates: {
        serializedName: "certificates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ClusterIdentityResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ClusterIdentityResponse",
    modelProperties: {
      aadClientId: {
        serializedName: "properties.aadClientId",
        type: {
          name: "String"
        }
      },
      aadTenantId: {
        serializedName: "properties.aadTenantId",
        type: {
          name: "String"
        }
      },
      aadServicePrincipalObjectId: {
        serializedName: "properties.aadServicePrincipalObjectId",
        type: {
          name: "String"
        }
      },
      aadApplicationObjectId: {
        serializedName: "properties.aadApplicationObjectId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SoftwareAssuranceChangeRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SoftwareAssuranceChangeRequest",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SoftwareAssuranceChangeRequestProperties"
        }
      }
    }
  }
};

export const SoftwareAssuranceChangeRequestProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SoftwareAssuranceChangeRequestProperties",
    modelProperties: {
      softwareAssuranceIntent: {
        serializedName: "softwareAssuranceIntent",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExtensionList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtensionList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Extension"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PerNodeExtensionState: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PerNodeExtensionState",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      extension: {
        serializedName: "extension",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OfferList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OfferList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Offer"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SkuMappings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SkuMappings",
    modelProperties: {
      catalogPlanId: {
        serializedName: "catalogPlanId",
        type: {
          name: "String"
        }
      },
      marketplaceSkuId: {
        serializedName: "marketplaceSkuId",
        type: {
          name: "String"
        }
      },
      marketplaceSkuVersions: {
        serializedName: "marketplaceSkuVersions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PublisherList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PublisherList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Publisher"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SkuList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SkuList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Sku"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UpdateRunList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateRunList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UpdateRun"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Step: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Step",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      startTimeUtc: {
        serializedName: "startTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      endTimeUtc: {
        serializedName: "endTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      lastUpdatedTimeUtc: {
        serializedName: "lastUpdatedTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      steps: {
        serializedName: "steps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Step"
            }
          }
        }
      }
    }
  }
};

export const UpdateSummariesList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateSummariesList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UpdateSummaries"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackageVersionInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PackageVersionInfo",
    modelProperties: {
      packageType: {
        serializedName: "packageType",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      lastUpdated: {
        serializedName: "lastUpdated",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const UpdateList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Update"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UpdatePrerequisite: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdatePrerequisite",
    modelProperties: {
      updateType: {
        serializedName: "updateType",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      packageName: {
        serializedName: "packageName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ArcConnectivityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArcConnectivityProperties",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ArcSetting: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArcSetting",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      arcInstanceResourceGroup: {
        serializedName: "properties.arcInstanceResourceGroup",
        type: {
          name: "String"
        }
      },
      arcApplicationClientId: {
        serializedName: "properties.arcApplicationClientId",
        type: {
          name: "String"
        }
      },
      arcApplicationTenantId: {
        serializedName: "properties.arcApplicationTenantId",
        type: {
          name: "String"
        }
      },
      arcServicePrincipalObjectId: {
        serializedName: "properties.arcServicePrincipalObjectId",
        type: {
          name: "String"
        }
      },
      arcApplicationObjectId: {
        serializedName: "properties.arcApplicationObjectId",
        type: {
          name: "String"
        }
      },
      aggregateState: {
        serializedName: "properties.aggregateState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      perNodeDetails: {
        serializedName: "properties.perNodeDetails",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PerNodeState"
            }
          }
        }
      },
      connectivityProperties: {
        serializedName: "properties.connectivityProperties",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const Extension: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Extension",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      aggregateState: {
        serializedName: "properties.aggregateState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      perNodeExtensionDetails: {
        serializedName: "properties.perNodeExtensionDetails",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PerNodeExtensionState"
            }
          }
        }
      },
      forceUpdateTag: {
        serializedName: "properties.extensionParameters.forceUpdateTag",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "properties.extensionParameters.publisher",
        type: {
          name: "String"
        }
      },
      typePropertiesExtensionParametersType: {
        serializedName: "properties.extensionParameters.type",
        type: {
          name: "String"
        }
      },
      typeHandlerVersion: {
        serializedName: "properties.extensionParameters.typeHandlerVersion",
        type: {
          name: "String"
        }
      },
      autoUpgradeMinorVersion: {
        serializedName:
          "properties.extensionParameters.autoUpgradeMinorVersion",
        type: {
          name: "Boolean"
        }
      },
      settings: {
        serializedName: "properties.extensionParameters.settings",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      protectedSettings: {
        serializedName: "properties.extensionParameters.protectedSettings",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const Offer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Offer",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      publisherId: {
        serializedName: "properties.publisherId",
        type: {
          name: "String"
        }
      },
      content: {
        serializedName: "properties.content",
        type: {
          name: "String"
        }
      },
      contentVersion: {
        serializedName: "properties.contentVersion",
        type: {
          name: "String"
        }
      },
      skuMappings: {
        serializedName: "properties.skuMappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SkuMappings"
            }
          }
        }
      }
    }
  }
};

export const Publisher: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Publisher",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Sku: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      publisherId: {
        serializedName: "properties.publisherId",
        type: {
          name: "String"
        }
      },
      offerId: {
        serializedName: "properties.offerId",
        type: {
          name: "String"
        }
      },
      content: {
        serializedName: "properties.content",
        type: {
          name: "String"
        }
      },
      contentVersion: {
        serializedName: "properties.contentVersion",
        type: {
          name: "String"
        }
      },
      skuMappings: {
        serializedName: "properties.skuMappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SkuMappings"
            }
          }
        }
      }
    }
  }
};

export const UpdateRun: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateRun",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      duration: {
        serializedName: "properties.duration",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      namePropertiesProgressName: {
        serializedName: "properties.progress.name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.progress.description",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "properties.progress.errorMessage",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.progress.status",
        type: {
          name: "String"
        }
      },
      startTimeUtc: {
        serializedName: "properties.progress.startTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      endTimeUtc: {
        serializedName: "properties.progress.endTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      lastUpdatedTimeUtc: {
        serializedName: "properties.progress.lastUpdatedTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      steps: {
        serializedName: "properties.progress.steps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Step"
            }
          }
        }
      }
    }
  }
};

export const UpdateSummaries: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateSummaries",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      oemFamily: {
        serializedName: "properties.oemFamily",
        type: {
          name: "String"
        }
      },
      hardwareModel: {
        serializedName: "properties.hardwareModel",
        type: {
          name: "String"
        }
      },
      packageVersions: {
        serializedName: "properties.packageVersions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PackageVersionInfo"
            }
          }
        }
      },
      currentVersion: {
        serializedName: "properties.currentVersion",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Update: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Update",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      installedDate: {
        serializedName: "properties.installedDate",
        type: {
          name: "DateTime"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      prerequisites: {
        serializedName: "properties.prerequisites",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UpdatePrerequisite"
            }
          }
        }
      },
      packagePath: {
        serializedName: "properties.packagePath",
        type: {
          name: "String"
        }
      },
      packageSizeInMb: {
        serializedName: "properties.packageSizeInMb",
        type: {
          name: "Number"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "properties.publisher",
        type: {
          name: "String"
        }
      },
      releaseLink: {
        serializedName: "properties.releaseLink",
        type: {
          name: "String"
        }
      },
      availabilityType: {
        serializedName: "properties.availabilityType",
        type: {
          name: "String"
        }
      },
      packageType: {
        serializedName: "properties.packageType",
        type: {
          name: "String"
        }
      },
      additionalProperties: {
        serializedName: "properties.additionalProperties",
        type: {
          name: "String"
        }
      },
      progressPercentage: {
        serializedName: "properties.updateStateProperties.progressPercentage",
        type: {
          name: "Number"
        }
      },
      notifyMessage: {
        serializedName: "properties.updateStateProperties.notifyMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Cluster: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Cluster",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      cloudId: {
        serializedName: "properties.cloudId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      cloudManagementEndpoint: {
        serializedName: "properties.cloudManagementEndpoint",
        type: {
          name: "String"
        }
      },
      aadClientId: {
        serializedName: "properties.aadClientId",
        type: {
          name: "String"
        }
      },
      aadTenantId: {
        serializedName: "properties.aadTenantId",
        type: {
          name: "String"
        }
      },
      aadApplicationObjectId: {
        serializedName: "properties.aadApplicationObjectId",
        type: {
          name: "String"
        }
      },
      aadServicePrincipalObjectId: {
        serializedName: "properties.aadServicePrincipalObjectId",
        type: {
          name: "String"
        }
      },
      softwareAssuranceProperties: {
        serializedName: "properties.softwareAssuranceProperties",
        type: {
          name: "Composite",
          className: "SoftwareAssuranceProperties"
        }
      },
      desiredProperties: {
        serializedName: "properties.desiredProperties",
        type: {
          name: "Composite",
          className: "ClusterDesiredProperties"
        }
      },
      reportedProperties: {
        serializedName: "properties.reportedProperties",
        type: {
          name: "Composite",
          className: "ClusterReportedProperties"
        }
      },
      trialDaysRemaining: {
        serializedName: "properties.trialDaysRemaining",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      billingModel: {
        serializedName: "properties.billingModel",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      registrationTimestamp: {
        serializedName: "properties.registrationTimestamp",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      lastSyncTimestamp: {
        serializedName: "properties.lastSyncTimestamp",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      lastBillingTimestamp: {
        serializedName: "properties.lastBillingTimestamp",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      serviceEndpoint: {
        serializedName: "properties.serviceEndpoint",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "identity.principalId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "identity.tenantId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      typeIdentityType: {
        serializedName: "identity.type",
        type: {
          name: "String"
        }
      },
      userAssignedIdentities: {
        serializedName: "identity.userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "UserAssignedIdentity" }
          }
        }
      }
    }
  }
};
