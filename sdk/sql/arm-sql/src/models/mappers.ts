/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const ExtendedDatabaseBlobAuditingPolicy: msRest.CompositeMapper = {
  serializedName: "ExtendedDatabaseBlobAuditingPolicy",
  type: {
    name: "Composite",
    className: "ExtendedDatabaseBlobAuditingPolicy",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      predicateExpression: {
        serializedName: "properties.predicateExpression",
        type: {
          name: "String"
        }
      },
      state: {
        required: true,
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled"
          ]
        }
      },
      storageEndpoint: {
        serializedName: "properties.storageEndpoint",
        type: {
          name: "String"
        }
      },
      storageAccountAccessKey: {
        serializedName: "properties.storageAccountAccessKey",
        type: {
          name: "String"
        }
      },
      retentionDays: {
        serializedName: "properties.retentionDays",
        type: {
          name: "Number"
        }
      },
      auditActionsAndGroups: {
        serializedName: "properties.auditActionsAndGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      storageAccountSubscriptionId: {
        serializedName: "properties.storageAccountSubscriptionId",
        type: {
          name: "Uuid"
        }
      },
      isStorageSecondaryKeyInUse: {
        serializedName: "properties.isStorageSecondaryKeyInUse",
        type: {
          name: "Boolean"
        }
      },
      isAzureMonitorTargetEnabled: {
        serializedName: "properties.isAzureMonitorTargetEnabled",
        type: {
          name: "Boolean"
        }
      },
      queueDelayMs: {
        serializedName: "properties.queueDelayMs",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ExtendedServerBlobAuditingPolicy: msRest.CompositeMapper = {
  serializedName: "ExtendedServerBlobAuditingPolicy",
  type: {
    name: "Composite",
    className: "ExtendedServerBlobAuditingPolicy",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      predicateExpression: {
        serializedName: "properties.predicateExpression",
        type: {
          name: "String"
        }
      },
      state: {
        required: true,
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled"
          ]
        }
      },
      storageEndpoint: {
        serializedName: "properties.storageEndpoint",
        type: {
          name: "String"
        }
      },
      storageAccountAccessKey: {
        serializedName: "properties.storageAccountAccessKey",
        type: {
          name: "String"
        }
      },
      retentionDays: {
        serializedName: "properties.retentionDays",
        type: {
          name: "Number"
        }
      },
      auditActionsAndGroups: {
        serializedName: "properties.auditActionsAndGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      storageAccountSubscriptionId: {
        serializedName: "properties.storageAccountSubscriptionId",
        type: {
          name: "Uuid"
        }
      },
      isStorageSecondaryKeyInUse: {
        serializedName: "properties.isStorageSecondaryKeyInUse",
        type: {
          name: "Boolean"
        }
      },
      isAzureMonitorTargetEnabled: {
        serializedName: "properties.isAzureMonitorTargetEnabled",
        type: {
          name: "Boolean"
        }
      },
      queueDelayMs: {
        serializedName: "properties.queueDelayMs",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ServerBlobAuditingPolicy: msRest.CompositeMapper = {
  serializedName: "ServerBlobAuditingPolicy",
  type: {
    name: "Composite",
    className: "ServerBlobAuditingPolicy",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      state: {
        required: true,
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled"
          ]
        }
      },
      storageEndpoint: {
        serializedName: "properties.storageEndpoint",
        type: {
          name: "String"
        }
      },
      storageAccountAccessKey: {
        serializedName: "properties.storageAccountAccessKey",
        type: {
          name: "String"
        }
      },
      retentionDays: {
        serializedName: "properties.retentionDays",
        type: {
          name: "Number"
        }
      },
      auditActionsAndGroups: {
        serializedName: "properties.auditActionsAndGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      storageAccountSubscriptionId: {
        serializedName: "properties.storageAccountSubscriptionId",
        type: {
          name: "Uuid"
        }
      },
      isStorageSecondaryKeyInUse: {
        serializedName: "properties.isStorageSecondaryKeyInUse",
        type: {
          name: "Boolean"
        }
      },
      isAzureMonitorTargetEnabled: {
        serializedName: "properties.isAzureMonitorTargetEnabled",
        type: {
          name: "Boolean"
        }
      },
      queueDelayMs: {
        serializedName: "properties.queueDelayMs",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DatabaseBlobAuditingPolicy: msRest.CompositeMapper = {
  serializedName: "DatabaseBlobAuditingPolicy",
  type: {
    name: "Composite",
    className: "DatabaseBlobAuditingPolicy",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      kind: {
        readOnly: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      state: {
        required: true,
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled"
          ]
        }
      },
      storageEndpoint: {
        serializedName: "properties.storageEndpoint",
        type: {
          name: "String"
        }
      },
      storageAccountAccessKey: {
        serializedName: "properties.storageAccountAccessKey",
        type: {
          name: "String"
        }
      },
      retentionDays: {
        serializedName: "properties.retentionDays",
        type: {
          name: "Number"
        }
      },
      auditActionsAndGroups: {
        serializedName: "properties.auditActionsAndGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      storageAccountSubscriptionId: {
        serializedName: "properties.storageAccountSubscriptionId",
        type: {
          name: "Uuid"
        }
      },
      isStorageSecondaryKeyInUse: {
        serializedName: "properties.isStorageSecondaryKeyInUse",
        type: {
          name: "Boolean"
        }
      },
      isAzureMonitorTargetEnabled: {
        serializedName: "properties.isAzureMonitorTargetEnabled",
        type: {
          name: "Boolean"
        }
      },
      queueDelayMs: {
        serializedName: "properties.queueDelayMs",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DatabaseOperation: msRest.CompositeMapper = {
  serializedName: "DatabaseOperation",
  type: {
    name: "Composite",
    className: "DatabaseOperation",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      databaseName: {
        readOnly: true,
        serializedName: "properties.databaseName",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "properties.operation",
        type: {
          name: "String"
        }
      },
      operationFriendlyName: {
        readOnly: true,
        serializedName: "properties.operationFriendlyName",
        type: {
          name: "String"
        }
      },
      percentComplete: {
        readOnly: true,
        serializedName: "properties.percentComplete",
        type: {
          name: "Number"
        }
      },
      serverName: {
        readOnly: true,
        serializedName: "properties.serverName",
        type: {
          name: "String"
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "properties.startTime",
        type: {
          name: "DateTime"
        }
      },
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      errorCode: {
        readOnly: true,
        serializedName: "properties.errorCode",
        type: {
          name: "Number"
        }
      },
      errorDescription: {
        readOnly: true,
        serializedName: "properties.errorDescription",
        type: {
          name: "String"
        }
      },
      errorSeverity: {
        readOnly: true,
        serializedName: "properties.errorSeverity",
        type: {
          name: "Number"
        }
      },
      isUserError: {
        readOnly: true,
        serializedName: "properties.isUserError",
        type: {
          name: "Boolean"
        }
      },
      estimatedCompletionTime: {
        readOnly: true,
        serializedName: "properties.estimatedCompletionTime",
        type: {
          name: "DateTime"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      isCancellable: {
        readOnly: true,
        serializedName: "properties.isCancellable",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Sku: msRest.CompositeMapper = {
  serializedName: "Sku",
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "String"
        }
      },
      family: {
        serializedName: "family",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Database: msRest.CompositeMapper = {
  serializedName: "Database",
  type: {
    name: "Composite",
    className: "Database",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      kind: {
        readOnly: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      createMode: {
        serializedName: "properties.createMode",
        type: {
          name: "String"
        }
      },
      collation: {
        serializedName: "properties.collation",
        type: {
          name: "String"
        }
      },
      maxSizeBytes: {
        serializedName: "properties.maxSizeBytes",
        type: {
          name: "Number"
        }
      },
      sampleName: {
        serializedName: "properties.sampleName",
        type: {
          name: "String"
        }
      },
      elasticPoolId: {
        serializedName: "properties.elasticPoolId",
        type: {
          name: "String"
        }
      },
      sourceDatabaseId: {
        serializedName: "properties.sourceDatabaseId",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      databaseId: {
        readOnly: true,
        serializedName: "properties.databaseId",
        type: {
          name: "Uuid"
        }
      },
      creationDate: {
        readOnly: true,
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      currentServiceObjectiveName: {
        readOnly: true,
        serializedName: "properties.currentServiceObjectiveName",
        type: {
          name: "String"
        }
      },
      defaultSecondaryLocation: {
        readOnly: true,
        serializedName: "properties.defaultSecondaryLocation",
        type: {
          name: "String"
        }
      },
      failoverGroupId: {
        readOnly: true,
        serializedName: "properties.failoverGroupId",
        type: {
          name: "String"
        }
      },
      restorePointInTime: {
        serializedName: "properties.restorePointInTime",
        type: {
          name: "DateTime"
        }
      },
      sourceDatabaseDeletionDate: {
        serializedName: "properties.sourceDatabaseDeletionDate",
        type: {
          name: "DateTime"
        }
      },
      recoveryServicesRecoveryPointId: {
        serializedName: "properties.recoveryServicesRecoveryPointId",
        type: {
          name: "String"
        }
      },
      longTermRetentionBackupResourceId: {
        serializedName: "properties.longTermRetentionBackupResourceId",
        type: {
          name: "String"
        }
      },
      recoverableDatabaseId: {
        serializedName: "properties.recoverableDatabaseId",
        type: {
          name: "String"
        }
      },
      restorableDroppedDatabaseId: {
        serializedName: "properties.restorableDroppedDatabaseId",
        type: {
          name: "String"
        }
      },
      catalogCollation: {
        serializedName: "properties.catalogCollation",
        type: {
          name: "String"
        }
      },
      zoneRedundant: {
        serializedName: "properties.zoneRedundant",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DatabaseUpdate: msRest.CompositeMapper = {
  serializedName: "DatabaseUpdate",
  type: {
    name: "Composite",
    className: "DatabaseUpdate",
    modelProperties: {
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      createMode: {
        serializedName: "properties.createMode",
        type: {
          name: "String"
        }
      },
      collation: {
        serializedName: "properties.collation",
        type: {
          name: "String"
        }
      },
      maxSizeBytes: {
        serializedName: "properties.maxSizeBytes",
        type: {
          name: "Number"
        }
      },
      sampleName: {
        serializedName: "properties.sampleName",
        type: {
          name: "String"
        }
      },
      elasticPoolId: {
        serializedName: "properties.elasticPoolId",
        type: {
          name: "String"
        }
      },
      sourceDatabaseId: {
        serializedName: "properties.sourceDatabaseId",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      databaseId: {
        readOnly: true,
        serializedName: "properties.databaseId",
        type: {
          name: "Uuid"
        }
      },
      creationDate: {
        readOnly: true,
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      currentServiceObjectiveName: {
        readOnly: true,
        serializedName: "properties.currentServiceObjectiveName",
        type: {
          name: "String"
        }
      },
      defaultSecondaryLocation: {
        readOnly: true,
        serializedName: "properties.defaultSecondaryLocation",
        type: {
          name: "String"
        }
      },
      failoverGroupId: {
        readOnly: true,
        serializedName: "properties.failoverGroupId",
        type: {
          name: "String"
        }
      },
      restorePointInTime: {
        serializedName: "properties.restorePointInTime",
        type: {
          name: "DateTime"
        }
      },
      sourceDatabaseDeletionDate: {
        serializedName: "properties.sourceDatabaseDeletionDate",
        type: {
          name: "DateTime"
        }
      },
      recoveryServicesRecoveryPointId: {
        serializedName: "properties.recoveryServicesRecoveryPointId",
        type: {
          name: "String"
        }
      },
      longTermRetentionBackupResourceId: {
        serializedName: "properties.longTermRetentionBackupResourceId",
        type: {
          name: "String"
        }
      },
      recoverableDatabaseId: {
        serializedName: "properties.recoverableDatabaseId",
        type: {
          name: "String"
        }
      },
      restorableDroppedDatabaseId: {
        serializedName: "properties.restorableDroppedDatabaseId",
        type: {
          name: "String"
        }
      },
      catalogCollation: {
        serializedName: "properties.catalogCollation",
        type: {
          name: "String"
        }
      },
      zoneRedundant: {
        serializedName: "properties.zoneRedundant",
        type: {
          name: "Boolean"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ImportExportDatabaseDefinition: msRest.CompositeMapper = {
  serializedName: "ImportExportDatabaseDefinition",
  type: {
    name: "Composite",
    className: "ImportExportDatabaseDefinition",
    modelProperties: {
      databaseName: {
        serializedName: "databaseName",
        type: {
          name: "String"
        }
      },
      edition: {
        serializedName: "edition",
        type: {
          name: "String"
        }
      },
      serviceObjectiveName: {
        serializedName: "serviceObjectiveName",
        type: {
          name: "String"
        }
      },
      maxSizeBytes: {
        serializedName: "maxSizeBytes",
        type: {
          name: "String"
        }
      },
      storageKeyType: {
        required: true,
        serializedName: "storageKeyType",
        type: {
          name: "String"
        }
      },
      storageKey: {
        required: true,
        serializedName: "storageKey",
        type: {
          name: "String"
        }
      },
      storageUri: {
        required: true,
        serializedName: "storageUri",
        type: {
          name: "String"
        }
      },
      administratorLogin: {
        required: true,
        serializedName: "administratorLogin",
        type: {
          name: "String"
        }
      },
      administratorLoginPassword: {
        required: true,
        serializedName: "administratorLoginPassword",
        type: {
          name: "String"
        }
      },
      authenticationType: {
        serializedName: "authenticationType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImportExportOperationResult: msRest.CompositeMapper = {
  serializedName: "ImportExportOperationResult",
  type: {
    name: "Composite",
    className: "ImportExportOperationResult",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      requestId: {
        readOnly: true,
        serializedName: "properties.requestId",
        type: {
          name: "Uuid"
        }
      },
      requestType: {
        readOnly: true,
        serializedName: "properties.requestType",
        type: {
          name: "String"
        }
      },
      queuedTime: {
        readOnly: true,
        serializedName: "properties.queuedTime",
        type: {
          name: "String"
        }
      },
      lastModifiedTime: {
        readOnly: true,
        serializedName: "properties.lastModifiedTime",
        type: {
          name: "String"
        }
      },
      blobUri: {
        readOnly: true,
        serializedName: "properties.blobUri",
        type: {
          name: "String"
        }
      },
      serverName: {
        readOnly: true,
        serializedName: "properties.serverName",
        type: {
          name: "String"
        }
      },
      databaseName: {
        readOnly: true,
        serializedName: "properties.databaseName",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        readOnly: true,
        serializedName: "properties.errorMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatabaseVulnerabilityAssessmentRuleBaselineItem: msRest.CompositeMapper = {
  serializedName: "DatabaseVulnerabilityAssessmentRuleBaselineItem",
  type: {
    name: "Composite",
    className: "DatabaseVulnerabilityAssessmentRuleBaselineItem",
    modelProperties: {
      result: {
        required: true,
        serializedName: "result",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DatabaseVulnerabilityAssessmentRuleBaseline: msRest.CompositeMapper = {
  serializedName: "DatabaseVulnerabilityAssessmentRuleBaseline",
  type: {
    name: "Composite",
    className: "DatabaseVulnerabilityAssessmentRuleBaseline",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      baselineResults: {
        required: true,
        serializedName: "properties.baselineResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatabaseVulnerabilityAssessmentRuleBaselineItem"
            }
          }
        }
      }
    }
  }
};

export const VulnerabilityAssessmentRecurringScansProperties: msRest.CompositeMapper = {
  serializedName: "VulnerabilityAssessmentRecurringScansProperties",
  type: {
    name: "Composite",
    className: "VulnerabilityAssessmentRecurringScansProperties",
    modelProperties: {
      isEnabled: {
        serializedName: "isEnabled",
        type: {
          name: "Boolean"
        }
      },
      emailSubscriptionAdmins: {
        serializedName: "emailSubscriptionAdmins",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      },
      emails: {
        serializedName: "emails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DatabaseVulnerabilityAssessment: msRest.CompositeMapper = {
  serializedName: "DatabaseVulnerabilityAssessment",
  type: {
    name: "Composite",
    className: "DatabaseVulnerabilityAssessment",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      storageContainerPath: {
        serializedName: "properties.storageContainerPath",
        type: {
          name: "String"
        }
      },
      storageContainerSasKey: {
        serializedName: "properties.storageContainerSasKey",
        type: {
          name: "String"
        }
      },
      storageAccountAccessKey: {
        serializedName: "properties.storageAccountAccessKey",
        type: {
          name: "String"
        }
      },
      recurringScans: {
        serializedName: "properties.recurringScans",
        type: {
          name: "Composite",
          className: "VulnerabilityAssessmentRecurringScansProperties"
        }
      }
    }
  }
};

export const DataWarehouseUserActivities: msRest.CompositeMapper = {
  serializedName: "DataWarehouseUserActivities",
  type: {
    name: "Composite",
    className: "DataWarehouseUserActivities",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      activeQueriesCount: {
        readOnly: true,
        serializedName: "properties.activeQueriesCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const JobAgent: msRest.CompositeMapper = {
  serializedName: "JobAgent",
  type: {
    name: "Composite",
    className: "JobAgent",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      databaseId: {
        required: true,
        serializedName: "properties.databaseId",
        type: {
          name: "String"
        }
      },
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobAgentUpdate: msRest.CompositeMapper = {
  serializedName: "JobAgentUpdate",
  type: {
    name: "Composite",
    className: "JobAgentUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const JobCredential: msRest.CompositeMapper = {
  serializedName: "JobCredential",
  type: {
    name: "Composite",
    className: "JobCredential",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      username: {
        required: true,
        serializedName: "properties.username",
        type: {
          name: "String"
        }
      },
      password: {
        required: true,
        serializedName: "properties.password",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobExecutionTarget: msRest.CompositeMapper = {
  serializedName: "JobExecutionTarget",
  type: {
    name: "Composite",
    className: "JobExecutionTarget",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      serverName: {
        readOnly: true,
        serializedName: "serverName",
        type: {
          name: "String"
        }
      },
      databaseName: {
        readOnly: true,
        serializedName: "databaseName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobExecution: msRest.CompositeMapper = {
  serializedName: "JobExecution",
  type: {
    name: "Composite",
    className: "JobExecution",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      jobVersion: {
        readOnly: true,
        serializedName: "properties.jobVersion",
        type: {
          name: "Number"
        }
      },
      stepName: {
        readOnly: true,
        serializedName: "properties.stepName",
        type: {
          name: "String"
        }
      },
      stepId: {
        readOnly: true,
        serializedName: "properties.stepId",
        type: {
          name: "Number"
        }
      },
      jobExecutionId: {
        readOnly: true,
        serializedName: "properties.jobExecutionId",
        type: {
          name: "Uuid"
        }
      },
      lifecycle: {
        readOnly: true,
        serializedName: "properties.lifecycle",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      createTime: {
        readOnly: true,
        serializedName: "properties.createTime",
        type: {
          name: "DateTime"
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "properties.startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        readOnly: true,
        serializedName: "properties.endTime",
        type: {
          name: "DateTime"
        }
      },
      currentAttempts: {
        serializedName: "properties.currentAttempts",
        type: {
          name: "Number"
        }
      },
      currentAttemptStartTime: {
        readOnly: true,
        serializedName: "properties.currentAttemptStartTime",
        type: {
          name: "DateTime"
        }
      },
      lastMessage: {
        readOnly: true,
        serializedName: "properties.lastMessage",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "properties.target",
        type: {
          name: "Composite",
          className: "JobExecutionTarget"
        }
      }
    }
  }
};

export const JobSchedule: msRest.CompositeMapper = {
  serializedName: "JobSchedule",
  type: {
    name: "Composite",
    className: "JobSchedule",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        defaultValue: new Date('0001-01-01T00:00:00Z'),
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        defaultValue: new Date('9999-12-31T11:59:59Z'),
        type: {
          name: "DateTime"
        }
      },
      type: {
        serializedName: "type",
        defaultValue: 'Once',
        type: {
          name: "Enum",
          allowedValues: [
            "Once",
            "Recurring"
          ]
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      interval: {
        serializedName: "interval",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Job: msRest.CompositeMapper = {
  serializedName: "Job",
  type: {
    name: "Composite",
    className: "Job",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        defaultValue: '',
        type: {
          name: "String"
        }
      },
      version: {
        readOnly: true,
        serializedName: "properties.version",
        type: {
          name: "Number"
        }
      },
      schedule: {
        serializedName: "properties.schedule",
        type: {
          name: "Composite",
          className: "JobSchedule"
        }
      }
    }
  }
};

export const JobStepAction: msRest.CompositeMapper = {
  serializedName: "JobStepAction",
  type: {
    name: "Composite",
    className: "JobStepAction",
    modelProperties: {
      type: {
        serializedName: "type",
        defaultValue: 'TSql',
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "source",
        defaultValue: 'Inline',
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobStepOutput: msRest.CompositeMapper = {
  serializedName: "JobStepOutput",
  type: {
    name: "Composite",
    className: "JobStepOutput",
    modelProperties: {
      type: {
        serializedName: "type",
        defaultValue: 'SqlDatabase',
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "Uuid"
        }
      },
      resourceGroupName: {
        serializedName: "resourceGroupName",
        type: {
          name: "String"
        }
      },
      serverName: {
        required: true,
        serializedName: "serverName",
        type: {
          name: "String"
        }
      },
      databaseName: {
        required: true,
        serializedName: "databaseName",
        type: {
          name: "String"
        }
      },
      schemaName: {
        serializedName: "schemaName",
        defaultValue: 'dbo',
        type: {
          name: "String"
        }
      },
      tableName: {
        required: true,
        serializedName: "tableName",
        type: {
          name: "String"
        }
      },
      credential: {
        required: true,
        serializedName: "credential",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobStepExecutionOptions: msRest.CompositeMapper = {
  serializedName: "JobStepExecutionOptions",
  type: {
    name: "Composite",
    className: "JobStepExecutionOptions",
    modelProperties: {
      timeoutSeconds: {
        serializedName: "timeoutSeconds",
        defaultValue: 43200,
        type: {
          name: "Number"
        }
      },
      retryAttempts: {
        serializedName: "retryAttempts",
        defaultValue: 10,
        type: {
          name: "Number"
        }
      },
      initialRetryIntervalSeconds: {
        serializedName: "initialRetryIntervalSeconds",
        defaultValue: 1,
        type: {
          name: "Number"
        }
      },
      maximumRetryIntervalSeconds: {
        serializedName: "maximumRetryIntervalSeconds",
        defaultValue: 120,
        type: {
          name: "Number"
        }
      },
      retryIntervalBackoffMultiplier: {
        serializedName: "retryIntervalBackoffMultiplier",
        defaultValue: 2,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const JobStep: msRest.CompositeMapper = {
  serializedName: "JobStep",
  type: {
    name: "Composite",
    className: "JobStep",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      stepId: {
        serializedName: "properties.stepId",
        type: {
          name: "Number"
        }
      },
      targetGroup: {
        required: true,
        serializedName: "properties.targetGroup",
        type: {
          name: "String"
        }
      },
      credential: {
        required: true,
        serializedName: "properties.credential",
        type: {
          name: "String"
        }
      },
      action: {
        required: true,
        serializedName: "properties.action",
        type: {
          name: "Composite",
          className: "JobStepAction"
        }
      },
      output: {
        serializedName: "properties.output",
        type: {
          name: "Composite",
          className: "JobStepOutput"
        }
      },
      executionOptions: {
        serializedName: "properties.executionOptions",
        type: {
          name: "Composite",
          className: "JobStepExecutionOptions"
        }
      }
    }
  }
};

export const JobTarget: msRest.CompositeMapper = {
  serializedName: "JobTarget",
  type: {
    name: "Composite",
    className: "JobTarget",
    modelProperties: {
      membershipType: {
        serializedName: "membershipType",
        defaultValue: 'Include',
        type: {
          name: "Enum",
          allowedValues: [
            "Include",
            "Exclude"
          ]
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      serverName: {
        serializedName: "serverName",
        type: {
          name: "String"
        }
      },
      databaseName: {
        serializedName: "databaseName",
        type: {
          name: "String"
        }
      },
      elasticPoolName: {
        serializedName: "elasticPoolName",
        type: {
          name: "String"
        }
      },
      shardMapName: {
        serializedName: "shardMapName",
        type: {
          name: "String"
        }
      },
      refreshCredential: {
        serializedName: "refreshCredential",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobTargetGroup: msRest.CompositeMapper = {
  serializedName: "JobTargetGroup",
  type: {
    name: "Composite",
    className: "JobTargetGroup",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      members: {
        required: true,
        serializedName: "properties.members",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JobTarget"
            }
          }
        }
      }
    }
  }
};

export const JobVersion: msRest.CompositeMapper = {
  serializedName: "JobVersion",
  type: {
    name: "Composite",
    className: "JobVersion",
    modelProperties: {
      ...ProxyResource.type.modelProperties
    }
  }
};

export const LongTermRetentionBackup: msRest.CompositeMapper = {
  serializedName: "LongTermRetentionBackup",
  type: {
    name: "Composite",
    className: "LongTermRetentionBackup",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      serverName: {
        readOnly: true,
        serializedName: "properties.serverName",
        type: {
          name: "String"
        }
      },
      serverCreateTime: {
        readOnly: true,
        serializedName: "properties.serverCreateTime",
        type: {
          name: "DateTime"
        }
      },
      databaseName: {
        readOnly: true,
        serializedName: "properties.databaseName",
        type: {
          name: "String"
        }
      },
      databaseDeletionTime: {
        readOnly: true,
        serializedName: "properties.databaseDeletionTime",
        type: {
          name: "DateTime"
        }
      },
      backupTime: {
        readOnly: true,
        serializedName: "properties.backupTime",
        type: {
          name: "DateTime"
        }
      },
      backupExpirationTime: {
        readOnly: true,
        serializedName: "properties.backupExpirationTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const BackupLongTermRetentionPolicy: msRest.CompositeMapper = {
  serializedName: "BackupLongTermRetentionPolicy",
  type: {
    name: "Composite",
    className: "BackupLongTermRetentionPolicy",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      weeklyRetention: {
        serializedName: "properties.weeklyRetention",
        type: {
          name: "String"
        }
      },
      monthlyRetention: {
        serializedName: "properties.monthlyRetention",
        type: {
          name: "String"
        }
      },
      yearlyRetention: {
        serializedName: "properties.yearlyRetention",
        type: {
          name: "String"
        }
      },
      weekOfYear: {
        serializedName: "properties.weekOfYear",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ManagedBackupShortTermRetentionPolicy: msRest.CompositeMapper = {
  serializedName: "ManagedBackupShortTermRetentionPolicy",
  type: {
    name: "Composite",
    className: "ManagedBackupShortTermRetentionPolicy",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      retentionDays: {
        serializedName: "properties.retentionDays",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CompleteDatabaseRestoreDefinition: msRest.CompositeMapper = {
  serializedName: "CompleteDatabaseRestoreDefinition",
  type: {
    name: "Composite",
    className: "CompleteDatabaseRestoreDefinition",
    modelProperties: {
      lastBackupName: {
        required: true,
        serializedName: "lastBackupName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedDatabase: msRest.CompositeMapper = {
  serializedName: "ManagedDatabase",
  type: {
    name: "Composite",
    className: "ManagedDatabase",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      collation: {
        serializedName: "properties.collation",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      creationDate: {
        readOnly: true,
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      earliestRestorePoint: {
        readOnly: true,
        serializedName: "properties.earliestRestorePoint",
        type: {
          name: "DateTime"
        }
      },
      restorePointInTime: {
        serializedName: "properties.restorePointInTime",
        type: {
          name: "DateTime"
        }
      },
      defaultSecondaryLocation: {
        readOnly: true,
        serializedName: "properties.defaultSecondaryLocation",
        type: {
          name: "String"
        }
      },
      catalogCollation: {
        serializedName: "properties.catalogCollation",
        type: {
          name: "String"
        }
      },
      createMode: {
        serializedName: "properties.createMode",
        type: {
          name: "String"
        }
      },
      storageContainerUri: {
        serializedName: "properties.storageContainerUri",
        type: {
          name: "String"
        }
      },
      sourceDatabaseId: {
        serializedName: "properties.sourceDatabaseId",
        type: {
          name: "String"
        }
      },
      restorableDroppedDatabaseId: {
        serializedName: "properties.restorableDroppedDatabaseId",
        type: {
          name: "String"
        }
      },
      storageContainerSasToken: {
        serializedName: "properties.storageContainerSasToken",
        type: {
          name: "String"
        }
      },
      failoverGroupId: {
        readOnly: true,
        serializedName: "properties.failoverGroupId",
        type: {
          name: "String"
        }
      },
      recoverableDatabaseId: {
        serializedName: "properties.recoverableDatabaseId",
        type: {
          name: "String"
        }
      },
      longTermRetentionBackupResourceId: {
        serializedName: "properties.longTermRetentionBackupResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedDatabaseUpdate: msRest.CompositeMapper = {
  serializedName: "ManagedDatabaseUpdate",
  type: {
    name: "Composite",
    className: "ManagedDatabaseUpdate",
    modelProperties: {
      collation: {
        serializedName: "properties.collation",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      creationDate: {
        readOnly: true,
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      earliestRestorePoint: {
        readOnly: true,
        serializedName: "properties.earliestRestorePoint",
        type: {
          name: "DateTime"
        }
      },
      restorePointInTime: {
        serializedName: "properties.restorePointInTime",
        type: {
          name: "DateTime"
        }
      },
      defaultSecondaryLocation: {
        readOnly: true,
        serializedName: "properties.defaultSecondaryLocation",
        type: {
          name: "String"
        }
      },
      catalogCollation: {
        serializedName: "properties.catalogCollation",
        type: {
          name: "String"
        }
      },
      createMode: {
        serializedName: "properties.createMode",
        type: {
          name: "String"
        }
      },
      storageContainerUri: {
        serializedName: "properties.storageContainerUri",
        type: {
          name: "String"
        }
      },
      sourceDatabaseId: {
        serializedName: "properties.sourceDatabaseId",
        type: {
          name: "String"
        }
      },
      restorableDroppedDatabaseId: {
        serializedName: "properties.restorableDroppedDatabaseId",
        type: {
          name: "String"
        }
      },
      storageContainerSasToken: {
        serializedName: "properties.storageContainerSasToken",
        type: {
          name: "String"
        }
      },
      failoverGroupId: {
        readOnly: true,
        serializedName: "properties.failoverGroupId",
        type: {
          name: "String"
        }
      },
      recoverableDatabaseId: {
        serializedName: "properties.recoverableDatabaseId",
        type: {
          name: "String"
        }
      },
      longTermRetentionBackupResourceId: {
        serializedName: "properties.longTermRetentionBackupResourceId",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ResourceMoveDefinition: msRest.CompositeMapper = {
  serializedName: "ResourceMoveDefinition",
  type: {
    name: "Composite",
    className: "ResourceMoveDefinition",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RestorableDroppedManagedDatabase: msRest.CompositeMapper = {
  serializedName: "RestorableDroppedManagedDatabase",
  type: {
    name: "Composite",
    className: "RestorableDroppedManagedDatabase",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      databaseName: {
        readOnly: true,
        serializedName: "properties.databaseName",
        type: {
          name: "String"
        }
      },
      creationDate: {
        readOnly: true,
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      deletionDate: {
        readOnly: true,
        serializedName: "properties.deletionDate",
        type: {
          name: "DateTime"
        }
      },
      earliestRestoreDate: {
        readOnly: true,
        serializedName: "properties.earliestRestoreDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const RestorePoint: msRest.CompositeMapper = {
  serializedName: "RestorePoint",
  type: {
    name: "Composite",
    className: "RestorePoint",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      restorePointType: {
        readOnly: true,
        serializedName: "properties.restorePointType",
        type: {
          name: "Enum",
          allowedValues: [
            "CONTINUOUS",
            "DISCRETE"
          ]
        }
      },
      earliestRestoreDate: {
        readOnly: true,
        serializedName: "properties.earliestRestoreDate",
        type: {
          name: "DateTime"
        }
      },
      restorePointCreationDate: {
        readOnly: true,
        serializedName: "properties.restorePointCreationDate",
        type: {
          name: "DateTime"
        }
      },
      restorePointLabel: {
        readOnly: true,
        serializedName: "properties.restorePointLabel",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CreateDatabaseRestorePointDefinition: msRest.CompositeMapper = {
  serializedName: "CreateDatabaseRestorePointDefinition",
  type: {
    name: "Composite",
    className: "CreateDatabaseRestorePointDefinition",
    modelProperties: {
      restorePointLabel: {
        required: true,
        serializedName: "restorePointLabel",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutomaticTuningServerOptions: msRest.CompositeMapper = {
  serializedName: "AutomaticTuningServerOptions",
  type: {
    name: "Composite",
    className: "AutomaticTuningServerOptions",
    modelProperties: {
      desiredState: {
        serializedName: "desiredState",
        type: {
          name: "Enum",
          allowedValues: [
            "Off",
            "On",
            "Default"
          ]
        }
      },
      actualState: {
        readOnly: true,
        serializedName: "actualState",
        type: {
          name: "Enum",
          allowedValues: [
            "Off",
            "On"
          ]
        }
      },
      reasonCode: {
        readOnly: true,
        serializedName: "reasonCode",
        type: {
          name: "Number"
        }
      },
      reasonDesc: {
        readOnly: true,
        serializedName: "reasonDesc",
        type: {
          name: "Enum",
          allowedValues: [
            "Default",
            "Disabled",
            "AutoConfigured"
          ]
        }
      }
    }
  }
};

export const ServerAutomaticTuning: msRest.CompositeMapper = {
  serializedName: "ServerAutomaticTuning",
  type: {
    name: "Composite",
    className: "ServerAutomaticTuning",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      desiredState: {
        serializedName: "properties.desiredState",
        type: {
          name: "Enum",
          allowedValues: [
            "Custom",
            "Auto",
            "Unspecified"
          ]
        }
      },
      actualState: {
        readOnly: true,
        serializedName: "properties.actualState",
        type: {
          name: "Enum",
          allowedValues: [
            "Custom",
            "Auto",
            "Unspecified"
          ]
        }
      },
      options: {
        serializedName: "properties.options",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "AutomaticTuningServerOptions"
            }
          }
        }
      }
    }
  }
};

export const ServerDnsAlias: msRest.CompositeMapper = {
  serializedName: "ServerDnsAlias",
  type: {
    name: "Composite",
    className: "ServerDnsAlias",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      azureDnsRecord: {
        readOnly: true,
        serializedName: "properties.azureDnsRecord",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerDnsAliasAcquisition: msRest.CompositeMapper = {
  serializedName: "ServerDnsAliasAcquisition",
  type: {
    name: "Composite",
    className: "ServerDnsAliasAcquisition",
    modelProperties: {
      oldServerDnsAliasId: {
        serializedName: "oldServerDnsAliasId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerSecurityAlertPolicy: msRest.CompositeMapper = {
  serializedName: "ServerSecurityAlertPolicy",
  type: {
    name: "Composite",
    className: "ServerSecurityAlertPolicy",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      state: {
        required: true,
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "New",
            "Enabled",
            "Disabled"
          ]
        }
      },
      disabledAlerts: {
        serializedName: "properties.disabledAlerts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      emailAddresses: {
        serializedName: "properties.emailAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      emailAccountAdmins: {
        serializedName: "properties.emailAccountAdmins",
        type: {
          name: "Boolean"
        }
      },
      storageEndpoint: {
        serializedName: "properties.storageEndpoint",
        type: {
          name: "String"
        }
      },
      storageAccountAccessKey: {
        serializedName: "properties.storageAccountAccessKey",
        type: {
          name: "String"
        }
      },
      retentionDays: {
        serializedName: "properties.retentionDays",
        type: {
          name: "Number"
        }
      },
      creationTime: {
        readOnly: true,
        serializedName: "properties.creationTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ManagedDatabaseSecurityAlertPolicy: msRest.CompositeMapper = {
  serializedName: "ManagedDatabaseSecurityAlertPolicy",
  type: {
    name: "Composite",
    className: "ManagedDatabaseSecurityAlertPolicy",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      state: {
        required: true,
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "New",
            "Enabled",
            "Disabled"
          ]
        }
      },
      disabledAlerts: {
        serializedName: "properties.disabledAlerts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      emailAddresses: {
        serializedName: "properties.emailAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      emailAccountAdmins: {
        serializedName: "properties.emailAccountAdmins",
        type: {
          name: "Boolean"
        }
      },
      storageEndpoint: {
        serializedName: "properties.storageEndpoint",
        type: {
          name: "String"
        }
      },
      storageAccountAccessKey: {
        serializedName: "properties.storageAccountAccessKey",
        type: {
          name: "String"
        }
      },
      retentionDays: {
        serializedName: "properties.retentionDays",
        type: {
          name: "Number"
        }
      },
      creationTime: {
        readOnly: true,
        serializedName: "properties.creationTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ManagedServerSecurityAlertPolicy: msRest.CompositeMapper = {
  serializedName: "ManagedServerSecurityAlertPolicy",
  type: {
    name: "Composite",
    className: "ManagedServerSecurityAlertPolicy",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      state: {
        required: true,
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "New",
            "Enabled",
            "Disabled"
          ]
        }
      },
      disabledAlerts: {
        serializedName: "properties.disabledAlerts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      emailAddresses: {
        serializedName: "properties.emailAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      emailAccountAdmins: {
        serializedName: "properties.emailAccountAdmins",
        type: {
          name: "Boolean"
        }
      },
      storageEndpoint: {
        serializedName: "properties.storageEndpoint",
        type: {
          name: "String"
        }
      },
      storageAccountAccessKey: {
        serializedName: "properties.storageAccountAccessKey",
        type: {
          name: "String"
        }
      },
      retentionDays: {
        serializedName: "properties.retentionDays",
        type: {
          name: "Number"
        }
      },
      creationTime: {
        readOnly: true,
        serializedName: "properties.creationTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const SensitivityLabel: msRest.CompositeMapper = {
  serializedName: "SensitivityLabel",
  type: {
    name: "Composite",
    className: "SensitivityLabel",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      labelName: {
        serializedName: "properties.labelName",
        type: {
          name: "String"
        }
      },
      labelId: {
        serializedName: "properties.labelId",
        type: {
          name: "String"
        }
      },
      informationType: {
        serializedName: "properties.informationType",
        type: {
          name: "String"
        }
      },
      informationTypeId: {
        serializedName: "properties.informationTypeId",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        readOnly: true,
        serializedName: "properties.isDisabled",
        type: {
          name: "Boolean"
        }
      },
      rank: {
        serializedName: "properties.rank",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "Low",
            "Medium",
            "High",
            "Critical"
          ]
        }
      }
    }
  }
};

export const ManagedInstanceAdministrator: msRest.CompositeMapper = {
  serializedName: "ManagedInstanceAdministrator",
  type: {
    name: "Composite",
    className: "ManagedInstanceAdministrator",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      administratorType: {
        required: true,
        isConstant: true,
        serializedName: "properties.administratorType",
        defaultValue: 'ActiveDirectory',
        type: {
          name: "String"
        }
      },
      login: {
        required: true,
        serializedName: "properties.login",
        type: {
          name: "String"
        }
      },
      sid: {
        required: true,
        serializedName: "properties.sid",
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const ExtendedDatabaseBlobAuditingPolicyListResult: msRest.CompositeMapper = {
  serializedName: "ExtendedDatabaseBlobAuditingPolicyListResult",
  type: {
    name: "Composite",
    className: "ExtendedDatabaseBlobAuditingPolicyListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExtendedDatabaseBlobAuditingPolicy"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExtendedServerBlobAuditingPolicyListResult: msRest.CompositeMapper = {
  serializedName: "ExtendedServerBlobAuditingPolicyListResult",
  type: {
    name: "Composite",
    className: "ExtendedServerBlobAuditingPolicyListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExtendedServerBlobAuditingPolicy"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerBlobAuditingPolicyListResult: msRest.CompositeMapper = {
  serializedName: "ServerBlobAuditingPolicyListResult",
  type: {
    name: "Composite",
    className: "ServerBlobAuditingPolicyListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerBlobAuditingPolicy"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatabaseBlobAuditingPolicyListResult: msRest.CompositeMapper = {
  serializedName: "DatabaseBlobAuditingPolicyListResult",
  type: {
    name: "Composite",
    className: "DatabaseBlobAuditingPolicyListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatabaseBlobAuditingPolicy"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatabaseOperationListResult: msRest.CompositeMapper = {
  serializedName: "DatabaseOperationListResult",
  type: {
    name: "Composite",
    className: "DatabaseOperationListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatabaseOperation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatabaseListResult: msRest.CompositeMapper = {
  serializedName: "DatabaseListResult",
  type: {
    name: "Composite",
    className: "DatabaseListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Database"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatabaseVulnerabilityAssessmentListResult: msRest.CompositeMapper = {
  serializedName: "DatabaseVulnerabilityAssessmentListResult",
  type: {
    name: "Composite",
    className: "DatabaseVulnerabilityAssessmentListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatabaseVulnerabilityAssessment"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobAgentListResult: msRest.CompositeMapper = {
  serializedName: "JobAgentListResult",
  type: {
    name: "Composite",
    className: "JobAgentListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JobAgent"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobCredentialListResult: msRest.CompositeMapper = {
  serializedName: "JobCredentialListResult",
  type: {
    name: "Composite",
    className: "JobCredentialListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JobCredential"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobExecutionListResult: msRest.CompositeMapper = {
  serializedName: "JobExecutionListResult",
  type: {
    name: "Composite",
    className: "JobExecutionListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JobExecution"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobListResult: msRest.CompositeMapper = {
  serializedName: "JobListResult",
  type: {
    name: "Composite",
    className: "JobListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Job"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobStepListResult: msRest.CompositeMapper = {
  serializedName: "JobStepListResult",
  type: {
    name: "Composite",
    className: "JobStepListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JobStep"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobTargetGroupListResult: msRest.CompositeMapper = {
  serializedName: "JobTargetGroupListResult",
  type: {
    name: "Composite",
    className: "JobTargetGroupListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JobTargetGroup"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobVersionListResult: msRest.CompositeMapper = {
  serializedName: "JobVersionListResult",
  type: {
    name: "Composite",
    className: "JobVersionListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JobVersion"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LongTermRetentionBackupListResult: msRest.CompositeMapper = {
  serializedName: "LongTermRetentionBackupListResult",
  type: {
    name: "Composite",
    className: "LongTermRetentionBackupListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LongTermRetentionBackup"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedBackupShortTermRetentionPolicyListResult: msRest.CompositeMapper = {
  serializedName: "ManagedBackupShortTermRetentionPolicyListResult",
  type: {
    name: "Composite",
    className: "ManagedBackupShortTermRetentionPolicyListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedBackupShortTermRetentionPolicy"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedDatabaseListResult: msRest.CompositeMapper = {
  serializedName: "ManagedDatabaseListResult",
  type: {
    name: "Composite",
    className: "ManagedDatabaseListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedDatabase"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RestorableDroppedManagedDatabaseListResult: msRest.CompositeMapper = {
  serializedName: "RestorableDroppedManagedDatabaseListResult",
  type: {
    name: "Composite",
    className: "RestorableDroppedManagedDatabaseListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RestorableDroppedManagedDatabase"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RestorePointListResult: msRest.CompositeMapper = {
  serializedName: "RestorePointListResult",
  type: {
    name: "Composite",
    className: "RestorePointListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RestorePoint"
            }
          }
        }
      }
    }
  }
};

export const ServerDnsAliasListResult: msRest.CompositeMapper = {
  serializedName: "ServerDnsAliasListResult",
  type: {
    name: "Composite",
    className: "ServerDnsAliasListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerDnsAlias"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogicalServerSecurityAlertPolicyListResult: msRest.CompositeMapper = {
  serializedName: "LogicalServerSecurityAlertPolicyListResult",
  type: {
    name: "Composite",
    className: "LogicalServerSecurityAlertPolicyListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerSecurityAlertPolicy"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedDatabaseSecurityAlertPolicyListResult: msRest.CompositeMapper = {
  serializedName: "ManagedDatabaseSecurityAlertPolicyListResult",
  type: {
    name: "Composite",
    className: "ManagedDatabaseSecurityAlertPolicyListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedDatabaseSecurityAlertPolicy"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedServerSecurityAlertPolicyListResult: msRest.CompositeMapper = {
  serializedName: "ManagedServerSecurityAlertPolicyListResult",
  type: {
    name: "Composite",
    className: "ManagedServerSecurityAlertPolicyListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedServerSecurityAlertPolicy"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SensitivityLabelListResult: msRest.CompositeMapper = {
  serializedName: "SensitivityLabelListResult",
  type: {
    name: "Composite",
    className: "SensitivityLabelListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SensitivityLabel"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedInstanceAdministratorListResult: msRest.CompositeMapper = {
  serializedName: "ManagedInstanceAdministratorListResult",
  type: {
    name: "Composite",
    className: "ManagedInstanceAdministratorListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedInstanceAdministrator"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
