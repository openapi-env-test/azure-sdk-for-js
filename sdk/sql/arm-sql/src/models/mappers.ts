/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const Sku: msRest.CompositeMapper = {
  serializedName: "Sku",
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "String"
        }
      },
      family: {
        serializedName: "family",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Database: msRest.CompositeMapper = {
  serializedName: "Database",
  type: {
    name: "Composite",
    className: "Database",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      kind: {
        readOnly: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      managedBy: {
        readOnly: true,
        serializedName: "managedBy",
        type: {
          name: "String"
        }
      },
      createMode: {
        serializedName: "properties.createMode",
        type: {
          name: "String"
        }
      },
      collation: {
        serializedName: "properties.collation",
        type: {
          name: "String"
        }
      },
      maxSizeBytes: {
        serializedName: "properties.maxSizeBytes",
        type: {
          name: "Number"
        }
      },
      sampleName: {
        serializedName: "properties.sampleName",
        type: {
          name: "String"
        }
      },
      elasticPoolId: {
        serializedName: "properties.elasticPoolId",
        type: {
          name: "String"
        }
      },
      sourceDatabaseId: {
        serializedName: "properties.sourceDatabaseId",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      databaseId: {
        readOnly: true,
        serializedName: "properties.databaseId",
        type: {
          name: "Uuid"
        }
      },
      creationDate: {
        readOnly: true,
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      currentServiceObjectiveName: {
        readOnly: true,
        serializedName: "properties.currentServiceObjectiveName",
        type: {
          name: "String"
        }
      },
      requestedServiceObjectiveName: {
        readOnly: true,
        serializedName: "properties.requestedServiceObjectiveName",
        type: {
          name: "String"
        }
      },
      defaultSecondaryLocation: {
        readOnly: true,
        serializedName: "properties.defaultSecondaryLocation",
        type: {
          name: "String"
        }
      },
      failoverGroupId: {
        readOnly: true,
        serializedName: "properties.failoverGroupId",
        type: {
          name: "String"
        }
      },
      restorePointInTime: {
        serializedName: "properties.restorePointInTime",
        type: {
          name: "DateTime"
        }
      },
      sourceDatabaseDeletionDate: {
        serializedName: "properties.sourceDatabaseDeletionDate",
        type: {
          name: "DateTime"
        }
      },
      recoveryServicesRecoveryPointId: {
        serializedName: "properties.recoveryServicesRecoveryPointId",
        type: {
          name: "String"
        }
      },
      longTermRetentionBackupResourceId: {
        serializedName: "properties.longTermRetentionBackupResourceId",
        type: {
          name: "String"
        }
      },
      recoverableDatabaseId: {
        serializedName: "properties.recoverableDatabaseId",
        type: {
          name: "String"
        }
      },
      restorableDroppedDatabaseId: {
        serializedName: "properties.restorableDroppedDatabaseId",
        type: {
          name: "String"
        }
      },
      catalogCollation: {
        serializedName: "properties.catalogCollation",
        type: {
          name: "String"
        }
      },
      zoneRedundant: {
        serializedName: "properties.zoneRedundant",
        type: {
          name: "Boolean"
        }
      },
      licenseType: {
        serializedName: "properties.licenseType",
        type: {
          name: "String"
        }
      },
      maxLogSizeBytes: {
        readOnly: true,
        serializedName: "properties.maxLogSizeBytes",
        type: {
          name: "Number"
        }
      },
      earliestRestoreDate: {
        readOnly: true,
        serializedName: "properties.earliestRestoreDate",
        type: {
          name: "DateTime"
        }
      },
      readScale: {
        serializedName: "properties.readScale",
        type: {
          name: "String"
        }
      },
      readReplicaCount: {
        serializedName: "properties.readReplicaCount",
        type: {
          name: "Number"
        }
      },
      currentSku: {
        readOnly: true,
        serializedName: "properties.currentSku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      autoPauseDelay: {
        serializedName: "properties.autoPauseDelay",
        type: {
          name: "Number"
        }
      },
      storageAccountType: {
        serializedName: "properties.storageAccountType",
        type: {
          name: "String"
        }
      },
      minCapacity: {
        serializedName: "properties.minCapacity",
        type: {
          name: "Number"
        }
      },
      pausedDate: {
        readOnly: true,
        serializedName: "properties.pausedDate",
        type: {
          name: "DateTime"
        }
      },
      resumedDate: {
        readOnly: true,
        serializedName: "properties.resumedDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const DatabaseUpdate: msRest.CompositeMapper = {
  serializedName: "DatabaseUpdate",
  type: {
    name: "Composite",
    className: "DatabaseUpdate",
    modelProperties: {
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      createMode: {
        serializedName: "properties.createMode",
        type: {
          name: "String"
        }
      },
      collation: {
        serializedName: "properties.collation",
        type: {
          name: "String"
        }
      },
      maxSizeBytes: {
        serializedName: "properties.maxSizeBytes",
        type: {
          name: "Number"
        }
      },
      sampleName: {
        serializedName: "properties.sampleName",
        type: {
          name: "String"
        }
      },
      elasticPoolId: {
        serializedName: "properties.elasticPoolId",
        type: {
          name: "String"
        }
      },
      sourceDatabaseId: {
        serializedName: "properties.sourceDatabaseId",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      databaseId: {
        readOnly: true,
        serializedName: "properties.databaseId",
        type: {
          name: "Uuid"
        }
      },
      creationDate: {
        readOnly: true,
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      currentServiceObjectiveName: {
        readOnly: true,
        serializedName: "properties.currentServiceObjectiveName",
        type: {
          name: "String"
        }
      },
      requestedServiceObjectiveName: {
        readOnly: true,
        serializedName: "properties.requestedServiceObjectiveName",
        type: {
          name: "String"
        }
      },
      defaultSecondaryLocation: {
        readOnly: true,
        serializedName: "properties.defaultSecondaryLocation",
        type: {
          name: "String"
        }
      },
      failoverGroupId: {
        readOnly: true,
        serializedName: "properties.failoverGroupId",
        type: {
          name: "String"
        }
      },
      restorePointInTime: {
        serializedName: "properties.restorePointInTime",
        type: {
          name: "DateTime"
        }
      },
      sourceDatabaseDeletionDate: {
        serializedName: "properties.sourceDatabaseDeletionDate",
        type: {
          name: "DateTime"
        }
      },
      recoveryServicesRecoveryPointId: {
        serializedName: "properties.recoveryServicesRecoveryPointId",
        type: {
          name: "String"
        }
      },
      longTermRetentionBackupResourceId: {
        serializedName: "properties.longTermRetentionBackupResourceId",
        type: {
          name: "String"
        }
      },
      recoverableDatabaseId: {
        serializedName: "properties.recoverableDatabaseId",
        type: {
          name: "String"
        }
      },
      restorableDroppedDatabaseId: {
        serializedName: "properties.restorableDroppedDatabaseId",
        type: {
          name: "String"
        }
      },
      catalogCollation: {
        serializedName: "properties.catalogCollation",
        type: {
          name: "String"
        }
      },
      zoneRedundant: {
        serializedName: "properties.zoneRedundant",
        type: {
          name: "Boolean"
        }
      },
      licenseType: {
        serializedName: "properties.licenseType",
        type: {
          name: "String"
        }
      },
      maxLogSizeBytes: {
        readOnly: true,
        serializedName: "properties.maxLogSizeBytes",
        type: {
          name: "Number"
        }
      },
      earliestRestoreDate: {
        readOnly: true,
        serializedName: "properties.earliestRestoreDate",
        type: {
          name: "DateTime"
        }
      },
      readScale: {
        serializedName: "properties.readScale",
        type: {
          name: "String"
        }
      },
      readReplicaCount: {
        serializedName: "properties.readReplicaCount",
        type: {
          name: "Number"
        }
      },
      currentSku: {
        readOnly: true,
        serializedName: "properties.currentSku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      autoPauseDelay: {
        serializedName: "properties.autoPauseDelay",
        type: {
          name: "Number"
        }
      },
      storageAccountType: {
        serializedName: "properties.storageAccountType",
        type: {
          name: "String"
        }
      },
      minCapacity: {
        serializedName: "properties.minCapacity",
        type: {
          name: "Number"
        }
      },
      pausedDate: {
        readOnly: true,
        serializedName: "properties.pausedDate",
        type: {
          name: "DateTime"
        }
      },
      resumedDate: {
        readOnly: true,
        serializedName: "properties.resumedDate",
        type: {
          name: "DateTime"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ResourceMoveDefinition: msRest.CompositeMapper = {
  serializedName: "ResourceMoveDefinition",
  type: {
    name: "Composite",
    className: "ResourceMoveDefinition",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const ManagedDatabaseRestoreDetailsResult: msRest.CompositeMapper = {
  serializedName: "ManagedDatabaseRestoreDetailsResult",
  type: {
    name: "Composite",
    className: "ManagedDatabaseRestoreDetailsResult",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      currentRestoringFileName: {
        readOnly: true,
        serializedName: "properties.currentRestoringFileName",
        type: {
          name: "String"
        }
      },
      lastRestoredFileName: {
        readOnly: true,
        serializedName: "properties.lastRestoredFileName",
        type: {
          name: "String"
        }
      },
      lastRestoredFileTime: {
        readOnly: true,
        serializedName: "properties.lastRestoredFileTime",
        type: {
          name: "DateTime"
        }
      },
      percentCompleted: {
        readOnly: true,
        serializedName: "properties.percentCompleted",
        type: {
          name: "Number"
        }
      },
      unrestorableFiles: {
        readOnly: true,
        serializedName: "properties.unrestorableFiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      numberOfFilesDetected: {
        readOnly: true,
        serializedName: "properties.numberOfFilesDetected",
        type: {
          name: "Number"
        }
      },
      lastUploadedFileName: {
        readOnly: true,
        serializedName: "properties.lastUploadedFileName",
        type: {
          name: "String"
        }
      },
      lastUploadedFileTime: {
        readOnly: true,
        serializedName: "properties.lastUploadedFileTime",
        type: {
          name: "DateTime"
        }
      },
      blockReason: {
        readOnly: true,
        serializedName: "properties.blockReason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedDatabase: msRest.CompositeMapper = {
  serializedName: "ManagedDatabase",
  type: {
    name: "Composite",
    className: "ManagedDatabase",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      collation: {
        serializedName: "properties.collation",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      creationDate: {
        readOnly: true,
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      earliestRestorePoint: {
        readOnly: true,
        serializedName: "properties.earliestRestorePoint",
        type: {
          name: "DateTime"
        }
      },
      restorePointInTime: {
        serializedName: "properties.restorePointInTime",
        type: {
          name: "DateTime"
        }
      },
      defaultSecondaryLocation: {
        readOnly: true,
        serializedName: "properties.defaultSecondaryLocation",
        type: {
          name: "String"
        }
      },
      catalogCollation: {
        serializedName: "properties.catalogCollation",
        type: {
          name: "String"
        }
      },
      createMode: {
        serializedName: "properties.createMode",
        type: {
          name: "String"
        }
      },
      storageContainerUri: {
        serializedName: "properties.storageContainerUri",
        type: {
          name: "String"
        }
      },
      sourceDatabaseId: {
        serializedName: "properties.sourceDatabaseId",
        type: {
          name: "String"
        }
      },
      restorableDroppedDatabaseId: {
        serializedName: "properties.restorableDroppedDatabaseId",
        type: {
          name: "String"
        }
      },
      storageContainerSasToken: {
        serializedName: "properties.storageContainerSasToken",
        type: {
          name: "String"
        }
      },
      failoverGroupId: {
        readOnly: true,
        serializedName: "properties.failoverGroupId",
        type: {
          name: "String"
        }
      },
      recoverableDatabaseId: {
        serializedName: "properties.recoverableDatabaseId",
        type: {
          name: "String"
        }
      },
      longTermRetentionBackupResourceId: {
        serializedName: "properties.longTermRetentionBackupResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedDatabaseUpdate: msRest.CompositeMapper = {
  serializedName: "ManagedDatabaseUpdate",
  type: {
    name: "Composite",
    className: "ManagedDatabaseUpdate",
    modelProperties: {
      collation: {
        serializedName: "properties.collation",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      creationDate: {
        readOnly: true,
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      earliestRestorePoint: {
        readOnly: true,
        serializedName: "properties.earliestRestorePoint",
        type: {
          name: "DateTime"
        }
      },
      restorePointInTime: {
        serializedName: "properties.restorePointInTime",
        type: {
          name: "DateTime"
        }
      },
      defaultSecondaryLocation: {
        readOnly: true,
        serializedName: "properties.defaultSecondaryLocation",
        type: {
          name: "String"
        }
      },
      catalogCollation: {
        serializedName: "properties.catalogCollation",
        type: {
          name: "String"
        }
      },
      createMode: {
        serializedName: "properties.createMode",
        type: {
          name: "String"
        }
      },
      storageContainerUri: {
        serializedName: "properties.storageContainerUri",
        type: {
          name: "String"
        }
      },
      sourceDatabaseId: {
        serializedName: "properties.sourceDatabaseId",
        type: {
          name: "String"
        }
      },
      restorableDroppedDatabaseId: {
        serializedName: "properties.restorableDroppedDatabaseId",
        type: {
          name: "String"
        }
      },
      storageContainerSasToken: {
        serializedName: "properties.storageContainerSasToken",
        type: {
          name: "String"
        }
      },
      failoverGroupId: {
        readOnly: true,
        serializedName: "properties.failoverGroupId",
        type: {
          name: "String"
        }
      },
      recoverableDatabaseId: {
        serializedName: "properties.recoverableDatabaseId",
        type: {
          name: "String"
        }
      },
      longTermRetentionBackupResourceId: {
        serializedName: "properties.longTermRetentionBackupResourceId",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const CompleteDatabaseRestoreDefinition: msRest.CompositeMapper = {
  serializedName: "CompleteDatabaseRestoreDefinition",
  type: {
    name: "Composite",
    className: "CompleteDatabaseRestoreDefinition",
    modelProperties: {
      lastBackupName: {
        required: true,
        serializedName: "lastBackupName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerOperation: msRest.CompositeMapper = {
  serializedName: "ServerOperation",
  type: {
    name: "Composite",
    className: "ServerOperation",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      operation: {
        readOnly: true,
        serializedName: "properties.operation",
        type: {
          name: "String"
        }
      },
      operationFriendlyName: {
        readOnly: true,
        serializedName: "properties.operationFriendlyName",
        type: {
          name: "String"
        }
      },
      percentComplete: {
        readOnly: true,
        serializedName: "properties.percentComplete",
        type: {
          name: "Number"
        }
      },
      serverName: {
        readOnly: true,
        serializedName: "properties.serverName",
        type: {
          name: "String"
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "properties.startTime",
        type: {
          name: "DateTime"
        }
      },
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      errorCode: {
        readOnly: true,
        serializedName: "properties.errorCode",
        type: {
          name: "Number"
        }
      },
      errorDescription: {
        readOnly: true,
        serializedName: "properties.errorDescription",
        type: {
          name: "String"
        }
      },
      errorSeverity: {
        readOnly: true,
        serializedName: "properties.errorSeverity",
        type: {
          name: "Number"
        }
      },
      isUserError: {
        readOnly: true,
        serializedName: "properties.isUserError",
        type: {
          name: "Boolean"
        }
      },
      estimatedCompletionTime: {
        readOnly: true,
        serializedName: "properties.estimatedCompletionTime",
        type: {
          name: "DateTime"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      isCancellable: {
        readOnly: true,
        serializedName: "properties.isCancellable",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ResourceIdentity: msRest.CompositeMapper = {
  serializedName: "ResourceIdentity",
  type: {
    name: "Composite",
    className: "ResourceIdentity",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "Uuid"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const PrivateEndpointProperty: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointProperty",
  type: {
    name: "Composite",
    className: "PrivateEndpointProperty",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkServiceConnectionStateProperty: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServiceConnectionStateProperty",
  type: {
    name: "Composite",
    className: "PrivateLinkServiceConnectionStateProperty",
    modelProperties: {
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      description: {
        required: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      actionsRequired: {
        readOnly: true,
        serializedName: "actionsRequired",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnectionProperties: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointConnectionProperties",
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionProperties",
    modelProperties: {
      privateEndpoint: {
        serializedName: "privateEndpoint",
        type: {
          name: "Composite",
          className: "PrivateEndpointProperty"
        }
      },
      privateLinkServiceConnectionState: {
        serializedName: "privateLinkServiceConnectionState",
        type: {
          name: "Composite",
          className: "PrivateLinkServiceConnectionStateProperty"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerPrivateEndpointConnection: msRest.CompositeMapper = {
  serializedName: "ServerPrivateEndpointConnection",
  type: {
    name: "Composite",
    className: "ServerPrivateEndpointConnection",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      properties: {
        readOnly: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "PrivateEndpointConnectionProperties"
        }
      }
    }
  }
};

export const Server: msRest.CompositeMapper = {
  serializedName: "Server",
  type: {
    name: "Composite",
    className: "Server",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ResourceIdentity"
        }
      },
      kind: {
        readOnly: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      administratorLogin: {
        serializedName: "properties.administratorLogin",
        type: {
          name: "String"
        }
      },
      administratorLoginPassword: {
        serializedName: "properties.administratorLoginPassword",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      fullyQualifiedDomainName: {
        readOnly: true,
        serializedName: "properties.fullyQualifiedDomainName",
        type: {
          name: "String"
        }
      },
      privateEndpointConnections: {
        readOnly: true,
        serializedName: "properties.privateEndpointConnections",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerPrivateEndpointConnection"
            }
          }
        }
      },
      minimalTlsVersion: {
        serializedName: "properties.minimalTlsVersion",
        type: {
          name: "String"
        }
      },
      publicNetworkAccess: {
        serializedName: "properties.publicNetworkAccess",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerUpdate: msRest.CompositeMapper = {
  serializedName: "ServerUpdate",
  type: {
    name: "Composite",
    className: "ServerUpdate",
    modelProperties: {
      administratorLogin: {
        serializedName: "properties.administratorLogin",
        type: {
          name: "String"
        }
      },
      administratorLoginPassword: {
        serializedName: "properties.administratorLoginPassword",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      fullyQualifiedDomainName: {
        readOnly: true,
        serializedName: "properties.fullyQualifiedDomainName",
        type: {
          name: "String"
        }
      },
      privateEndpointConnections: {
        readOnly: true,
        serializedName: "properties.privateEndpointConnections",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerPrivateEndpointConnection"
            }
          }
        }
      },
      minimalTlsVersion: {
        serializedName: "properties.minimalTlsVersion",
        type: {
          name: "String"
        }
      },
      publicNetworkAccess: {
        serializedName: "properties.publicNetworkAccess",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const CheckNameAvailabilityRequest: msRest.CompositeMapper = {
  serializedName: "CheckNameAvailabilityRequest",
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityRequest",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        isConstant: true,
        serializedName: "type",
        defaultValue: 'Microsoft.Sql/servers',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckNameAvailabilityResponse: msRest.CompositeMapper = {
  serializedName: "CheckNameAvailabilityResponse",
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityResponse",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      available: {
        readOnly: true,
        serializedName: "available",
        type: {
          name: "Boolean"
        }
      },
      reason: {
        readOnly: true,
        serializedName: "reason",
        type: {
          name: "Enum",
          allowedValues: [
            "Invalid",
            "AlreadyExists"
          ]
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkloadGroup: msRest.CompositeMapper = {
  serializedName: "WorkloadGroup",
  type: {
    name: "Composite",
    className: "WorkloadGroup",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      minResourcePercent: {
        required: true,
        serializedName: "properties.minResourcePercent",
        type: {
          name: "Number"
        }
      },
      maxResourcePercent: {
        required: true,
        serializedName: "properties.maxResourcePercent",
        type: {
          name: "Number"
        }
      },
      minResourcePercentPerRequest: {
        required: true,
        serializedName: "properties.minResourcePercentPerRequest",
        type: {
          name: "Number"
        }
      },
      maxResourcePercentPerRequest: {
        serializedName: "properties.maxResourcePercentPerRequest",
        type: {
          name: "Number"
        }
      },
      importance: {
        serializedName: "properties.importance",
        type: {
          name: "String"
        }
      },
      queryExecutionTimeout: {
        serializedName: "properties.queryExecutionTimeout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const WorkloadClassifier: msRest.CompositeMapper = {
  serializedName: "WorkloadClassifier",
  type: {
    name: "Composite",
    className: "WorkloadClassifier",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      memberName: {
        required: true,
        serializedName: "properties.memberName",
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "properties.label",
        type: {
          name: "String"
        }
      },
      context: {
        serializedName: "properties.context",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "properties.startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "properties.endTime",
        type: {
          name: "String"
        }
      },
      importance: {
        serializedName: "properties.importance",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UpsertManagedServerOperationParameters: msRest.CompositeMapper = {
  serializedName: "UpsertManagedServerOperationParameters",
  type: {
    name: "Composite",
    className: "UpsertManagedServerOperationParameters",
    modelProperties: {
      family: {
        serializedName: "family",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "String"
        }
      },
      vCores: {
        serializedName: "vCores",
        type: {
          name: "Number"
        }
      },
      storageSizeInGB: {
        serializedName: "storageSizeInGB",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ManagedInstanceOperationParametersPair: msRest.CompositeMapper = {
  serializedName: "ManagedInstanceOperationParametersPair",
  type: {
    name: "Composite",
    className: "ManagedInstanceOperationParametersPair",
    modelProperties: {
      currentParameters: {
        readOnly: true,
        serializedName: "currentParameters",
        type: {
          name: "Composite",
          className: "UpsertManagedServerOperationParameters"
        }
      },
      requestedParameters: {
        readOnly: true,
        serializedName: "requestedParameters",
        type: {
          name: "Composite",
          className: "UpsertManagedServerOperationParameters"
        }
      }
    }
  }
};

export const UpsertManagedServerOperationStep: msRest.CompositeMapper = {
  serializedName: "UpsertManagedServerOperationStep",
  type: {
    name: "Composite",
    className: "UpsertManagedServerOperationStep",
    modelProperties: {
      order: {
        serializedName: "order",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedInstanceOperationSteps: msRest.CompositeMapper = {
  serializedName: "ManagedInstanceOperationSteps",
  type: {
    name: "Composite",
    className: "ManagedInstanceOperationSteps",
    modelProperties: {
      totalSteps: {
        readOnly: true,
        serializedName: "totalSteps",
        type: {
          name: "String"
        }
      },
      currentStep: {
        readOnly: true,
        serializedName: "currentStep",
        type: {
          name: "Number"
        }
      },
      stepsList: {
        readOnly: true,
        serializedName: "stepsList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UpsertManagedServerOperationStep"
            }
          }
        }
      }
    }
  }
};

export const ManagedInstanceOperation: msRest.CompositeMapper = {
  serializedName: "ManagedInstanceOperation",
  type: {
    name: "Composite",
    className: "ManagedInstanceOperation",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      managedInstanceName: {
        readOnly: true,
        serializedName: "properties.managedInstanceName",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "properties.operation",
        type: {
          name: "String"
        }
      },
      operationFriendlyName: {
        readOnly: true,
        serializedName: "properties.operationFriendlyName",
        type: {
          name: "String"
        }
      },
      percentComplete: {
        readOnly: true,
        serializedName: "properties.percentComplete",
        type: {
          name: "Number"
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "properties.startTime",
        type: {
          name: "DateTime"
        }
      },
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      errorCode: {
        readOnly: true,
        serializedName: "properties.errorCode",
        type: {
          name: "Number"
        }
      },
      errorDescription: {
        readOnly: true,
        serializedName: "properties.errorDescription",
        type: {
          name: "String"
        }
      },
      errorSeverity: {
        readOnly: true,
        serializedName: "properties.errorSeverity",
        type: {
          name: "Number"
        }
      },
      isUserError: {
        readOnly: true,
        serializedName: "properties.isUserError",
        type: {
          name: "Boolean"
        }
      },
      estimatedCompletionTime: {
        readOnly: true,
        serializedName: "properties.estimatedCompletionTime",
        type: {
          name: "DateTime"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      isCancellable: {
        readOnly: true,
        serializedName: "properties.isCancellable",
        type: {
          name: "Boolean"
        }
      },
      operationParameters: {
        readOnly: true,
        serializedName: "properties.operationParameters",
        type: {
          name: "Composite",
          className: "ManagedInstanceOperationParametersPair"
        }
      },
      operationSteps: {
        readOnly: true,
        serializedName: "properties.operationSteps",
        type: {
          name: "Composite",
          className: "ManagedInstanceOperationSteps"
        }
      }
    }
  }
};

export const ServerAzureADAdministrator: msRest.CompositeMapper = {
  serializedName: "ServerAzureADAdministrator",
  type: {
    name: "Composite",
    className: "ServerAzureADAdministrator",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      administratorType: {
        required: true,
        isConstant: true,
        serializedName: "properties.administratorType",
        defaultValue: 'ActiveDirectory',
        type: {
          name: "String"
        }
      },
      login: {
        required: true,
        serializedName: "properties.login",
        type: {
          name: "String"
        }
      },
      sid: {
        required: true,
        serializedName: "properties.sid",
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "Uuid"
        }
      },
      azureADOnlyAuthentication: {
        readOnly: true,
        serializedName: "properties.azureADOnlyAuthentication",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SyncDatabaseIdProperties: msRest.CompositeMapper = {
  serializedName: "SyncDatabaseIdProperties",
  type: {
    name: "Composite",
    className: "SyncDatabaseIdProperties",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SyncFullSchemaTableColumn: msRest.CompositeMapper = {
  serializedName: "SyncFullSchemaTableColumn",
  type: {
    name: "Composite",
    className: "SyncFullSchemaTableColumn",
    modelProperties: {
      dataSize: {
        readOnly: true,
        serializedName: "dataSize",
        type: {
          name: "String"
        }
      },
      dataType: {
        readOnly: true,
        serializedName: "dataType",
        type: {
          name: "String"
        }
      },
      errorId: {
        readOnly: true,
        serializedName: "errorId",
        type: {
          name: "String"
        }
      },
      hasError: {
        readOnly: true,
        serializedName: "hasError",
        type: {
          name: "Boolean"
        }
      },
      isPrimaryKey: {
        readOnly: true,
        serializedName: "isPrimaryKey",
        type: {
          name: "Boolean"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      quotedName: {
        readOnly: true,
        serializedName: "quotedName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SyncFullSchemaTable: msRest.CompositeMapper = {
  serializedName: "SyncFullSchemaTable",
  type: {
    name: "Composite",
    className: "SyncFullSchemaTable",
    modelProperties: {
      columns: {
        readOnly: true,
        serializedName: "columns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SyncFullSchemaTableColumn"
            }
          }
        }
      },
      errorId: {
        readOnly: true,
        serializedName: "errorId",
        type: {
          name: "String"
        }
      },
      hasError: {
        readOnly: true,
        serializedName: "hasError",
        type: {
          name: "Boolean"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      quotedName: {
        readOnly: true,
        serializedName: "quotedName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SyncFullSchemaProperties: msRest.CompositeMapper = {
  serializedName: "SyncFullSchemaProperties",
  type: {
    name: "Composite",
    className: "SyncFullSchemaProperties",
    modelProperties: {
      tables: {
        readOnly: true,
        serializedName: "tables",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SyncFullSchemaTable"
            }
          }
        }
      },
      lastUpdateTime: {
        readOnly: true,
        serializedName: "lastUpdateTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const SyncGroupLogProperties: msRest.CompositeMapper = {
  serializedName: "SyncGroupLogProperties",
  type: {
    name: "Composite",
    className: "SyncGroupLogProperties",
    modelProperties: {
      timestamp: {
        readOnly: true,
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      source: {
        readOnly: true,
        serializedName: "source",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "String"
        }
      },
      tracingId: {
        readOnly: true,
        serializedName: "tracingId",
        type: {
          name: "Uuid"
        }
      },
      operationStatus: {
        readOnly: true,
        serializedName: "operationStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SyncGroupSchemaTableColumn: msRest.CompositeMapper = {
  serializedName: "SyncGroupSchemaTableColumn",
  type: {
    name: "Composite",
    className: "SyncGroupSchemaTableColumn",
    modelProperties: {
      quotedName: {
        serializedName: "quotedName",
        type: {
          name: "String"
        }
      },
      dataSize: {
        serializedName: "dataSize",
        type: {
          name: "String"
        }
      },
      dataType: {
        serializedName: "dataType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SyncGroupSchemaTable: msRest.CompositeMapper = {
  serializedName: "SyncGroupSchemaTable",
  type: {
    name: "Composite",
    className: "SyncGroupSchemaTable",
    modelProperties: {
      columns: {
        serializedName: "columns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SyncGroupSchemaTableColumn"
            }
          }
        }
      },
      quotedName: {
        serializedName: "quotedName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SyncGroupSchema: msRest.CompositeMapper = {
  serializedName: "SyncGroupSchema",
  type: {
    name: "Composite",
    className: "SyncGroupSchema",
    modelProperties: {
      tables: {
        serializedName: "tables",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SyncGroupSchemaTable"
            }
          }
        }
      },
      masterSyncMemberName: {
        serializedName: "masterSyncMemberName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SyncGroup: msRest.CompositeMapper = {
  serializedName: "SyncGroup",
  type: {
    name: "Composite",
    className: "SyncGroup",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      interval: {
        serializedName: "properties.interval",
        type: {
          name: "Number"
        }
      },
      lastSyncTime: {
        readOnly: true,
        serializedName: "properties.lastSyncTime",
        type: {
          name: "DateTime"
        }
      },
      conflictResolutionPolicy: {
        serializedName: "properties.conflictResolutionPolicy",
        type: {
          name: "String"
        }
      },
      syncDatabaseId: {
        serializedName: "properties.syncDatabaseId",
        type: {
          name: "String"
        }
      },
      hubDatabaseUserName: {
        serializedName: "properties.hubDatabaseUserName",
        type: {
          name: "String"
        }
      },
      hubDatabasePassword: {
        serializedName: "properties.hubDatabasePassword",
        type: {
          name: "String"
        }
      },
      syncState: {
        readOnly: true,
        serializedName: "properties.syncState",
        type: {
          name: "String"
        }
      },
      schema: {
        serializedName: "properties.schema",
        type: {
          name: "Composite",
          className: "SyncGroupSchema"
        }
      },
      usePrivateLinkConnection: {
        serializedName: "properties.usePrivateLinkConnection",
        type: {
          name: "Boolean"
        }
      },
      privateEndpointName: {
        readOnly: true,
        serializedName: "properties.privateEndpointName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SyncMember: msRest.CompositeMapper = {
  serializedName: "SyncMember",
  type: {
    name: "Composite",
    className: "SyncMember",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      databaseType: {
        serializedName: "properties.databaseType",
        type: {
          name: "String"
        }
      },
      syncAgentId: {
        serializedName: "properties.syncAgentId",
        type: {
          name: "String"
        }
      },
      sqlServerDatabaseId: {
        serializedName: "properties.sqlServerDatabaseId",
        type: {
          name: "Uuid"
        }
      },
      syncMemberAzureDatabaseResourceId: {
        serializedName: "properties.syncMemberAzureDatabaseResourceId",
        type: {
          name: "String"
        }
      },
      usePrivateLinkConnection: {
        serializedName: "properties.usePrivateLinkConnection",
        type: {
          name: "Boolean"
        }
      },
      privateEndpointName: {
        readOnly: true,
        serializedName: "properties.privateEndpointName",
        type: {
          name: "String"
        }
      },
      serverName: {
        serializedName: "properties.serverName",
        type: {
          name: "String"
        }
      },
      databaseName: {
        serializedName: "properties.databaseName",
        type: {
          name: "String"
        }
      },
      userName: {
        serializedName: "properties.userName",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "properties.password",
        type: {
          name: "String"
        }
      },
      syncDirection: {
        serializedName: "properties.syncDirection",
        type: {
          name: "String"
        }
      },
      syncState: {
        readOnly: true,
        serializedName: "properties.syncState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatabaseListResult: msRest.CompositeMapper = {
  serializedName: "DatabaseListResult",
  type: {
    name: "Composite",
    className: "DatabaseListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Database"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedDatabaseListResult: msRest.CompositeMapper = {
  serializedName: "ManagedDatabaseListResult",
  type: {
    name: "Composite",
    className: "ManagedDatabaseListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedDatabase"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerOperationListResult: msRest.CompositeMapper = {
  serializedName: "ServerOperationListResult",
  type: {
    name: "Composite",
    className: "ServerOperationListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerOperation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerListResult: msRest.CompositeMapper = {
  serializedName: "ServerListResult",
  type: {
    name: "Composite",
    className: "ServerListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Server"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkloadGroupListResult: msRest.CompositeMapper = {
  serializedName: "WorkloadGroupListResult",
  type: {
    name: "Composite",
    className: "WorkloadGroupListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkloadGroup"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkloadClassifierListResult: msRest.CompositeMapper = {
  serializedName: "WorkloadClassifierListResult",
  type: {
    name: "Composite",
    className: "WorkloadClassifierListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkloadClassifier"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedInstanceOperationListResult: msRest.CompositeMapper = {
  serializedName: "ManagedInstanceOperationListResult",
  type: {
    name: "Composite",
    className: "ManagedInstanceOperationListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedInstanceOperation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AdministratorListResult: msRest.CompositeMapper = {
  serializedName: "AdministratorListResult",
  type: {
    name: "Composite",
    className: "AdministratorListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerAzureADAdministrator"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SyncDatabaseIdListResult: msRest.CompositeMapper = {
  serializedName: "SyncDatabaseIdListResult",
  type: {
    name: "Composite",
    className: "SyncDatabaseIdListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SyncDatabaseIdProperties"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SyncFullSchemaPropertiesListResult: msRest.CompositeMapper = {
  serializedName: "SyncFullSchemaPropertiesListResult",
  type: {
    name: "Composite",
    className: "SyncFullSchemaPropertiesListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SyncFullSchemaProperties"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SyncGroupLogListResult: msRest.CompositeMapper = {
  serializedName: "SyncGroupLogListResult",
  type: {
    name: "Composite",
    className: "SyncGroupLogListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SyncGroupLogProperties"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SyncGroupListResult: msRest.CompositeMapper = {
  serializedName: "SyncGroupListResult",
  type: {
    name: "Composite",
    className: "SyncGroupListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SyncGroup"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SyncMemberListResult: msRest.CompositeMapper = {
  serializedName: "SyncMemberListResult",
  type: {
    name: "Composite",
    className: "SyncMemberListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SyncMember"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
