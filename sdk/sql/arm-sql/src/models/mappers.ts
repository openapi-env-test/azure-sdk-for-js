/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const DatabaseSecurityAlertPolicy: msRest.CompositeMapper = {
  serializedName: "DatabaseSecurityAlertPolicy",
  type: {
    name: "Composite",
    className: "DatabaseSecurityAlertPolicy",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      state: {
        required: true,
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "New",
            "Enabled",
            "Disabled"
          ]
        }
      },
      disabledAlerts: {
        serializedName: "properties.disabledAlerts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      emailAddresses: {
        serializedName: "properties.emailAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      emailAccountAdmins: {
        serializedName: "properties.emailAccountAdmins",
        type: {
          name: "Boolean"
        }
      },
      storageEndpoint: {
        serializedName: "properties.storageEndpoint",
        type: {
          name: "String"
        }
      },
      storageAccountAccessKey: {
        serializedName: "properties.storageAccountAccessKey",
        type: {
          name: "String"
        }
      },
      retentionDays: {
        serializedName: "properties.retentionDays",
        type: {
          name: "Number"
        }
      },
      creationTime: {
        readOnly: true,
        serializedName: "properties.creationTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SensitivityLabel: msRest.CompositeMapper = {
  serializedName: "SensitivityLabel",
  type: {
    name: "Composite",
    className: "SensitivityLabel",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      labelName: {
        serializedName: "properties.labelName",
        type: {
          name: "String"
        }
      },
      labelId: {
        serializedName: "properties.labelId",
        type: {
          name: "String"
        }
      },
      informationType: {
        serializedName: "properties.informationType",
        type: {
          name: "String"
        }
      },
      informationTypeId: {
        serializedName: "properties.informationTypeId",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        readOnly: true,
        serializedName: "properties.isDisabled",
        type: {
          name: "Boolean"
        }
      },
      rank: {
        serializedName: "properties.rank",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "Low",
            "Medium",
            "High",
            "Critical"
          ]
        }
      }
    }
  }
};

export const VulnerabilityAssessmentRecurringScansProperties: msRest.CompositeMapper = {
  serializedName: "VulnerabilityAssessmentRecurringScansProperties",
  type: {
    name: "Composite",
    className: "VulnerabilityAssessmentRecurringScansProperties",
    modelProperties: {
      isEnabled: {
        serializedName: "isEnabled",
        type: {
          name: "Boolean"
        }
      },
      emailSubscriptionAdmins: {
        serializedName: "emailSubscriptionAdmins",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      },
      emails: {
        serializedName: "emails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ManagedInstanceVulnerabilityAssessment: msRest.CompositeMapper = {
  serializedName: "ManagedInstanceVulnerabilityAssessment",
  type: {
    name: "Composite",
    className: "ManagedInstanceVulnerabilityAssessment",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      storageContainerPath: {
        required: true,
        serializedName: "properties.storageContainerPath",
        type: {
          name: "String"
        }
      },
      storageContainerSasKey: {
        serializedName: "properties.storageContainerSasKey",
        type: {
          name: "String"
        }
      },
      storageAccountAccessKey: {
        serializedName: "properties.storageAccountAccessKey",
        type: {
          name: "String"
        }
      },
      recurringScans: {
        serializedName: "properties.recurringScans",
        type: {
          name: "Composite",
          className: "VulnerabilityAssessmentRecurringScansProperties"
        }
      }
    }
  }
};

export const UpsertManagedServerOperationParameters: msRest.CompositeMapper = {
  serializedName: "UpsertManagedServerOperationParameters",
  type: {
    name: "Composite",
    className: "UpsertManagedServerOperationParameters",
    modelProperties: {
      family: {
        serializedName: "family",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "String"
        }
      },
      vCores: {
        serializedName: "vCores",
        type: {
          name: "Number"
        }
      },
      storageSizeInGB: {
        serializedName: "storageSizeInGB",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ManagedInstanceOperationParametersPair: msRest.CompositeMapper = {
  serializedName: "ManagedInstanceOperationParametersPair",
  type: {
    name: "Composite",
    className: "ManagedInstanceOperationParametersPair",
    modelProperties: {
      currentParameters: {
        readOnly: true,
        serializedName: "currentParameters",
        type: {
          name: "Composite",
          className: "UpsertManagedServerOperationParameters"
        }
      },
      requestedParameters: {
        readOnly: true,
        serializedName: "requestedParameters",
        type: {
          name: "Composite",
          className: "UpsertManagedServerOperationParameters"
        }
      }
    }
  }
};

export const UpsertManagedServerOperationStep: msRest.CompositeMapper = {
  serializedName: "UpsertManagedServerOperationStep",
  type: {
    name: "Composite",
    className: "UpsertManagedServerOperationStep",
    modelProperties: {
      order: {
        serializedName: "order",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedInstanceOperationSteps: msRest.CompositeMapper = {
  serializedName: "ManagedInstanceOperationSteps",
  type: {
    name: "Composite",
    className: "ManagedInstanceOperationSteps",
    modelProperties: {
      totalSteps: {
        readOnly: true,
        serializedName: "totalSteps",
        type: {
          name: "String"
        }
      },
      currentStep: {
        readOnly: true,
        serializedName: "currentStep",
        type: {
          name: "Number"
        }
      },
      stepsList: {
        readOnly: true,
        serializedName: "stepsList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UpsertManagedServerOperationStep"
            }
          }
        }
      }
    }
  }
};

export const ManagedInstanceOperation: msRest.CompositeMapper = {
  serializedName: "ManagedInstanceOperation",
  type: {
    name: "Composite",
    className: "ManagedInstanceOperation",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      managedInstanceName: {
        readOnly: true,
        serializedName: "properties.managedInstanceName",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "properties.operation",
        type: {
          name: "String"
        }
      },
      operationFriendlyName: {
        readOnly: true,
        serializedName: "properties.operationFriendlyName",
        type: {
          name: "String"
        }
      },
      percentComplete: {
        readOnly: true,
        serializedName: "properties.percentComplete",
        type: {
          name: "Number"
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "properties.startTime",
        type: {
          name: "DateTime"
        }
      },
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      errorCode: {
        readOnly: true,
        serializedName: "properties.errorCode",
        type: {
          name: "Number"
        }
      },
      errorDescription: {
        readOnly: true,
        serializedName: "properties.errorDescription",
        type: {
          name: "String"
        }
      },
      errorSeverity: {
        readOnly: true,
        serializedName: "properties.errorSeverity",
        type: {
          name: "Number"
        }
      },
      isUserError: {
        readOnly: true,
        serializedName: "properties.isUserError",
        type: {
          name: "Boolean"
        }
      },
      estimatedCompletionTime: {
        readOnly: true,
        serializedName: "properties.estimatedCompletionTime",
        type: {
          name: "DateTime"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      isCancellable: {
        readOnly: true,
        serializedName: "properties.isCancellable",
        type: {
          name: "Boolean"
        }
      },
      operationParameters: {
        readOnly: true,
        serializedName: "properties.operationParameters",
        type: {
          name: "Composite",
          className: "ManagedInstanceOperationParametersPair"
        }
      },
      operationSteps: {
        readOnly: true,
        serializedName: "properties.operationSteps",
        type: {
          name: "Composite",
          className: "ManagedInstanceOperationSteps"
        }
      }
    }
  }
};

export const ServerVulnerabilityAssessment: msRest.CompositeMapper = {
  serializedName: "ServerVulnerabilityAssessment",
  type: {
    name: "Composite",
    className: "ServerVulnerabilityAssessment",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      storageContainerPath: {
        required: true,
        serializedName: "properties.storageContainerPath",
        type: {
          name: "String"
        }
      },
      storageContainerSasKey: {
        serializedName: "properties.storageContainerSasKey",
        type: {
          name: "String"
        }
      },
      storageAccountAccessKey: {
        serializedName: "properties.storageAccountAccessKey",
        type: {
          name: "String"
        }
      },
      recurringScans: {
        serializedName: "properties.recurringScans",
        type: {
          name: "Composite",
          className: "VulnerabilityAssessmentRecurringScansProperties"
        }
      }
    }
  }
};

export const Sku: msRest.CompositeMapper = {
  serializedName: "Sku",
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "String"
        }
      },
      family: {
        serializedName: "family",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const InstancePool: msRest.CompositeMapper = {
  serializedName: "InstancePool",
  type: {
    name: "Composite",
    className: "InstancePool",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      subnetId: {
        required: true,
        serializedName: "properties.subnetId",
        type: {
          name: "String"
        }
      },
      vCores: {
        required: true,
        serializedName: "properties.vCores",
        type: {
          name: "Number"
        }
      },
      licenseType: {
        required: true,
        serializedName: "properties.licenseType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InstancePoolUpdate: msRest.CompositeMapper = {
  serializedName: "InstancePoolUpdate",
  type: {
    name: "Composite",
    className: "InstancePoolUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Name: msRest.CompositeMapper = {
  serializedName: "Name",
  type: {
    name: "Composite",
    className: "Name",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      localizedValue: {
        serializedName: "localizedValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Usage: msRest.CompositeMapper = {
  serializedName: "Usage",
  type: {
    name: "Composite",
    className: "Usage",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "Composite",
          className: "Name"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      unit: {
        readOnly: true,
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      currentValue: {
        readOnly: true,
        serializedName: "currentValue",
        type: {
          name: "Number"
        }
      },
      limit: {
        readOnly: true,
        serializedName: "limit",
        type: {
          name: "Number"
        }
      },
      requestedLimit: {
        readOnly: true,
        serializedName: "requestedLimit",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ResourceIdentity: msRest.CompositeMapper = {
  serializedName: "ResourceIdentity",
  type: {
    name: "Composite",
    className: "ResourceIdentity",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "Uuid"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const ManagedInstance: msRest.CompositeMapper = {
  serializedName: "ManagedInstance",
  type: {
    name: "Composite",
    className: "ManagedInstance",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ResourceIdentity"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      managedInstanceCreateMode: {
        serializedName: "properties.managedInstanceCreateMode",
        type: {
          name: "String"
        }
      },
      fullyQualifiedDomainName: {
        readOnly: true,
        serializedName: "properties.fullyQualifiedDomainName",
        type: {
          name: "String"
        }
      },
      administratorLogin: {
        serializedName: "properties.administratorLogin",
        type: {
          name: "String"
        }
      },
      administratorLoginPassword: {
        serializedName: "properties.administratorLoginPassword",
        type: {
          name: "String"
        }
      },
      subnetId: {
        serializedName: "properties.subnetId",
        type: {
          name: "String"
        }
      },
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      licenseType: {
        serializedName: "properties.licenseType",
        type: {
          name: "String"
        }
      },
      vCores: {
        serializedName: "properties.vCores",
        type: {
          name: "Number"
        }
      },
      storageSizeInGB: {
        serializedName: "properties.storageSizeInGB",
        type: {
          name: "Number"
        }
      },
      collation: {
        serializedName: "properties.collation",
        type: {
          name: "String"
        }
      },
      dnsZone: {
        readOnly: true,
        serializedName: "properties.dnsZone",
        type: {
          name: "String"
        }
      },
      dnsZonePartner: {
        serializedName: "properties.dnsZonePartner",
        type: {
          name: "String"
        }
      },
      publicDataEndpointEnabled: {
        serializedName: "properties.publicDataEndpointEnabled",
        type: {
          name: "Boolean"
        }
      },
      sourceManagedInstanceId: {
        serializedName: "properties.sourceManagedInstanceId",
        type: {
          name: "String"
        }
      },
      restorePointInTime: {
        serializedName: "properties.restorePointInTime",
        type: {
          name: "DateTime"
        }
      },
      proxyOverride: {
        serializedName: "properties.proxyOverride",
        type: {
          name: "String"
        }
      },
      timezoneId: {
        serializedName: "properties.timezoneId",
        type: {
          name: "String"
        }
      },
      instancePoolId: {
        serializedName: "properties.instancePoolId",
        type: {
          name: "String"
        }
      },
      maintenanceConfigurationId: {
        serializedName: "properties.maintenanceConfigurationId",
        type: {
          name: "String"
        }
      },
      minimalTlsVersion: {
        serializedName: "properties.minimalTlsVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedInstanceUpdate: msRest.CompositeMapper = {
  serializedName: "ManagedInstanceUpdate",
  type: {
    name: "Composite",
    className: "ManagedInstanceUpdate",
    modelProperties: {
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      managedInstanceCreateMode: {
        serializedName: "properties.managedInstanceCreateMode",
        type: {
          name: "String"
        }
      },
      fullyQualifiedDomainName: {
        readOnly: true,
        serializedName: "properties.fullyQualifiedDomainName",
        type: {
          name: "String"
        }
      },
      administratorLogin: {
        serializedName: "properties.administratorLogin",
        type: {
          name: "String"
        }
      },
      administratorLoginPassword: {
        serializedName: "properties.administratorLoginPassword",
        type: {
          name: "String"
        }
      },
      subnetId: {
        serializedName: "properties.subnetId",
        type: {
          name: "String"
        }
      },
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      licenseType: {
        serializedName: "properties.licenseType",
        type: {
          name: "String"
        }
      },
      vCores: {
        serializedName: "properties.vCores",
        type: {
          name: "Number"
        }
      },
      storageSizeInGB: {
        serializedName: "properties.storageSizeInGB",
        type: {
          name: "Number"
        }
      },
      collation: {
        serializedName: "properties.collation",
        type: {
          name: "String"
        }
      },
      dnsZone: {
        readOnly: true,
        serializedName: "properties.dnsZone",
        type: {
          name: "String"
        }
      },
      dnsZonePartner: {
        serializedName: "properties.dnsZonePartner",
        type: {
          name: "String"
        }
      },
      publicDataEndpointEnabled: {
        serializedName: "properties.publicDataEndpointEnabled",
        type: {
          name: "Boolean"
        }
      },
      sourceManagedInstanceId: {
        serializedName: "properties.sourceManagedInstanceId",
        type: {
          name: "String"
        }
      },
      restorePointInTime: {
        serializedName: "properties.restorePointInTime",
        type: {
          name: "DateTime"
        }
      },
      proxyOverride: {
        serializedName: "properties.proxyOverride",
        type: {
          name: "String"
        }
      },
      timezoneId: {
        serializedName: "properties.timezoneId",
        type: {
          name: "String"
        }
      },
      instancePoolId: {
        serializedName: "properties.instancePoolId",
        type: {
          name: "String"
        }
      },
      maintenanceConfigurationId: {
        serializedName: "properties.maintenanceConfigurationId",
        type: {
          name: "String"
        }
      },
      minimalTlsVersion: {
        serializedName: "properties.minimalTlsVersion",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ManagedDatabaseRestoreDetailsResult: msRest.CompositeMapper = {
  serializedName: "ManagedDatabaseRestoreDetailsResult",
  type: {
    name: "Composite",
    className: "ManagedDatabaseRestoreDetailsResult",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      currentRestoringFileName: {
        readOnly: true,
        serializedName: "properties.currentRestoringFileName",
        type: {
          name: "String"
        }
      },
      lastRestoredFileName: {
        readOnly: true,
        serializedName: "properties.lastRestoredFileName",
        type: {
          name: "String"
        }
      },
      lastRestoredFileTime: {
        readOnly: true,
        serializedName: "properties.lastRestoredFileTime",
        type: {
          name: "DateTime"
        }
      },
      percentCompleted: {
        readOnly: true,
        serializedName: "properties.percentCompleted",
        type: {
          name: "Number"
        }
      },
      unrestorableFiles: {
        readOnly: true,
        serializedName: "properties.unrestorableFiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      numberOfFilesDetected: {
        readOnly: true,
        serializedName: "properties.numberOfFilesDetected",
        type: {
          name: "Number"
        }
      },
      lastUploadedFileName: {
        readOnly: true,
        serializedName: "properties.lastUploadedFileName",
        type: {
          name: "String"
        }
      },
      lastUploadedFileTime: {
        readOnly: true,
        serializedName: "properties.lastUploadedFileTime",
        type: {
          name: "DateTime"
        }
      },
      blockReason: {
        readOnly: true,
        serializedName: "properties.blockReason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedDatabase: msRest.CompositeMapper = {
  serializedName: "ManagedDatabase",
  type: {
    name: "Composite",
    className: "ManagedDatabase",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      collation: {
        serializedName: "properties.collation",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      creationDate: {
        readOnly: true,
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      earliestRestorePoint: {
        readOnly: true,
        serializedName: "properties.earliestRestorePoint",
        type: {
          name: "DateTime"
        }
      },
      restorePointInTime: {
        serializedName: "properties.restorePointInTime",
        type: {
          name: "DateTime"
        }
      },
      defaultSecondaryLocation: {
        readOnly: true,
        serializedName: "properties.defaultSecondaryLocation",
        type: {
          name: "String"
        }
      },
      catalogCollation: {
        serializedName: "properties.catalogCollation",
        type: {
          name: "String"
        }
      },
      createMode: {
        serializedName: "properties.createMode",
        type: {
          name: "String"
        }
      },
      storageContainerUri: {
        serializedName: "properties.storageContainerUri",
        type: {
          name: "String"
        }
      },
      sourceDatabaseId: {
        serializedName: "properties.sourceDatabaseId",
        type: {
          name: "String"
        }
      },
      restorableDroppedDatabaseId: {
        serializedName: "properties.restorableDroppedDatabaseId",
        type: {
          name: "String"
        }
      },
      storageContainerSasToken: {
        serializedName: "properties.storageContainerSasToken",
        type: {
          name: "String"
        }
      },
      failoverGroupId: {
        readOnly: true,
        serializedName: "properties.failoverGroupId",
        type: {
          name: "String"
        }
      },
      recoverableDatabaseId: {
        serializedName: "properties.recoverableDatabaseId",
        type: {
          name: "String"
        }
      },
      longTermRetentionBackupResourceId: {
        serializedName: "properties.longTermRetentionBackupResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedDatabaseUpdate: msRest.CompositeMapper = {
  serializedName: "ManagedDatabaseUpdate",
  type: {
    name: "Composite",
    className: "ManagedDatabaseUpdate",
    modelProperties: {
      collation: {
        serializedName: "properties.collation",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      creationDate: {
        readOnly: true,
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      earliestRestorePoint: {
        readOnly: true,
        serializedName: "properties.earliestRestorePoint",
        type: {
          name: "DateTime"
        }
      },
      restorePointInTime: {
        serializedName: "properties.restorePointInTime",
        type: {
          name: "DateTime"
        }
      },
      defaultSecondaryLocation: {
        readOnly: true,
        serializedName: "properties.defaultSecondaryLocation",
        type: {
          name: "String"
        }
      },
      catalogCollation: {
        serializedName: "properties.catalogCollation",
        type: {
          name: "String"
        }
      },
      createMode: {
        serializedName: "properties.createMode",
        type: {
          name: "String"
        }
      },
      storageContainerUri: {
        serializedName: "properties.storageContainerUri",
        type: {
          name: "String"
        }
      },
      sourceDatabaseId: {
        serializedName: "properties.sourceDatabaseId",
        type: {
          name: "String"
        }
      },
      restorableDroppedDatabaseId: {
        serializedName: "properties.restorableDroppedDatabaseId",
        type: {
          name: "String"
        }
      },
      storageContainerSasToken: {
        serializedName: "properties.storageContainerSasToken",
        type: {
          name: "String"
        }
      },
      failoverGroupId: {
        readOnly: true,
        serializedName: "properties.failoverGroupId",
        type: {
          name: "String"
        }
      },
      recoverableDatabaseId: {
        serializedName: "properties.recoverableDatabaseId",
        type: {
          name: "String"
        }
      },
      longTermRetentionBackupResourceId: {
        serializedName: "properties.longTermRetentionBackupResourceId",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const CompleteDatabaseRestoreDefinition: msRest.CompositeMapper = {
  serializedName: "CompleteDatabaseRestoreDefinition",
  type: {
    name: "Composite",
    className: "CompleteDatabaseRestoreDefinition",
    modelProperties: {
      lastBackupName: {
        required: true,
        serializedName: "lastBackupName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointProperty: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointProperty",
  type: {
    name: "Composite",
    className: "PrivateEndpointProperty",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkServiceConnectionStateProperty: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServiceConnectionStateProperty",
  type: {
    name: "Composite",
    className: "PrivateLinkServiceConnectionStateProperty",
    modelProperties: {
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      description: {
        required: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      actionsRequired: {
        readOnly: true,
        serializedName: "actionsRequired",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnection: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointConnection",
  type: {
    name: "Composite",
    className: "PrivateEndpointConnection",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      privateEndpoint: {
        serializedName: "properties.privateEndpoint",
        type: {
          name: "Composite",
          className: "PrivateEndpointProperty"
        }
      },
      privateLinkServiceConnectionState: {
        serializedName: "properties.privateLinkServiceConnectionState",
        type: {
          name: "Composite",
          className: "PrivateLinkServiceConnectionStateProperty"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerAzureADAdministrator: msRest.CompositeMapper = {
  serializedName: "ServerAzureADAdministrator",
  type: {
    name: "Composite",
    className: "ServerAzureADAdministrator",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      administratorType: {
        required: true,
        isConstant: true,
        serializedName: "properties.administratorType",
        defaultValue: 'ActiveDirectory',
        type: {
          name: "String"
        }
      },
      login: {
        required: true,
        serializedName: "properties.login",
        type: {
          name: "String"
        }
      },
      sid: {
        required: true,
        serializedName: "properties.sid",
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const ManagedInstanceLongTermRetentionPolicy: msRest.CompositeMapper = {
  serializedName: "ManagedInstanceLongTermRetentionPolicy",
  type: {
    name: "Composite",
    className: "ManagedInstanceLongTermRetentionPolicy",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      weeklyRetention: {
        serializedName: "properties.weeklyRetention",
        type: {
          name: "String"
        }
      },
      monthlyRetention: {
        serializedName: "properties.monthlyRetention",
        type: {
          name: "String"
        }
      },
      yearlyRetention: {
        serializedName: "properties.yearlyRetention",
        type: {
          name: "String"
        }
      },
      weekOfYear: {
        serializedName: "properties.weekOfYear",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ManagedInstanceLongTermRetentionBackup: msRest.CompositeMapper = {
  serializedName: "ManagedInstanceLongTermRetentionBackup",
  type: {
    name: "Composite",
    className: "ManagedInstanceLongTermRetentionBackup",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      managedInstanceName: {
        readOnly: true,
        serializedName: "properties.managedInstanceName",
        type: {
          name: "String"
        }
      },
      managedInstanceCreateTime: {
        readOnly: true,
        serializedName: "properties.managedInstanceCreateTime",
        type: {
          name: "DateTime"
        }
      },
      databaseName: {
        readOnly: true,
        serializedName: "properties.databaseName",
        type: {
          name: "String"
        }
      },
      databaseDeletionTime: {
        readOnly: true,
        serializedName: "properties.databaseDeletionTime",
        type: {
          name: "DateTime"
        }
      },
      backupTime: {
        readOnly: true,
        serializedName: "properties.backupTime",
        type: {
          name: "DateTime"
        }
      },
      backupExpirationTime: {
        readOnly: true,
        serializedName: "properties.backupExpirationTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const DatabaseSecurityAlertListResult: msRest.CompositeMapper = {
  serializedName: "DatabaseSecurityAlertListResult",
  type: {
    name: "Composite",
    className: "DatabaseSecurityAlertListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatabaseSecurityAlertPolicy"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SensitivityLabelListResult: msRest.CompositeMapper = {
  serializedName: "SensitivityLabelListResult",
  type: {
    name: "Composite",
    className: "SensitivityLabelListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SensitivityLabel"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedInstanceVulnerabilityAssessmentListResult: msRest.CompositeMapper = {
  serializedName: "ManagedInstanceVulnerabilityAssessmentListResult",
  type: {
    name: "Composite",
    className: "ManagedInstanceVulnerabilityAssessmentListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedInstanceVulnerabilityAssessment"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedInstanceOperationListResult: msRest.CompositeMapper = {
  serializedName: "ManagedInstanceOperationListResult",
  type: {
    name: "Composite",
    className: "ManagedInstanceOperationListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedInstanceOperation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerVulnerabilityAssessmentListResult: msRest.CompositeMapper = {
  serializedName: "ServerVulnerabilityAssessmentListResult",
  type: {
    name: "Composite",
    className: "ServerVulnerabilityAssessmentListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerVulnerabilityAssessment"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InstancePoolListResult: msRest.CompositeMapper = {
  serializedName: "InstancePoolListResult",
  type: {
    name: "Composite",
    className: "InstancePoolListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InstancePool"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UsageListResult: msRest.CompositeMapper = {
  serializedName: "UsageListResult",
  type: {
    name: "Composite",
    className: "UsageListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Usage"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedInstanceListResult: msRest.CompositeMapper = {
  serializedName: "ManagedInstanceListResult",
  type: {
    name: "Composite",
    className: "ManagedInstanceListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedInstance"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedDatabaseListResult: msRest.CompositeMapper = {
  serializedName: "ManagedDatabaseListResult",
  type: {
    name: "Composite",
    className: "ManagedDatabaseListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedDatabase"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnectionListResult: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointConnectionListResult",
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AdministratorListResult: msRest.CompositeMapper = {
  serializedName: "AdministratorListResult",
  type: {
    name: "Composite",
    className: "AdministratorListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerAzureADAdministrator"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedInstanceLongTermRetentionPolicyListResult: msRest.CompositeMapper = {
  serializedName: "ManagedInstanceLongTermRetentionPolicyListResult",
  type: {
    name: "Composite",
    className: "ManagedInstanceLongTermRetentionPolicyListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedInstanceLongTermRetentionPolicy"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedInstanceLongTermRetentionBackupListResult: msRest.CompositeMapper = {
  serializedName: "ManagedInstanceLongTermRetentionBackupListResult",
  type: {
    name: "Composite",
    className: "ManagedInstanceLongTermRetentionBackupListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedInstanceLongTermRetentionBackup"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
