/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const acceptLanguage: msRest.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const administratorName: msRest.OperationURLParameter = {
  parameterPath: "administratorName",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "administratorName",
    defaultValue: 'ActiveDirectory',
    type: {
      name: "String"
    }
  }
};
export const apiVersion: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};
export const backupName: msRest.OperationURLParameter = {
  parameterPath: "backupName",
  mapper: {
    required: true,
    serializedName: "backupName",
    type: {
      name: "String"
    }
  }
};
export const columnName: msRest.OperationURLParameter = {
  parameterPath: "columnName",
  mapper: {
    required: true,
    serializedName: "columnName",
    type: {
      name: "String"
    }
  }
};
export const databaseName: msRest.OperationURLParameter = {
  parameterPath: "databaseName",
  mapper: {
    required: true,
    serializedName: "databaseName",
    type: {
      name: "String"
    }
  }
};
export const databaseState: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "databaseState"
  ],
  mapper: {
    serializedName: "databaseState",
    type: {
      name: "String"
    }
  }
};
export const elasticPoolName: msRest.OperationURLParameter = {
  parameterPath: "elasticPoolName",
  mapper: {
    required: true,
    serializedName: "elasticPoolName",
    type: {
      name: "String"
    }
  }
};
export const expandChildren: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "expandChildren"
  ],
  mapper: {
    serializedName: "expandChildren",
    type: {
      name: "Boolean"
    }
  }
};
export const filter: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const includeDisabledRecommendations: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "includeDisabledRecommendations"
  ],
  mapper: {
    serializedName: "includeDisabledRecommendations",
    type: {
      name: "Boolean"
    }
  }
};
export const instancePoolName: msRest.OperationURLParameter = {
  parameterPath: "instancePoolName",
  mapper: {
    required: true,
    serializedName: "instancePoolName",
    type: {
      name: "String"
    }
  }
};
export const locationName: msRest.OperationURLParameter = {
  parameterPath: "locationName",
  mapper: {
    required: true,
    serializedName: "locationName",
    type: {
      name: "String"
    }
  }
};
export const managedInstanceName: msRest.OperationURLParameter = {
  parameterPath: "managedInstanceName",
  mapper: {
    required: true,
    serializedName: "managedInstanceName",
    type: {
      name: "String"
    }
  }
};
export const nextPageLink: msRest.OperationURLParameter = {
  parameterPath: "nextPageLink",
  mapper: {
    required: true,
    serializedName: "nextLink",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const onlyLatestPerDatabase: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "onlyLatestPerDatabase"
  ],
  mapper: {
    serializedName: "onlyLatestPerDatabase",
    type: {
      name: "Boolean"
    }
  }
};
export const operationId: msRest.OperationURLParameter = {
  parameterPath: "operationId",
  mapper: {
    required: true,
    serializedName: "operationId",
    type: {
      name: "Uuid"
    }
  }
};
export const policyName: msRest.OperationURLParameter = {
  parameterPath: "policyName",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "policyName",
    defaultValue: 'default',
    type: {
      name: "String"
    }
  }
};
export const privateEndpointConnectionName: msRest.OperationURLParameter = {
  parameterPath: "privateEndpointConnectionName",
  mapper: {
    required: true,
    serializedName: "privateEndpointConnectionName",
    type: {
      name: "String"
    }
  }
};
export const replicaType: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "replicaType"
  ],
  mapper: {
    serializedName: "replicaType",
    type: {
      name: "String"
    }
  }
};
export const resourceGroupName: msRest.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    required: true,
    serializedName: "resourceGroupName",
    type: {
      name: "String"
    }
  }
};
export const restoreDetailsName: msRest.OperationURLParameter = {
  parameterPath: "restoreDetailsName",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "restoreDetailsName",
    defaultValue: 'Default',
    type: {
      name: "String"
    }
  }
};
export const schemaName: msRest.OperationURLParameter = {
  parameterPath: "schemaName",
  mapper: {
    required: true,
    serializedName: "schemaName",
    type: {
      name: "String"
    }
  }
};
export const securityAlertPolicyName: msRest.OperationURLParameter = {
  parameterPath: "securityAlertPolicyName",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "securityAlertPolicyName",
    defaultValue: 'default',
    type: {
      name: "String"
    }
  }
};
export const sensitivityLabelSource0: msRest.OperationURLParameter = {
  parameterPath: "sensitivityLabelSource",
  mapper: {
    required: true,
    serializedName: "sensitivityLabelSource",
    type: {
      name: "Enum",
      allowedValues: [
        "current",
        "recommended"
      ]
    }
  }
};
export const sensitivityLabelSource1: msRest.OperationURLParameter = {
  parameterPath: "sensitivityLabelSource",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "sensitivityLabelSource",
    defaultValue: 'current',
    type: {
      name: "String"
    }
  }
};
export const sensitivityLabelSource2: msRest.OperationURLParameter = {
  parameterPath: "sensitivityLabelSource",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "sensitivityLabelSource",
    defaultValue: 'recommended',
    type: {
      name: "String"
    }
  }
};
export const serverName: msRest.OperationURLParameter = {
  parameterPath: "serverName",
  mapper: {
    required: true,
    serializedName: "serverName",
    type: {
      name: "String"
    }
  }
};
export const skipToken: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "skipToken"
  ],
  mapper: {
    serializedName: "$skipToken",
    type: {
      name: "String"
    }
  }
};
export const subscriptionId: msRest.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    required: true,
    serializedName: "subscriptionId",
    type: {
      name: "String"
    }
  }
};
export const tableName: msRest.OperationURLParameter = {
  parameterPath: "tableName",
  mapper: {
    required: true,
    serializedName: "tableName",
    type: {
      name: "String"
    }
  }
};
export const vulnerabilityAssessmentName: msRest.OperationURLParameter = {
  parameterPath: "vulnerabilityAssessmentName",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "vulnerabilityAssessmentName",
    defaultValue: 'default',
    type: {
      name: "String"
    }
  }
};
