/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * ARM resource.
 */
export interface Resource extends BaseResource {
  /**
   * Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * ARM proxy resource.
 */
export interface ProxyResource extends Resource {
}

/**
 * A database operation.
 */
export interface DatabaseOperation extends ProxyResource {
  /**
   * The name of the database the operation is being performed on.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseName?: string;
  /**
   * The name of operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * The friendly name of operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operationFriendlyName?: string;
  /**
   * The percentage of the operation completed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly percentComplete?: number;
  /**
   * The name of the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serverName?: string;
  /**
   * The operation start time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The operation state. Possible values include: 'Pending', 'InProgress', 'Succeeded', 'Failed',
   * 'CancelInProgress', 'Cancelled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: ManagementOperationState;
  /**
   * The operation error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorCode?: number;
  /**
   * The operation error description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorDescription?: string;
  /**
   * The operation error severity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorSeverity?: number;
  /**
   * Whether or not the error is a user error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isUserError?: boolean;
  /**
   * The estimated completion time of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly estimatedCompletionTime?: Date;
  /**
   * The operation description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Whether the operation can be cancelled.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isCancellable?: boolean;
}

/**
 * ARM tracked top level resource.
 */
export interface TrackedResource extends Resource {
  /**
   * Resource location.
   */
  location: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A elastic pool operation.
 */
export interface ElasticPoolOperation extends ProxyResource {
  /**
   * The name of the elastic pool the operation is being performed on.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly elasticPoolName?: string;
  /**
   * The name of operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * The friendly name of operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operationFriendlyName?: string;
  /**
   * The percentage of the operation completed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly percentComplete?: number;
  /**
   * The name of the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serverName?: string;
  /**
   * The operation start time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The operation state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: string;
  /**
   * The operation error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorCode?: number;
  /**
   * The operation error description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorDescription?: string;
  /**
   * The operation error severity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorSeverity?: number;
  /**
   * Whether or not the error is a user error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isUserError?: boolean;
  /**
   * The estimated completion time of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly estimatedCompletionTime?: Date;
  /**
   * The operation description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Whether the operation can be cancelled.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isCancellable?: boolean;
}

/**
 * Properties of a vulnerability assessment scan error.
 */
export interface VulnerabilityAssessmentScanError {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * A vulnerability assessment scan record.
 */
export interface VulnerabilityAssessmentScanRecord extends ProxyResource {
  /**
   * The scan ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scanId?: string;
  /**
   * The scan trigger type. Possible values include: 'OnDemand', 'Recurring'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly triggerType?: VulnerabilityAssessmentScanTriggerType;
  /**
   * The scan status. Possible values include: 'Passed', 'Failed', 'FailedToRun', 'InProgress'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: VulnerabilityAssessmentScanState;
  /**
   * The scan start time (UTC).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The scan end time (UTC).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endTime?: Date;
  /**
   * The scan errors.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errors?: VulnerabilityAssessmentScanError[];
  /**
   * The scan results storage container path.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly storageContainerPath?: string;
  /**
   * The number of failed security checks.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly numberOfFailedSecurityChecks?: number;
}

/**
 * A database Vulnerability Assessment scan export resource.
 */
export interface DatabaseVulnerabilityAssessmentScansExport extends ProxyResource {
  /**
   * Location of the exported report (e.g.
   * https://myStorage.blob.core.windows.net/VaScans/scans/serverName/databaseName/scan_scanId.xlsx).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly exportedReportLocation?: string;
}

/**
 * Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result.
 */
export interface DatabaseVulnerabilityAssessmentRuleBaselineItem {
  /**
   * The rule baseline result
   */
  result: string[];
}

/**
 * A database vulnerability assessment rule baseline.
 */
export interface DatabaseVulnerabilityAssessmentRuleBaseline extends ProxyResource {
  /**
   * The rule baseline result
   */
  baselineResults: DatabaseVulnerabilityAssessmentRuleBaselineItem[];
}

/**
 * Properties of a Vulnerability Assessment recurring scans.
 */
export interface VulnerabilityAssessmentRecurringScansProperties {
  /**
   * Recurring scans state.
   */
  isEnabled?: boolean;
  /**
   * Specifies that the schedule scan notification will be is sent to the subscription
   * administrators. Default value: true.
   */
  emailSubscriptionAdmins?: boolean;
  /**
   * Specifies an array of e-mail addresses to which the scan notification is sent.
   */
  emails?: string[];
}

/**
 * A database vulnerability assessment.
 */
export interface DatabaseVulnerabilityAssessment extends ProxyResource {
  /**
   * A blob storage container path to hold the scan results (e.g.
   * https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level
   * vulnerability assessment policy doesn't set
   */
  storageContainerPath?: string;
  /**
   * A shared access signature (SAS Key) that has read and write access to the blob container
   * specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified,
   * StorageContainerSasKey is required.
   */
  storageContainerSasKey?: string;
  /**
   * Specifies the identifier key of the storage account for vulnerability assessment scan results.
   * If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.
   */
  storageAccountAccessKey?: string;
  /**
   * The recurring scans settings
   */
  recurringScans?: VulnerabilityAssessmentRecurringScansProperties;
}

/**
 * The maximum size capability.
 */
export interface MaxSizeCapability {
  /**
   * The maximum size limit (see 'unit' for the units).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * The units that the limit is expressed in. Possible values include: 'Megabytes', 'Gigabytes',
   * 'Terabytes', 'Petabytes'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: MaxSizeUnit;
}

/**
 * The log size capability.
 */
export interface LogSizeCapability {
  /**
   * The log size limit (see 'unit' for the units).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * The units that the limit is expressed in. Possible values include: 'Megabytes', 'Gigabytes',
   * 'Terabytes', 'Petabytes', 'Percent'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: LogSizeUnit;
}

/**
 * The maximum size range capability.
 */
export interface MaxSizeRangeCapability {
  /**
   * Minimum value.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly minValue?: MaxSizeCapability;
  /**
   * Maximum value.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxValue?: MaxSizeCapability;
  /**
   * Scale/step size for discrete values between the minimum value and the maximum value.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scaleSize?: MaxSizeCapability;
  /**
   * Size of transaction log.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly logSize?: LogSizeCapability;
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The performance level capability.
 */
export interface PerformanceLevelCapability {
  /**
   * Performance level value.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: number;
  /**
   * Unit type used to measure performance level. Possible values include: 'DTU', 'VCores'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: PerformanceLevelUnit;
}

/**
 * An ARM Resource SKU.
 */
export interface Sku {
  /**
   * The name of the SKU, typically, a letter + Number code, e.g. P3.
   */
  name: string;
  /**
   * The tier or edition of the particular SKU, e.g. Basic, Premium.
   */
  tier?: string;
  /**
   * Size of the particular SKU
   */
  size?: string;
  /**
   * If the service has different generations of hardware, for the same SKU, then that can be
   * captured here.
   */
  family?: string;
  /**
   * Capacity of the particular SKU.
   */
  capacity?: number;
}

/**
 * The license type capability
 */
export interface LicenseTypeCapability {
  /**
   * License type identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The service objectives capability.
 */
export interface ServiceObjectiveCapability {
  /**
   * The unique ID of the service objective.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The service objective name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The list of supported maximum database sizes.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedMaxSizes?: MaxSizeRangeCapability[];
  /**
   * The performance level.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly performanceLevel?: PerformanceLevelCapability;
  /**
   * The sku.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sku?: Sku;
  /**
   * List of supported license types.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedLicenseTypes?: LicenseTypeCapability[];
  /**
   * The included (free) max size.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly includedMaxSize?: MaxSizeCapability;
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The edition capability.
 */
export interface EditionCapability {
  /**
   * The database edition name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The list of supported service objectives for the edition.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedServiceLevelObjectives?: ServiceObjectiveCapability[];
  /**
   * Whether or not zone redundancy is supported for the edition.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly zoneRedundant?: boolean;
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The minimum per-database performance level capability.
 */
export interface ElasticPoolPerDatabaseMinPerformanceLevelCapability {
  /**
   * The minimum performance level per database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * Unit type used to measure performance level. Possible values include: 'DTU', 'VCores'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: PerformanceLevelUnit;
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The max per-database performance level capability.
 */
export interface ElasticPoolPerDatabaseMaxPerformanceLevelCapability {
  /**
   * The maximum performance level per database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * Unit type used to measure performance level. Possible values include: 'DTU', 'VCores'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: PerformanceLevelUnit;
  /**
   * The list of supported min database performance levels.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedPerDatabaseMinPerformanceLevels?: ElasticPoolPerDatabaseMinPerformanceLevelCapability[];
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The Elastic Pool performance level capability.
 */
export interface ElasticPoolPerformanceLevelCapability {
  /**
   * The performance level for the pool.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly performanceLevel?: PerformanceLevelCapability;
  /**
   * The sku.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sku?: Sku;
  /**
   * List of supported license types.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedLicenseTypes?: LicenseTypeCapability[];
  /**
   * The maximum number of databases supported.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxDatabaseCount?: number;
  /**
   * The included (free) max size for this performance level.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly includedMaxSize?: MaxSizeCapability;
  /**
   * The list of supported max sizes.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedMaxSizes?: MaxSizeRangeCapability[];
  /**
   * The list of supported per database max sizes.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedPerDatabaseMaxSizes?: MaxSizeRangeCapability[];
  /**
   * The list of supported per database max performance levels.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedPerDatabaseMaxPerformanceLevels?: ElasticPoolPerDatabaseMaxPerformanceLevelCapability[];
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The elastic pool edition capability.
 */
export interface ElasticPoolEditionCapability {
  /**
   * The elastic pool edition name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The list of supported elastic pool DTU levels for the edition.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedElasticPoolPerformanceLevels?: ElasticPoolPerformanceLevelCapability[];
  /**
   * Whether or not zone redundancy is supported for the edition.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly zoneRedundant?: boolean;
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The server capability
 */
export interface ServerVersionCapability {
  /**
   * The server version name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The list of supported database editions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedEditions?: EditionCapability[];
  /**
   * The list of supported elastic pool editions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedElasticPoolEditions?: ElasticPoolEditionCapability[];
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The managed instance virtual cores capability.
 */
export interface ManagedInstanceVcoresCapability {
  /**
   * The virtual cores identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The virtual cores value.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: number;
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The managed server family capability.
 */
export interface ManagedInstanceFamilyCapability {
  /**
   * Family name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * SKU name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sku?: string;
  /**
   * List of supported license types.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedLicenseTypes?: LicenseTypeCapability[];
  /**
   * List of supported virtual cores values.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedVcoresValues?: ManagedInstanceVcoresCapability[];
  /**
   * Included size.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly includedMaxSize?: MaxSizeCapability;
  /**
   * Storage size ranges.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedStorageSizes?: MaxSizeRangeCapability[];
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The managed server capability
 */
export interface ManagedInstanceEditionCapability {
  /**
   * The managed server version name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The supported families.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedFamilies?: ManagedInstanceFamilyCapability[];
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The managed instance capability
 */
export interface ManagedInstanceVersionCapability {
  /**
   * The server version name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The list of supported managed instance editions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedEditions?: ManagedInstanceEditionCapability[];
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The location capability.
 */
export interface LocationCapabilities {
  /**
   * The location name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The list of supported server versions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedServerVersions?: ServerVersionCapability[];
  /**
   * The list of supported managed instance versions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedManagedInstanceVersions?: ManagedInstanceVersionCapability[];
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * A database resource.
 */
export interface Database extends TrackedResource {
  /**
   * The database SKU.
   *
   * The list of SKUs may vary by region and support offer. To determine the SKUs (including the
   * SKU name, tier/edition, family, and capacity) that are available to your subscription in an
   * Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:
   *
   * ```azurecli
   * az sql db list-editions -l <location> -o table
   * ````
   *
   * ```powershell
   * Get-AzSqlServerServiceObjective -Location <location>
   * ````
   */
  sku?: Sku;
  /**
   * Kind of database. This is metadata used for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Resource that manages the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly managedBy?: string;
  /**
   * Specifies the mode of database creation.
   *
   * Default: regular database creation.
   *
   * Copy: creates a database as a copy of an existing database. sourceDatabaseId must be specified
   * as the resource ID of the source database.
   *
   * Secondary: creates a database as a secondary replica of an existing database. sourceDatabaseId
   * must be specified as the resource ID of the existing primary database.
   *
   * PointInTimeRestore: Creates a database by restoring a point in time backup of an existing
   * database. sourceDatabaseId must be specified as the resource ID of the existing database, and
   * restorePointInTime must be specified.
   *
   * Recovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be
   * specified as the recoverable database resource ID to restore.
   *
   * Restore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must
   * be specified. If sourceDatabaseId is the database's original resource ID, then
   * sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the
   * restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored.
   * restorePointInTime may also be specified to restore from an earlier point in time.
   *
   * RestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention
   * vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point
   * resource ID.
   *
   * Copy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse
   * edition. Possible values include: 'Default', 'Copy', 'Secondary', 'PointInTimeRestore',
   * 'Restore', 'Recovery', 'RestoreExternalBackup', 'RestoreExternalBackupSecondary',
   * 'RestoreLongTermRetentionBackup', 'OnlineSecondary'
   */
  createMode?: CreateMode;
  /**
   * The collation of the database.
   */
  collation?: string;
  /**
   * The max size of the database expressed in bytes.
   */
  maxSizeBytes?: number;
  /**
   * The name of the sample schema to apply when creating this database. Possible values include:
   * 'AdventureWorksLT', 'WideWorldImportersStd', 'WideWorldImportersFull'
   */
  sampleName?: SampleName;
  /**
   * The resource identifier of the elastic pool containing this database.
   */
  elasticPoolId?: string;
  /**
   * The resource identifier of the source database associated with create operation of this
   * database.
   */
  sourceDatabaseId?: string;
  /**
   * The status of the database. Possible values include: 'Online', 'Restoring', 'RecoveryPending',
   * 'Recovering', 'Suspect', 'Offline', 'Standby', 'Shutdown', 'EmergencyMode', 'AutoClosed',
   * 'Copying', 'Creating', 'Inaccessible', 'OfflineSecondary', 'Pausing', 'Paused', 'Resuming',
   * 'Scaling', 'OfflineChangingDwPerformanceTiers', 'OnlineChangingDwPerformanceTiers', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: DatabaseStatus;
  /**
   * The ID of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseId?: string;
  /**
   * The creation date of the database (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
  /**
   * The current service level objective name of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentServiceObjectiveName?: string;
  /**
   * The requested service level objective name of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestedServiceObjectiveName?: string;
  /**
   * The default secondary region for this database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultSecondaryLocation?: string;
  /**
   * Failover Group resource identifier that this database belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly failoverGroupId?: string;
  /**
   * Specifies the point in time (ISO8601 format) of the source database that will be restored to
   * create the new database.
   */
  restorePointInTime?: Date;
  /**
   * Specifies the time that the database was deleted.
   */
  sourceDatabaseDeletionDate?: Date;
  /**
   * The resource identifier of the recovery point associated with create operation of this
   * database.
   */
  recoveryServicesRecoveryPointId?: string;
  /**
   * The resource identifier of the long term retention backup associated with create operation of
   * this database.
   */
  longTermRetentionBackupResourceId?: string;
  /**
   * The resource identifier of the recoverable database associated with create operation of this
   * database.
   */
  recoverableDatabaseId?: string;
  /**
   * The resource identifier of the restorable dropped database associated with create operation of
   * this database.
   */
  restorableDroppedDatabaseId?: string;
  /**
   * Collation of the metadata catalog. Possible values include: 'DATABASE_DEFAULT',
   * 'SQL_Latin1_General_CP1_CI_AS'
   */
  catalogCollation?: CatalogCollationType;
  /**
   * Whether or not this database is zone redundant, which means the replicas of this database will
   * be spread across multiple availability zones.
   */
  zoneRedundant?: boolean;
  /**
   * The license type to apply for this database. `LicenseIncluded` if you need a license, or
   * `BasePrice` if you have a license and are eligible for the Azure Hybrid Benefit. Possible
   * values include: 'LicenseIncluded', 'BasePrice'
   */
  licenseType?: DatabaseLicenseType;
  /**
   * The max log size for this database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxLogSizeBytes?: number;
  /**
   * This records the earliest start date and time that restore is available for this database
   * (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly earliestRestoreDate?: Date;
  /**
   * If enabled, connections that have application intent set to readonly in their connection
   * string may be routed to a readonly secondary replica. This property is only settable for
   * Premium and Business Critical databases. Possible values include: 'Enabled', 'Disabled'
   */
  readScale?: DatabaseReadScale;
  /**
   * The number of readonly secondary replicas associated with the database to which readonly
   * application intent connections may be routed. This property is only settable for Hyperscale
   * edition databases.
   */
  readReplicaCount?: number;
  /**
   * The name and tier of the SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentSku?: Sku;
  /**
   * Time in minutes after which database is automatically paused. A value of -1 means that
   * automatic pause is disabled
   */
  autoPauseDelay?: number;
  /**
   * Minimal capacity that database will always have allocated, if not paused
   */
  minCapacity?: number;
  /**
   * The date when database was paused by user configuration or action (ISO8601 format). Null if
   * the database is ready.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly pausedDate?: Date;
  /**
   * The date when database was resumed by user action or database login (ISO8601 format). Null if
   * the database is paused.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resumedDate?: Date;
}

/**
 * A database resource.
 */
export interface DatabaseUpdate {
  /**
   * The name and tier of the SKU.
   */
  sku?: Sku;
  /**
   * Specifies the mode of database creation.
   *
   * Default: regular database creation.
   *
   * Copy: creates a database as a copy of an existing database. sourceDatabaseId must be specified
   * as the resource ID of the source database.
   *
   * Secondary: creates a database as a secondary replica of an existing database. sourceDatabaseId
   * must be specified as the resource ID of the existing primary database.
   *
   * PointInTimeRestore: Creates a database by restoring a point in time backup of an existing
   * database. sourceDatabaseId must be specified as the resource ID of the existing database, and
   * restorePointInTime must be specified.
   *
   * Recovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be
   * specified as the recoverable database resource ID to restore.
   *
   * Restore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must
   * be specified. If sourceDatabaseId is the database's original resource ID, then
   * sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the
   * restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored.
   * restorePointInTime may also be specified to restore from an earlier point in time.
   *
   * RestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention
   * vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point
   * resource ID.
   *
   * Copy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse
   * edition. Possible values include: 'Default', 'Copy', 'Secondary', 'PointInTimeRestore',
   * 'Restore', 'Recovery', 'RestoreExternalBackup', 'RestoreExternalBackupSecondary',
   * 'RestoreLongTermRetentionBackup', 'OnlineSecondary'
   */
  createMode?: CreateMode;
  /**
   * The collation of the database.
   */
  collation?: string;
  /**
   * The max size of the database expressed in bytes.
   */
  maxSizeBytes?: number;
  /**
   * The name of the sample schema to apply when creating this database. Possible values include:
   * 'AdventureWorksLT', 'WideWorldImportersStd', 'WideWorldImportersFull'
   */
  sampleName?: SampleName;
  /**
   * The resource identifier of the elastic pool containing this database.
   */
  elasticPoolId?: string;
  /**
   * The resource identifier of the source database associated with create operation of this
   * database.
   */
  sourceDatabaseId?: string;
  /**
   * The status of the database. Possible values include: 'Online', 'Restoring', 'RecoveryPending',
   * 'Recovering', 'Suspect', 'Offline', 'Standby', 'Shutdown', 'EmergencyMode', 'AutoClosed',
   * 'Copying', 'Creating', 'Inaccessible', 'OfflineSecondary', 'Pausing', 'Paused', 'Resuming',
   * 'Scaling', 'OfflineChangingDwPerformanceTiers', 'OnlineChangingDwPerformanceTiers', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: DatabaseStatus;
  /**
   * The ID of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseId?: string;
  /**
   * The creation date of the database (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
  /**
   * The current service level objective name of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentServiceObjectiveName?: string;
  /**
   * The requested service level objective name of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestedServiceObjectiveName?: string;
  /**
   * The default secondary region for this database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultSecondaryLocation?: string;
  /**
   * Failover Group resource identifier that this database belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly failoverGroupId?: string;
  /**
   * Specifies the point in time (ISO8601 format) of the source database that will be restored to
   * create the new database.
   */
  restorePointInTime?: Date;
  /**
   * Specifies the time that the database was deleted.
   */
  sourceDatabaseDeletionDate?: Date;
  /**
   * The resource identifier of the recovery point associated with create operation of this
   * database.
   */
  recoveryServicesRecoveryPointId?: string;
  /**
   * The resource identifier of the long term retention backup associated with create operation of
   * this database.
   */
  longTermRetentionBackupResourceId?: string;
  /**
   * The resource identifier of the recoverable database associated with create operation of this
   * database.
   */
  recoverableDatabaseId?: string;
  /**
   * The resource identifier of the restorable dropped database associated with create operation of
   * this database.
   */
  restorableDroppedDatabaseId?: string;
  /**
   * Collation of the metadata catalog. Possible values include: 'DATABASE_DEFAULT',
   * 'SQL_Latin1_General_CP1_CI_AS'
   */
  catalogCollation?: CatalogCollationType;
  /**
   * Whether or not this database is zone redundant, which means the replicas of this database will
   * be spread across multiple availability zones.
   */
  zoneRedundant?: boolean;
  /**
   * The license type to apply for this database. `LicenseIncluded` if you need a license, or
   * `BasePrice` if you have a license and are eligible for the Azure Hybrid Benefit. Possible
   * values include: 'LicenseIncluded', 'BasePrice'
   */
  licenseType?: DatabaseLicenseType;
  /**
   * The max log size for this database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxLogSizeBytes?: number;
  /**
   * This records the earliest start date and time that restore is available for this database
   * (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly earliestRestoreDate?: Date;
  /**
   * If enabled, connections that have application intent set to readonly in their connection
   * string may be routed to a readonly secondary replica. This property is only settable for
   * Premium and Business Critical databases. Possible values include: 'Enabled', 'Disabled'
   */
  readScale?: DatabaseReadScale;
  /**
   * The number of readonly secondary replicas associated with the database to which readonly
   * application intent connections may be routed. This property is only settable for Hyperscale
   * edition databases.
   */
  readReplicaCount?: number;
  /**
   * The name and tier of the SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentSku?: Sku;
  /**
   * Time in minutes after which database is automatically paused. A value of -1 means that
   * automatic pause is disabled
   */
  autoPauseDelay?: number;
  /**
   * Minimal capacity that database will always have allocated, if not paused
   */
  minCapacity?: number;
  /**
   * The date when database was paused by user configuration or action (ISO8601 format). Null if
   * the database is ready.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly pausedDate?: Date;
  /**
   * The date when database was resumed by user action or database login (ISO8601 format). Null if
   * the database is paused.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resumedDate?: Date;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Contains the information necessary to perform a resource move (rename).
 */
export interface ResourceMoveDefinition {
  /**
   * The target ID for the resource
   */
  id: string;
}

/**
 * Per database settings of an elastic pool.
 */
export interface ElasticPoolPerDatabaseSettings {
  /**
   * The minimum capacity all databases are guaranteed.
   */
  minCapacity?: number;
  /**
   * The maximum capacity any one database can consume.
   */
  maxCapacity?: number;
}

/**
 * An elastic pool.
 */
export interface ElasticPool extends TrackedResource {
  /**
   * The elastic pool SKU.
   *
   * The list of SKUs may vary by region and support offer. To determine the SKUs (including the
   * SKU name, tier/edition, family, and capacity) that are available to your subscription in an
   * Azure region, use the `Capabilities_ListByLocation` REST API or the following command:
   *
   * ```azurecli
   * az sql elastic-pool list-editions -l <location> -o table
   * ````
   */
  sku?: Sku;
  /**
   * Kind of elastic pool. This is metadata used for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * The state of the elastic pool. Possible values include: 'Creating', 'Ready', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: ElasticPoolState;
  /**
   * The creation date of the elastic pool (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
  /**
   * The storage limit for the database elastic pool in bytes.
   */
  maxSizeBytes?: number;
  /**
   * The per database settings for the elastic pool.
   */
  perDatabaseSettings?: ElasticPoolPerDatabaseSettings;
  /**
   * Whether or not this elastic pool is zone redundant, which means the replicas of this elastic
   * pool will be spread across multiple availability zones.
   */
  zoneRedundant?: boolean;
  /**
   * The license type to apply for this elastic pool. Possible values include: 'LicenseIncluded',
   * 'BasePrice'
   */
  licenseType?: ElasticPoolLicenseType;
}

/**
 * An elastic pool update.
 */
export interface ElasticPoolUpdate {
  sku?: Sku;
  /**
   * The storage limit for the database elastic pool in bytes.
   */
  maxSizeBytes?: number;
  /**
   * The per database settings for the elastic pool.
   */
  perDatabaseSettings?: ElasticPoolPerDatabaseSettings;
  /**
   * Whether or not this elastic pool is zone redundant, which means the replicas of this elastic
   * pool will be spread across multiple availability zones.
   */
  zoneRedundant?: boolean;
  /**
   * The license type to apply for this elastic pool. Possible values include: 'LicenseIncluded',
   * 'BasePrice'
   */
  licenseType?: ElasticPoolLicenseType;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Read-write endpoint of the failover group instance.
 */
export interface InstanceFailoverGroupReadWriteEndpoint {
  /**
   * Failover policy of the read-write endpoint for the failover group. If failoverPolicy is
   * Automatic then failoverWithDataLossGracePeriodMinutes is required. Possible values include:
   * 'Manual', 'Automatic'
   */
  failoverPolicy: ReadWriteEndpointFailoverPolicy;
  /**
   * Grace period before failover with data loss is attempted for the read-write endpoint. If
   * failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required.
   */
  failoverWithDataLossGracePeriodMinutes?: number;
}

/**
 * Read-only endpoint of the failover group instance.
 */
export interface InstanceFailoverGroupReadOnlyEndpoint {
  /**
   * Failover policy of the read-only endpoint for the failover group. Possible values include:
   * 'Disabled', 'Enabled'
   */
  failoverPolicy?: ReadOnlyEndpointFailoverPolicy;
}

/**
 * Partner region information for the failover group.
 */
export interface PartnerRegionInfo {
  /**
   * Geo location of the partner managed instances.
   */
  location?: string;
  /**
   * Replication role of the partner managed instances. Possible values include: 'Primary',
   * 'Secondary'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationRole?: InstanceFailoverGroupReplicationRole;
}

/**
 * Pairs of Managed Instances in the failover group.
 */
export interface ManagedInstancePairInfo {
  /**
   * Id of Primary Managed Instance in pair.
   */
  primaryManagedInstanceId?: string;
  /**
   * Id of Partner Managed Instance in pair.
   */
  partnerManagedInstanceId?: string;
}

/**
 * An instance failover group.
 */
export interface InstanceFailoverGroup extends ProxyResource {
  /**
   * Read-write endpoint of the failover group instance.
   */
  readWriteEndpoint: InstanceFailoverGroupReadWriteEndpoint;
  /**
   * Read-only endpoint of the failover group instance.
   */
  readOnlyEndpoint?: InstanceFailoverGroupReadOnlyEndpoint;
  /**
   * Local replication role of the failover group instance. Possible values include: 'Primary',
   * 'Secondary'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationRole?: InstanceFailoverGroupReplicationRole;
  /**
   * Replication state of the failover group instance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationState?: string;
  /**
   * Partner region information for the failover group.
   */
  partnerRegions: PartnerRegionInfo[];
  /**
   * List of managed instance pairs in the failover group.
   */
  managedInstancePairs: ManagedInstancePairInfo[];
}

/**
 * A short term retention policy.
 */
export interface BackupShortTermRetentionPolicy extends ProxyResource {
  /**
   * The backup retention period in days. This is how many days Point-in-Time Restore will be
   * supported.
   */
  retentionDays?: number;
}

/**
 * A TDE certificate that can be uploaded into a server.
 */
export interface TdeCertificate extends ProxyResource {
  /**
   * The base64 encoded certificate private blob.
   */
  privateBlob: string;
  /**
   * The certificate password.
   */
  certPassword?: string;
}

/**
 * A managed instance key.
 */
export interface ManagedInstanceKey extends ProxyResource {
  /**
   * Kind of encryption protector. This is metadata used for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * The key type like 'ServiceManaged', 'AzureKeyVault'. Possible values include:
   * 'ServiceManaged', 'AzureKeyVault'
   */
  serverKeyType: ServerKeyType;
  /**
   * The URI of the key. If the ServerKeyType is AzureKeyVault, then the URI is required.
   */
  uri?: string;
  /**
   * Thumbprint of the key.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbprint?: string;
  /**
   * The key creation date.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
}

/**
 * The managed instance encryption protector.
 */
export interface ManagedInstanceEncryptionProtector extends ProxyResource {
  /**
   * Kind of encryption protector. This is metadata used for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * The name of the managed instance key.
   */
  serverKeyName?: string;
  /**
   * The encryption protector type like 'ServiceManaged', 'AzureKeyVault'. Possible values include:
   * 'ServiceManaged', 'AzureKeyVault'
   */
  serverKeyType: ServerKeyType;
  /**
   * The URI of the server key.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly uri?: string;
  /**
   * Thumbprint of the server key.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbprint?: string;
}

/**
 * A recoverable managed database resource.
 */
export interface RecoverableManagedDatabase extends ProxyResource {
  /**
   * The last available backup date.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastAvailableBackupDate?: string;
}

/**
 * Optional Parameters.
 */
export interface CapabilitiesListByLocationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If specified, restricts the response to only include the selected item. Possible values
   * include: 'supportedEditions', 'supportedElasticPoolEditions',
   * 'supportedManagedInstanceVersions'
   */
  include?: CapabilityGroup;
}

/**
 * Optional Parameters.
 */
export interface ElasticPoolsListByServerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The number of elements in the collection to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface ElasticPoolsListByServerNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The number of elements in the collection to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface ManagedInstanceKeysListByInstanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * An OData filter expression that filters elements in the collection.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ManagedInstanceKeysListByInstanceNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * An OData filter expression that filters elements in the collection.
   */
  filter?: string;
}

/**
 * An interface representing SqlManagementClientOptions.
 */
export interface SqlManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * The response to a list database operations request
 * @extends Array<DatabaseOperation>
 */
export interface DatabaseOperationListResult extends Array<DatabaseOperation> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The response to a list elastic pool operations request
 * @extends Array<ElasticPoolOperation>
 */
export interface ElasticPoolOperationListResult extends Array<ElasticPoolOperation> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of vulnerability assessment scan records.
 * @extends Array<VulnerabilityAssessmentScanRecord>
 */
export interface VulnerabilityAssessmentScanRecordListResult extends Array<VulnerabilityAssessmentScanRecord> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of the database's vulnerability assessments.
 * @extends Array<DatabaseVulnerabilityAssessment>
 */
export interface DatabaseVulnerabilityAssessmentListResult extends Array<DatabaseVulnerabilityAssessment> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of databases.
 * @extends Array<Database>
 */
export interface DatabaseListResult extends Array<Database> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The result of an elastic pool list request.
 * @extends Array<ElasticPool>
 */
export interface ElasticPoolListResult extends Array<ElasticPool> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of instance failover groups.
 * @extends Array<InstanceFailoverGroup>
 */
export interface InstanceFailoverGroupListResult extends Array<InstanceFailoverGroup> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of short term retention policies.
 * @extends Array<BackupShortTermRetentionPolicy>
 */
export interface BackupShortTermRetentionPolicyListResult extends Array<BackupShortTermRetentionPolicy> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of managed instance keys.
 * @extends Array<ManagedInstanceKey>
 */
export interface ManagedInstanceKeyListResult extends Array<ManagedInstanceKey> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of managed instance encryption protectors.
 * @extends Array<ManagedInstanceEncryptionProtector>
 */
export interface ManagedInstanceEncryptionProtectorListResult extends Array<ManagedInstanceEncryptionProtector> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of recoverable managed databases.
 * @extends Array<RecoverableManagedDatabase>
 */
export interface RecoverableManagedDatabaseListResult extends Array<RecoverableManagedDatabase> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for ManagementOperationState.
 * Possible values include: 'Pending', 'InProgress', 'Succeeded', 'Failed', 'CancelInProgress',
 * 'Cancelled'
 * @readonly
 * @enum {string}
 */
export type ManagementOperationState = 'Pending' | 'InProgress' | 'Succeeded' | 'Failed' | 'CancelInProgress' | 'Cancelled';

/**
 * Defines values for VulnerabilityAssessmentScanTriggerType.
 * Possible values include: 'OnDemand', 'Recurring'
 * @readonly
 * @enum {string}
 */
export type VulnerabilityAssessmentScanTriggerType = 'OnDemand' | 'Recurring';

/**
 * Defines values for VulnerabilityAssessmentScanState.
 * Possible values include: 'Passed', 'Failed', 'FailedToRun', 'InProgress'
 * @readonly
 * @enum {string}
 */
export type VulnerabilityAssessmentScanState = 'Passed' | 'Failed' | 'FailedToRun' | 'InProgress';

/**
 * Defines values for MaxSizeUnit.
 * Possible values include: 'Megabytes', 'Gigabytes', 'Terabytes', 'Petabytes'
 * @readonly
 * @enum {string}
 */
export type MaxSizeUnit = 'Megabytes' | 'Gigabytes' | 'Terabytes' | 'Petabytes';

/**
 * Defines values for LogSizeUnit.
 * Possible values include: 'Megabytes', 'Gigabytes', 'Terabytes', 'Petabytes', 'Percent'
 * @readonly
 * @enum {string}
 */
export type LogSizeUnit = 'Megabytes' | 'Gigabytes' | 'Terabytes' | 'Petabytes' | 'Percent';

/**
 * Defines values for CapabilityStatus.
 * Possible values include: 'Visible', 'Available', 'Default', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type CapabilityStatus = 'Visible' | 'Available' | 'Default' | 'Disabled';

/**
 * Defines values for PerformanceLevelUnit.
 * Possible values include: 'DTU', 'VCores'
 * @readonly
 * @enum {string}
 */
export type PerformanceLevelUnit = 'DTU' | 'VCores';

/**
 * Defines values for CreateMode.
 * Possible values include: 'Default', 'Copy', 'Secondary', 'PointInTimeRestore', 'Restore',
 * 'Recovery', 'RestoreExternalBackup', 'RestoreExternalBackupSecondary',
 * 'RestoreLongTermRetentionBackup', 'OnlineSecondary'
 * @readonly
 * @enum {string}
 */
export type CreateMode = 'Default' | 'Copy' | 'Secondary' | 'PointInTimeRestore' | 'Restore' | 'Recovery' | 'RestoreExternalBackup' | 'RestoreExternalBackupSecondary' | 'RestoreLongTermRetentionBackup' | 'OnlineSecondary';

/**
 * Defines values for SampleName.
 * Possible values include: 'AdventureWorksLT', 'WideWorldImportersStd', 'WideWorldImportersFull'
 * @readonly
 * @enum {string}
 */
export type SampleName = 'AdventureWorksLT' | 'WideWorldImportersStd' | 'WideWorldImportersFull';

/**
 * Defines values for DatabaseStatus.
 * Possible values include: 'Online', 'Restoring', 'RecoveryPending', 'Recovering', 'Suspect',
 * 'Offline', 'Standby', 'Shutdown', 'EmergencyMode', 'AutoClosed', 'Copying', 'Creating',
 * 'Inaccessible', 'OfflineSecondary', 'Pausing', 'Paused', 'Resuming', 'Scaling',
 * 'OfflineChangingDwPerformanceTiers', 'OnlineChangingDwPerformanceTiers', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type DatabaseStatus = 'Online' | 'Restoring' | 'RecoveryPending' | 'Recovering' | 'Suspect' | 'Offline' | 'Standby' | 'Shutdown' | 'EmergencyMode' | 'AutoClosed' | 'Copying' | 'Creating' | 'Inaccessible' | 'OfflineSecondary' | 'Pausing' | 'Paused' | 'Resuming' | 'Scaling' | 'OfflineChangingDwPerformanceTiers' | 'OnlineChangingDwPerformanceTiers' | 'Disabled';

/**
 * Defines values for CatalogCollationType.
 * Possible values include: 'DATABASE_DEFAULT', 'SQL_Latin1_General_CP1_CI_AS'
 * @readonly
 * @enum {string}
 */
export type CatalogCollationType = 'DATABASE_DEFAULT' | 'SQL_Latin1_General_CP1_CI_AS';

/**
 * Defines values for DatabaseLicenseType.
 * Possible values include: 'LicenseIncluded', 'BasePrice'
 * @readonly
 * @enum {string}
 */
export type DatabaseLicenseType = 'LicenseIncluded' | 'BasePrice';

/**
 * Defines values for DatabaseReadScale.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type DatabaseReadScale = 'Enabled' | 'Disabled';

/**
 * Defines values for ElasticPoolState.
 * Possible values include: 'Creating', 'Ready', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type ElasticPoolState = 'Creating' | 'Ready' | 'Disabled';

/**
 * Defines values for ElasticPoolLicenseType.
 * Possible values include: 'LicenseIncluded', 'BasePrice'
 * @readonly
 * @enum {string}
 */
export type ElasticPoolLicenseType = 'LicenseIncluded' | 'BasePrice';

/**
 * Defines values for ReadWriteEndpointFailoverPolicy.
 * Possible values include: 'Manual', 'Automatic'
 * @readonly
 * @enum {string}
 */
export type ReadWriteEndpointFailoverPolicy = 'Manual' | 'Automatic';

/**
 * Defines values for ReadOnlyEndpointFailoverPolicy.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export type ReadOnlyEndpointFailoverPolicy = 'Disabled' | 'Enabled';

/**
 * Defines values for InstanceFailoverGroupReplicationRole.
 * Possible values include: 'Primary', 'Secondary'
 * @readonly
 * @enum {string}
 */
export type InstanceFailoverGroupReplicationRole = 'Primary' | 'Secondary';

/**
 * Defines values for ServerKeyType.
 * Possible values include: 'ServiceManaged', 'AzureKeyVault'
 * @readonly
 * @enum {string}
 */
export type ServerKeyType = 'ServiceManaged' | 'AzureKeyVault';

/**
 * Defines values for VulnerabilityAssessmentPolicyBaselineName.
 * Possible values include: 'master', 'default'
 * @readonly
 * @enum {string}
 */
export type VulnerabilityAssessmentPolicyBaselineName = 'master' | 'default';

/**
 * Defines values for CapabilityGroup.
 * Possible values include: 'supportedEditions', 'supportedElasticPoolEditions',
 * 'supportedManagedInstanceVersions'
 * @readonly
 * @enum {string}
 */
export type CapabilityGroup = 'supportedEditions' | 'supportedElasticPoolEditions' | 'supportedManagedInstanceVersions';

/**
 * Contains response data for the listByDatabase operation.
 */
export type DatabaseOperationsListByDatabaseResponse = DatabaseOperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseOperationListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type DatabaseOperationsListByDatabaseNextResponse = DatabaseOperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseOperationListResult;
    };
};

/**
 * Contains response data for the listByElasticPool operation.
 */
export type ElasticPoolOperationsListByElasticPoolResponse = ElasticPoolOperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPoolOperationListResult;
    };
};

/**
 * Contains response data for the listByElasticPoolNext operation.
 */
export type ElasticPoolOperationsListByElasticPoolNextResponse = ElasticPoolOperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPoolOperationListResult;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type DatabaseVulnerabilityAssessmentScansListByDatabaseResponse = VulnerabilityAssessmentScanRecordListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecordListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseVulnerabilityAssessmentScansGetResponse = VulnerabilityAssessmentScanRecord & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecord;
    };
};

/**
 * Contains response data for the exportMethod operation.
 */
export type DatabaseVulnerabilityAssessmentScansExportMethodResponse = DatabaseVulnerabilityAssessmentScansExport & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentScansExport;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type DatabaseVulnerabilityAssessmentScansListByDatabaseNextResponse = VulnerabilityAssessmentScanRecordListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecordListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentRuleBaselinesGetResponse = DatabaseVulnerabilityAssessmentRuleBaseline & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentRuleBaseline;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse = DatabaseVulnerabilityAssessmentRuleBaseline & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentRuleBaseline;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseResponse = VulnerabilityAssessmentScanRecordListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecordListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentScansGetResponse = VulnerabilityAssessmentScanRecord & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecord;
    };
};

/**
 * Contains response data for the exportMethod operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentScansExportMethodResponse = DatabaseVulnerabilityAssessmentScansExport & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentScansExport;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseNextResponse = VulnerabilityAssessmentScanRecordListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecordListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentsGetResponse = DatabaseVulnerabilityAssessment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessment;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentsCreateOrUpdateResponse = DatabaseVulnerabilityAssessment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessment;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentsListByDatabaseResponse = DatabaseVulnerabilityAssessmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentsListByDatabaseNextResponse = DatabaseVulnerabilityAssessmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentListResult;
    };
};

/**
 * Contains response data for the listByLocation operation.
 */
export type CapabilitiesListByLocationResponse = LocationCapabilities & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LocationCapabilities;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type DatabasesListByServerResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabasesGetResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabasesCreateOrUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DatabasesUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the listByElasticPool operation.
 */
export type DatabasesListByElasticPoolResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the pause operation.
 */
export type DatabasesPauseResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the resume operation.
 */
export type DatabasesResumeResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DatabasesBeginCreateOrUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type DatabasesBeginUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the beginPause operation.
 */
export type DatabasesBeginPauseResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the beginResume operation.
 */
export type DatabasesBeginResumeResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type DatabasesListByServerNextResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the listByElasticPoolNext operation.
 */
export type DatabasesListByElasticPoolNextResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ElasticPoolsListByServerResponse = ElasticPoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPoolListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ElasticPoolsGetResponse = ElasticPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPool;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ElasticPoolsCreateOrUpdateResponse = ElasticPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPool;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ElasticPoolsUpdateResponse = ElasticPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPool;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ElasticPoolsBeginCreateOrUpdateResponse = ElasticPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPool;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ElasticPoolsBeginUpdateResponse = ElasticPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPool;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type ElasticPoolsListByServerNextResponse = ElasticPoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPoolListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type InstanceFailoverGroupsGetResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type InstanceFailoverGroupsCreateOrUpdateResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the listByLocation operation.
 */
export type InstanceFailoverGroupsListByLocationResponse = InstanceFailoverGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroupListResult;
    };
};

/**
 * Contains response data for the failover operation.
 */
export type InstanceFailoverGroupsFailoverResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the forceFailoverAllowDataLoss operation.
 */
export type InstanceFailoverGroupsForceFailoverAllowDataLossResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type InstanceFailoverGroupsBeginCreateOrUpdateResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the beginFailover operation.
 */
export type InstanceFailoverGroupsBeginFailoverResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the beginForceFailoverAllowDataLoss operation.
 */
export type InstanceFailoverGroupsBeginForceFailoverAllowDataLossResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the listByLocationNext operation.
 */
export type InstanceFailoverGroupsListByLocationNextResponse = InstanceFailoverGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroupListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BackupShortTermRetentionPoliciesGetResponse = BackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type BackupShortTermRetentionPoliciesCreateOrUpdateResponse = BackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the update operation.
 */
export type BackupShortTermRetentionPoliciesUpdateResponse = BackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type BackupShortTermRetentionPoliciesListByDatabaseResponse = BackupShortTermRetentionPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicyListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type BackupShortTermRetentionPoliciesBeginCreateOrUpdateResponse = BackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type BackupShortTermRetentionPoliciesBeginUpdateResponse = BackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type BackupShortTermRetentionPoliciesListByDatabaseNextResponse = BackupShortTermRetentionPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicyListResult;
    };
};

/**
 * Contains response data for the listByInstance operation.
 */
export type ManagedInstanceKeysListByInstanceResponse = ManagedInstanceKeyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceKeyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedInstanceKeysGetResponse = ManagedInstanceKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceKey;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedInstanceKeysCreateOrUpdateResponse = ManagedInstanceKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceKey;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedInstanceKeysBeginCreateOrUpdateResponse = ManagedInstanceKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceKey;
    };
};

/**
 * Contains response data for the listByInstanceNext operation.
 */
export type ManagedInstanceKeysListByInstanceNextResponse = ManagedInstanceKeyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceKeyListResult;
    };
};

/**
 * Contains response data for the listByInstance operation.
 */
export type ManagedInstanceEncryptionProtectorsListByInstanceResponse = ManagedInstanceEncryptionProtectorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceEncryptionProtectorListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedInstanceEncryptionProtectorsGetResponse = ManagedInstanceEncryptionProtector & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceEncryptionProtector;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedInstanceEncryptionProtectorsCreateOrUpdateResponse = ManagedInstanceEncryptionProtector & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceEncryptionProtector;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedInstanceEncryptionProtectorsBeginCreateOrUpdateResponse = ManagedInstanceEncryptionProtector & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceEncryptionProtector;
    };
};

/**
 * Contains response data for the listByInstanceNext operation.
 */
export type ManagedInstanceEncryptionProtectorsListByInstanceNextResponse = ManagedInstanceEncryptionProtectorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceEncryptionProtectorListResult;
    };
};

/**
 * Contains response data for the listByInstance operation.
 */
export type RecoverableManagedDatabasesListByInstanceResponse = RecoverableManagedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoverableManagedDatabaseListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RecoverableManagedDatabasesGetResponse = RecoverableManagedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoverableManagedDatabase;
    };
};

/**
 * Contains response data for the listByInstanceNext operation.
 */
export type RecoverableManagedDatabasesListByInstanceNextResponse = RecoverableManagedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoverableManagedDatabaseListResult;
    };
};
