/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * ARM resource.
 */
export interface Resource extends BaseResource {
  /**
   * Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * ARM proxy resource.
 */
export interface ProxyResource extends Resource {
}

/**
 * An extended database blob auditing policy.
 */
export interface ExtendedDatabaseBlobAuditingPolicy extends ProxyResource {
  /**
   * Specifies condition of where clause when creating an audit.
   */
  predicateExpression?: string;
  /**
   * Specifies the state of the policy. If state is Enabled, storageEndpoint or
   * isAzureMonitorTargetEnabled are required. Possible values include: 'Enabled', 'Disabled'
   */
  state: BlobAuditingPolicyState;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state
   * is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.
   */
  storageEndpoint?: string;
  /**
   * Specifies the identifier key of the auditing storage account.
   * If state is Enabled and storageEndpoint is specified, not specifying the
   * storageAccountAccessKey will use SQL server system-assigned managed identity to access the
   * storage.
   * Prerequisites for using managed identity authentication:
   * 1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).
   * 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data
   * Contributor' RBAC role to the server identity.
   * For more information, see [Auditing to storage using Managed Identity
   * authentication](https://go.microsoft.com/fwlink/?linkid=2114355)
   */
  storageAccountAccessKey?: string;
  /**
   * Specifies the number of days to keep in the audit logs in the storage account.
   */
  retentionDays?: number;
  /**
   * Specifies the Actions-Groups and Actions to audit.
   *
   * The recommended set of action groups to use is the following combination - this will audit all
   * the queries and stored procedures executed against the database, as well as successful and
   * failed logins:
   *
   * BATCH_COMPLETED_GROUP,
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
   * FAILED_DATABASE_AUTHENTICATION_GROUP.
   *
   * This above combination is also the set that is configured by default when enabling auditing
   * from the Azure portal.
   *
   * The supported action groups to audit are (note: choose only specific groups that cover your
   * auditing needs. Using unnecessary groups could lead to very large quantities of audit
   * records):
   *
   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
   * BACKUP_RESTORE_GROUP
   * DATABASE_LOGOUT_GROUP
   * DATABASE_OBJECT_CHANGE_GROUP
   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
   * DATABASE_OPERATION_GROUP
   * DATABASE_PERMISSION_CHANGE_GROUP
   * DATABASE_PRINCIPAL_CHANGE_GROUP
   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
   * DATABASE_ROLE_MEMBER_CHANGE_GROUP
   * FAILED_DATABASE_AUTHENTICATION_GROUP
   * SCHEMA_OBJECT_ACCESS_GROUP
   * SCHEMA_OBJECT_CHANGE_GROUP
   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
   * USER_CHANGE_PASSWORD_GROUP
   * BATCH_STARTED_GROUP
   * BATCH_COMPLETED_GROUP
   *
   * These are groups that cover all sql statements and stored procedures executed against the
   * database, and should not be used in combination with other groups as this will result in
   * duplicate audit logs.
   *
   * For more information, see [Database-Level Audit Action
   * Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
   *
   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot
   * be specified for Server auditing policy). The supported actions to audit are:
   * SELECT
   * UPDATE
   * INSERT
   * DELETE
   * EXECUTE
   * RECEIVE
   * REFERENCES
   *
   * The general form for defining an action to be audited is:
   * {action} ON {object} BY {principal}
   *
   * Note that <object> in the above format can refer to an object like a table, view, or stored
   * procedure, or an entire database or schema. For the latter cases, the forms
   * DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
   *
   * For example:
   * SELECT on dbo.myTable by public
   * SELECT on DATABASE::myDatabase by public
   * SELECT on SCHEMA::mySchema by public
   *
   * For more information, see [Database-Level Audit
   * Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
   */
  auditActionsAndGroups?: string[];
  /**
   * Specifies the blob storage subscription Id.
   */
  storageAccountSubscriptionId?: string;
  /**
   * Specifies whether storageAccountAccessKey value is the storage's secondary key.
   */
  isStorageSecondaryKeyInUse?: boolean;
  /**
   * Specifies whether audit events are sent to Azure Monitor.
   * In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and
   * 'isAzureMonitorTargetEnabled' as true.
   *
   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents'
   * diagnostic logs category on the database should be also created.
   * Note that for server level audit you should use the 'master' database as {databaseName}.
   *
   * Diagnostic Settings URI format:
   * PUT
   * https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
   *
   * For more information, see [Diagnostic Settings REST
   * API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   */
  isAzureMonitorTargetEnabled?: boolean;
  /**
   * Specifies the amount of time in milliseconds that can elapse before audit actions are forced
   * to be processed.
   * The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.
   */
  queueDelayMs?: number;
}

/**
 * An extended server blob auditing policy.
 */
export interface ExtendedServerBlobAuditingPolicy extends ProxyResource {
  /**
   * Specifies condition of where clause when creating an audit.
   */
  predicateExpression?: string;
  /**
   * Specifies the state of the policy. If state is Enabled, storageEndpoint or
   * isAzureMonitorTargetEnabled are required. Possible values include: 'Enabled', 'Disabled'
   */
  state: BlobAuditingPolicyState;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state
   * is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.
   */
  storageEndpoint?: string;
  /**
   * Specifies the identifier key of the auditing storage account.
   * If state is Enabled and storageEndpoint is specified, not specifying the
   * storageAccountAccessKey will use SQL server system-assigned managed identity to access the
   * storage.
   * Prerequisites for using managed identity authentication:
   * 1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).
   * 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data
   * Contributor' RBAC role to the server identity.
   * For more information, see [Auditing to storage using Managed Identity
   * authentication](https://go.microsoft.com/fwlink/?linkid=2114355)
   */
  storageAccountAccessKey?: string;
  /**
   * Specifies the number of days to keep in the audit logs in the storage account.
   */
  retentionDays?: number;
  /**
   * Specifies the Actions-Groups and Actions to audit.
   *
   * The recommended set of action groups to use is the following combination - this will audit all
   * the queries and stored procedures executed against the database, as well as successful and
   * failed logins:
   *
   * BATCH_COMPLETED_GROUP,
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
   * FAILED_DATABASE_AUTHENTICATION_GROUP.
   *
   * This above combination is also the set that is configured by default when enabling auditing
   * from the Azure portal.
   *
   * The supported action groups to audit are (note: choose only specific groups that cover your
   * auditing needs. Using unnecessary groups could lead to very large quantities of audit
   * records):
   *
   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
   * BACKUP_RESTORE_GROUP
   * DATABASE_LOGOUT_GROUP
   * DATABASE_OBJECT_CHANGE_GROUP
   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
   * DATABASE_OPERATION_GROUP
   * DATABASE_PERMISSION_CHANGE_GROUP
   * DATABASE_PRINCIPAL_CHANGE_GROUP
   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
   * DATABASE_ROLE_MEMBER_CHANGE_GROUP
   * FAILED_DATABASE_AUTHENTICATION_GROUP
   * SCHEMA_OBJECT_ACCESS_GROUP
   * SCHEMA_OBJECT_CHANGE_GROUP
   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
   * USER_CHANGE_PASSWORD_GROUP
   * BATCH_STARTED_GROUP
   * BATCH_COMPLETED_GROUP
   *
   * These are groups that cover all sql statements and stored procedures executed against the
   * database, and should not be used in combination with other groups as this will result in
   * duplicate audit logs.
   *
   * For more information, see [Database-Level Audit Action
   * Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
   *
   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot
   * be specified for Server auditing policy). The supported actions to audit are:
   * SELECT
   * UPDATE
   * INSERT
   * DELETE
   * EXECUTE
   * RECEIVE
   * REFERENCES
   *
   * The general form for defining an action to be audited is:
   * {action} ON {object} BY {principal}
   *
   * Note that <object> in the above format can refer to an object like a table, view, or stored
   * procedure, or an entire database or schema. For the latter cases, the forms
   * DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
   *
   * For example:
   * SELECT on dbo.myTable by public
   * SELECT on DATABASE::myDatabase by public
   * SELECT on SCHEMA::mySchema by public
   *
   * For more information, see [Database-Level Audit
   * Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
   */
  auditActionsAndGroups?: string[];
  /**
   * Specifies the blob storage subscription Id.
   */
  storageAccountSubscriptionId?: string;
  /**
   * Specifies whether storageAccountAccessKey value is the storage's secondary key.
   */
  isStorageSecondaryKeyInUse?: boolean;
  /**
   * Specifies whether audit events are sent to Azure Monitor.
   * In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and
   * 'isAzureMonitorTargetEnabled' as true.
   *
   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents'
   * diagnostic logs category on the database should be also created.
   * Note that for server level audit you should use the 'master' database as {databaseName}.
   *
   * Diagnostic Settings URI format:
   * PUT
   * https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
   *
   * For more information, see [Diagnostic Settings REST
   * API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   */
  isAzureMonitorTargetEnabled?: boolean;
  /**
   * Specifies the amount of time in milliseconds that can elapse before audit actions are forced
   * to be processed.
   * The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.
   */
  queueDelayMs?: number;
}

/**
 * A server blob auditing policy.
 */
export interface ServerBlobAuditingPolicy extends ProxyResource {
  /**
   * Specifies the state of the policy. If state is Enabled, storageEndpoint or
   * isAzureMonitorTargetEnabled are required. Possible values include: 'Enabled', 'Disabled'
   */
  state: BlobAuditingPolicyState;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state
   * is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.
   */
  storageEndpoint?: string;
  /**
   * Specifies the identifier key of the auditing storage account.
   * If state is Enabled and storageEndpoint is specified, not specifying the
   * storageAccountAccessKey will use SQL server system-assigned managed identity to access the
   * storage.
   * Prerequisites for using managed identity authentication:
   * 1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).
   * 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data
   * Contributor' RBAC role to the server identity.
   * For more information, see [Auditing to storage using Managed Identity
   * authentication](https://go.microsoft.com/fwlink/?linkid=2114355)
   */
  storageAccountAccessKey?: string;
  /**
   * Specifies the number of days to keep in the audit logs in the storage account.
   */
  retentionDays?: number;
  /**
   * Specifies the Actions-Groups and Actions to audit.
   *
   * The recommended set of action groups to use is the following combination - this will audit all
   * the queries and stored procedures executed against the database, as well as successful and
   * failed logins:
   *
   * BATCH_COMPLETED_GROUP,
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
   * FAILED_DATABASE_AUTHENTICATION_GROUP.
   *
   * This above combination is also the set that is configured by default when enabling auditing
   * from the Azure portal.
   *
   * The supported action groups to audit are (note: choose only specific groups that cover your
   * auditing needs. Using unnecessary groups could lead to very large quantities of audit
   * records):
   *
   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
   * BACKUP_RESTORE_GROUP
   * DATABASE_LOGOUT_GROUP
   * DATABASE_OBJECT_CHANGE_GROUP
   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
   * DATABASE_OPERATION_GROUP
   * DATABASE_PERMISSION_CHANGE_GROUP
   * DATABASE_PRINCIPAL_CHANGE_GROUP
   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
   * DATABASE_ROLE_MEMBER_CHANGE_GROUP
   * FAILED_DATABASE_AUTHENTICATION_GROUP
   * SCHEMA_OBJECT_ACCESS_GROUP
   * SCHEMA_OBJECT_CHANGE_GROUP
   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
   * USER_CHANGE_PASSWORD_GROUP
   * BATCH_STARTED_GROUP
   * BATCH_COMPLETED_GROUP
   *
   * These are groups that cover all sql statements and stored procedures executed against the
   * database, and should not be used in combination with other groups as this will result in
   * duplicate audit logs.
   *
   * For more information, see [Database-Level Audit Action
   * Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
   *
   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot
   * be specified for Server auditing policy). The supported actions to audit are:
   * SELECT
   * UPDATE
   * INSERT
   * DELETE
   * EXECUTE
   * RECEIVE
   * REFERENCES
   *
   * The general form for defining an action to be audited is:
   * {action} ON {object} BY {principal}
   *
   * Note that <object> in the above format can refer to an object like a table, view, or stored
   * procedure, or an entire database or schema. For the latter cases, the forms
   * DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
   *
   * For example:
   * SELECT on dbo.myTable by public
   * SELECT on DATABASE::myDatabase by public
   * SELECT on SCHEMA::mySchema by public
   *
   * For more information, see [Database-Level Audit
   * Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
   */
  auditActionsAndGroups?: string[];
  /**
   * Specifies the blob storage subscription Id.
   */
  storageAccountSubscriptionId?: string;
  /**
   * Specifies whether storageAccountAccessKey value is the storage's secondary key.
   */
  isStorageSecondaryKeyInUse?: boolean;
  /**
   * Specifies whether audit events are sent to Azure Monitor.
   * In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and
   * 'isAzureMonitorTargetEnabled' as true.
   *
   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents'
   * diagnostic logs category on the database should be also created.
   * Note that for server level audit you should use the 'master' database as {databaseName}.
   *
   * Diagnostic Settings URI format:
   * PUT
   * https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
   *
   * For more information, see [Diagnostic Settings REST
   * API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   */
  isAzureMonitorTargetEnabled?: boolean;
  /**
   * Specifies the amount of time in milliseconds that can elapse before audit actions are forced
   * to be processed.
   * The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.
   */
  queueDelayMs?: number;
}

/**
 * A database blob auditing policy.
 */
export interface DatabaseBlobAuditingPolicy extends ProxyResource {
  /**
   * Resource kind.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Specifies the state of the policy. If state is Enabled, storageEndpoint or
   * isAzureMonitorTargetEnabled are required. Possible values include: 'Enabled', 'Disabled'
   */
  state: BlobAuditingPolicyState;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state
   * is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.
   */
  storageEndpoint?: string;
  /**
   * Specifies the identifier key of the auditing storage account.
   * If state is Enabled and storageEndpoint is specified, not specifying the
   * storageAccountAccessKey will use SQL server system-assigned managed identity to access the
   * storage.
   * Prerequisites for using managed identity authentication:
   * 1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).
   * 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data
   * Contributor' RBAC role to the server identity.
   * For more information, see [Auditing to storage using Managed Identity
   * authentication](https://go.microsoft.com/fwlink/?linkid=2114355)
   */
  storageAccountAccessKey?: string;
  /**
   * Specifies the number of days to keep in the audit logs in the storage account.
   */
  retentionDays?: number;
  /**
   * Specifies the Actions-Groups and Actions to audit.
   *
   * The recommended set of action groups to use is the following combination - this will audit all
   * the queries and stored procedures executed against the database, as well as successful and
   * failed logins:
   *
   * BATCH_COMPLETED_GROUP,
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
   * FAILED_DATABASE_AUTHENTICATION_GROUP.
   *
   * This above combination is also the set that is configured by default when enabling auditing
   * from the Azure portal.
   *
   * The supported action groups to audit are (note: choose only specific groups that cover your
   * auditing needs. Using unnecessary groups could lead to very large quantities of audit
   * records):
   *
   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
   * BACKUP_RESTORE_GROUP
   * DATABASE_LOGOUT_GROUP
   * DATABASE_OBJECT_CHANGE_GROUP
   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
   * DATABASE_OPERATION_GROUP
   * DATABASE_PERMISSION_CHANGE_GROUP
   * DATABASE_PRINCIPAL_CHANGE_GROUP
   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
   * DATABASE_ROLE_MEMBER_CHANGE_GROUP
   * FAILED_DATABASE_AUTHENTICATION_GROUP
   * SCHEMA_OBJECT_ACCESS_GROUP
   * SCHEMA_OBJECT_CHANGE_GROUP
   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
   * USER_CHANGE_PASSWORD_GROUP
   * BATCH_STARTED_GROUP
   * BATCH_COMPLETED_GROUP
   *
   * These are groups that cover all sql statements and stored procedures executed against the
   * database, and should not be used in combination with other groups as this will result in
   * duplicate audit logs.
   *
   * For more information, see [Database-Level Audit Action
   * Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
   *
   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot
   * be specified for Server auditing policy). The supported actions to audit are:
   * SELECT
   * UPDATE
   * INSERT
   * DELETE
   * EXECUTE
   * RECEIVE
   * REFERENCES
   *
   * The general form for defining an action to be audited is:
   * {action} ON {object} BY {principal}
   *
   * Note that <object> in the above format can refer to an object like a table, view, or stored
   * procedure, or an entire database or schema. For the latter cases, the forms
   * DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
   *
   * For example:
   * SELECT on dbo.myTable by public
   * SELECT on DATABASE::myDatabase by public
   * SELECT on SCHEMA::mySchema by public
   *
   * For more information, see [Database-Level Audit
   * Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
   */
  auditActionsAndGroups?: string[];
  /**
   * Specifies the blob storage subscription Id.
   */
  storageAccountSubscriptionId?: string;
  /**
   * Specifies whether storageAccountAccessKey value is the storage's secondary key.
   */
  isStorageSecondaryKeyInUse?: boolean;
  /**
   * Specifies whether audit events are sent to Azure Monitor.
   * In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and
   * 'isAzureMonitorTargetEnabled' as true.
   *
   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents'
   * diagnostic logs category on the database should be also created.
   * Note that for server level audit you should use the 'master' database as {databaseName}.
   *
   * Diagnostic Settings URI format:
   * PUT
   * https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
   *
   * For more information, see [Diagnostic Settings REST
   * API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   */
  isAzureMonitorTargetEnabled?: boolean;
  /**
   * Specifies the amount of time in milliseconds that can elapse before audit actions are forced
   * to be processed.
   * The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.
   */
  queueDelayMs?: number;
}

/**
 * ARM tracked top level resource.
 */
export interface TrackedResource extends Resource {
  /**
   * Resource location.
   */
  location: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A database operation.
 */
export interface DatabaseOperation extends ProxyResource {
  /**
   * The name of the database the operation is being performed on.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseName?: string;
  /**
   * The name of operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * The friendly name of operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operationFriendlyName?: string;
  /**
   * The percentage of the operation completed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly percentComplete?: number;
  /**
   * The name of the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serverName?: string;
  /**
   * The operation start time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The operation state. Possible values include: 'Pending', 'InProgress', 'Succeeded', 'Failed',
   * 'CancelInProgress', 'Cancelled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: ManagementOperationState;
  /**
   * The operation error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorCode?: number;
  /**
   * The operation error description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorDescription?: string;
  /**
   * The operation error severity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorSeverity?: number;
  /**
   * Whether or not the error is a user error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isUserError?: boolean;
  /**
   * The estimated completion time of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly estimatedCompletionTime?: Date;
  /**
   * The operation description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Whether the operation can be cancelled.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isCancellable?: boolean;
}

/**
 * An ARM Resource SKU.
 */
export interface Sku {
  /**
   * The name of the SKU, typically, a letter + Number code, e.g. P3.
   */
  name: string;
  /**
   * The tier or edition of the particular SKU, e.g. Basic, Premium.
   */
  tier?: string;
  /**
   * Size of the particular SKU
   */
  size?: string;
  /**
   * If the service has different generations of hardware, for the same SKU, then that can be
   * captured here.
   */
  family?: string;
  /**
   * Capacity of the particular SKU.
   */
  capacity?: number;
}

/**
 * A database resource.
 */
export interface Database extends TrackedResource {
  /**
   * The name and tier of the SKU.
   */
  sku?: Sku;
  /**
   * Kind of database. This is metadata used for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Specifies the mode of database creation.
   *
   * Default: regular database creation.
   *
   * Copy: creates a database as a copy of an existing database. sourceDatabaseId must be specified
   * as the resource ID of the source database.
   *
   * Secondary: creates a database as a secondary replica of an existing database. sourceDatabaseId
   * must be specified as the resource ID of the existing primary database.
   *
   * PointInTimeRestore: Creates a database by restoring a point in time backup of an existing
   * database. sourceDatabaseId must be specified as the resource ID of the existing database, and
   * restorePointInTime must be specified.
   *
   * Recovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be
   * specified as the recoverable database resource ID to restore.
   *
   * Restore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must
   * be specified. If sourceDatabaseId is the database's original resource ID, then
   * sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the
   * restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored.
   * restorePointInTime may also be specified to restore from an earlier point in time.
   *
   * RestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention
   * vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point
   * resource ID.
   *
   * Copy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse
   * edition. Possible values include: 'Default', 'Copy', 'Secondary', 'OnlineSecondary',
   * 'PointInTimeRestore', 'Restore', 'Recovery', 'RestoreExternalBackup',
   * 'RestoreExternalBackupSecondary', 'RestoreLongTermRetentionBackup'
   */
  createMode?: CreateMode;
  /**
   * The collation of the database.
   */
  collation?: string;
  /**
   * The max size of the database expressed in bytes.
   */
  maxSizeBytes?: number;
  /**
   * The name of the sample schema to apply when creating this database. Possible values include:
   * 'AdventureWorksLT', 'WideWorldImportersStd', 'WideWorldImportersFull'
   */
  sampleName?: SampleName;
  /**
   * The resource identifier of the elastic pool containing this database.
   */
  elasticPoolId?: string;
  /**
   * The resource identifier of the source database associated with create operation of this
   * database.
   */
  sourceDatabaseId?: string;
  /**
   * The status of the database. Possible values include: 'Online', 'Restoring', 'RecoveryPending',
   * 'Recovering', 'Suspect', 'Offline', 'Standby', 'Shutdown', 'EmergencyMode', 'AutoClosed',
   * 'Copying', 'Creating', 'Inaccessible', 'OfflineSecondary', 'Pausing', 'Paused', 'Resuming',
   * 'Scaling'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: DatabaseStatus;
  /**
   * The ID of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseId?: string;
  /**
   * The creation date of the database (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
  /**
   * The current service level objective name of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentServiceObjectiveName?: string;
  /**
   * The default secondary region for this database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultSecondaryLocation?: string;
  /**
   * Failover Group resource identifier that this database belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly failoverGroupId?: string;
  /**
   * Specifies the point in time (ISO8601 format) of the source database that will be restored to
   * create the new database.
   */
  restorePointInTime?: Date;
  /**
   * Specifies the time that the database was deleted.
   */
  sourceDatabaseDeletionDate?: Date;
  /**
   * The resource identifier of the recovery point associated with create operation of this
   * database.
   */
  recoveryServicesRecoveryPointId?: string;
  /**
   * The resource identifier of the long term retention backup associated with create operation of
   * this database.
   */
  longTermRetentionBackupResourceId?: string;
  /**
   * The resource identifier of the recoverable database associated with create operation of this
   * database.
   */
  recoverableDatabaseId?: string;
  /**
   * The resource identifier of the restorable dropped database associated with create operation of
   * this database.
   */
  restorableDroppedDatabaseId?: string;
  /**
   * Collation of the metadata catalog. Possible values include: 'DATABASE_DEFAULT',
   * 'SQL_Latin1_General_CP1_CI_AS'
   */
  catalogCollation?: CatalogCollationType;
  /**
   * Whether or not this database is zone redundant, which means the replicas of this database will
   * be spread across multiple availability zones.
   */
  zoneRedundant?: boolean;
}

/**
 * A database resource.
 */
export interface DatabaseUpdate {
  /**
   * The name and tier of the SKU.
   */
  sku?: Sku;
  /**
   * Specifies the mode of database creation.
   *
   * Default: regular database creation.
   *
   * Copy: creates a database as a copy of an existing database. sourceDatabaseId must be specified
   * as the resource ID of the source database.
   *
   * Secondary: creates a database as a secondary replica of an existing database. sourceDatabaseId
   * must be specified as the resource ID of the existing primary database.
   *
   * PointInTimeRestore: Creates a database by restoring a point in time backup of an existing
   * database. sourceDatabaseId must be specified as the resource ID of the existing database, and
   * restorePointInTime must be specified.
   *
   * Recovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be
   * specified as the recoverable database resource ID to restore.
   *
   * Restore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must
   * be specified. If sourceDatabaseId is the database's original resource ID, then
   * sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the
   * restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored.
   * restorePointInTime may also be specified to restore from an earlier point in time.
   *
   * RestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention
   * vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point
   * resource ID.
   *
   * Copy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse
   * edition. Possible values include: 'Default', 'Copy', 'Secondary', 'OnlineSecondary',
   * 'PointInTimeRestore', 'Restore', 'Recovery', 'RestoreExternalBackup',
   * 'RestoreExternalBackupSecondary', 'RestoreLongTermRetentionBackup'
   */
  createMode?: CreateMode;
  /**
   * The collation of the database.
   */
  collation?: string;
  /**
   * The max size of the database expressed in bytes.
   */
  maxSizeBytes?: number;
  /**
   * The name of the sample schema to apply when creating this database. Possible values include:
   * 'AdventureWorksLT', 'WideWorldImportersStd', 'WideWorldImportersFull'
   */
  sampleName?: SampleName;
  /**
   * The resource identifier of the elastic pool containing this database.
   */
  elasticPoolId?: string;
  /**
   * The resource identifier of the source database associated with create operation of this
   * database.
   */
  sourceDatabaseId?: string;
  /**
   * The status of the database. Possible values include: 'Online', 'Restoring', 'RecoveryPending',
   * 'Recovering', 'Suspect', 'Offline', 'Standby', 'Shutdown', 'EmergencyMode', 'AutoClosed',
   * 'Copying', 'Creating', 'Inaccessible', 'OfflineSecondary', 'Pausing', 'Paused', 'Resuming',
   * 'Scaling'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: DatabaseStatus;
  /**
   * The ID of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseId?: string;
  /**
   * The creation date of the database (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
  /**
   * The current service level objective name of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentServiceObjectiveName?: string;
  /**
   * The default secondary region for this database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultSecondaryLocation?: string;
  /**
   * Failover Group resource identifier that this database belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly failoverGroupId?: string;
  /**
   * Specifies the point in time (ISO8601 format) of the source database that will be restored to
   * create the new database.
   */
  restorePointInTime?: Date;
  /**
   * Specifies the time that the database was deleted.
   */
  sourceDatabaseDeletionDate?: Date;
  /**
   * The resource identifier of the recovery point associated with create operation of this
   * database.
   */
  recoveryServicesRecoveryPointId?: string;
  /**
   * The resource identifier of the long term retention backup associated with create operation of
   * this database.
   */
  longTermRetentionBackupResourceId?: string;
  /**
   * The resource identifier of the recoverable database associated with create operation of this
   * database.
   */
  recoverableDatabaseId?: string;
  /**
   * The resource identifier of the restorable dropped database associated with create operation of
   * this database.
   */
  restorableDroppedDatabaseId?: string;
  /**
   * Collation of the metadata catalog. Possible values include: 'DATABASE_DEFAULT',
   * 'SQL_Latin1_General_CP1_CI_AS'
   */
  catalogCollation?: CatalogCollationType;
  /**
   * Whether or not this database is zone redundant, which means the replicas of this database will
   * be spread across multiple availability zones.
   */
  zoneRedundant?: boolean;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Contains the information necessary to perform import/export operation.
 */
export interface ImportExportDatabaseDefinition {
  /**
   * Name of the import database.
   */
  databaseName?: string;
  /**
   * Edition of the import database.
   */
  edition?: string;
  /**
   * Service level objective name of the import database.
   */
  serviceObjectiveName?: string;
  /**
   * Max size in bytes for the import database.
   */
  maxSizeBytes?: string;
  /**
   * Storage key type.
   */
  storageKeyType: string;
  /**
   * Storage key.
   */
  storageKey: string;
  /**
   * Storage Uri.
   */
  storageUri: string;
  /**
   * Administrator login name.
   */
  administratorLogin: string;
  /**
   * Administrator login password.
   */
  administratorLoginPassword: string;
  /**
   * Authentication type.
   */
  authenticationType?: string;
}

/**
 * An ImportExport operation result resource.
 */
export interface ImportExportOperationResult extends ProxyResource {
  /**
   * Request Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestId?: string;
  /**
   * Request type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestType?: string;
  /**
   * Queued time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly queuedTime?: string;
  /**
   * Last modified time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModifiedTime?: string;
  /**
   * Blob Uri.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly blobUri?: string;
  /**
   * Server name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serverName?: string;
  /**
   * Database name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseName?: string;
  /**
   * Operation status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * Error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorMessage?: string;
}

/**
 * Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result.
 */
export interface DatabaseVulnerabilityAssessmentRuleBaselineItem {
  /**
   * The rule baseline result
   */
  result: string[];
}

/**
 * A database vulnerability assessment rule baseline.
 */
export interface DatabaseVulnerabilityAssessmentRuleBaseline extends ProxyResource {
  /**
   * The rule baseline result
   */
  baselineResults: DatabaseVulnerabilityAssessmentRuleBaselineItem[];
}

/**
 * Properties of a Vulnerability Assessment recurring scans.
 */
export interface VulnerabilityAssessmentRecurringScansProperties {
  /**
   * Recurring scans state.
   */
  isEnabled?: boolean;
  /**
   * Specifies that the schedule scan notification will be is sent to the subscription
   * administrators. Default value: true.
   */
  emailSubscriptionAdmins?: boolean;
  /**
   * Specifies an array of e-mail addresses to which the scan notification is sent.
   */
  emails?: string[];
}

/**
 * A database vulnerability assessment.
 */
export interface DatabaseVulnerabilityAssessment extends ProxyResource {
  /**
   * A blob storage container path to hold the scan results (e.g.
   * https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level
   * vulnerability assessment policy doesn't set
   */
  storageContainerPath?: string;
  /**
   * A shared access signature (SAS Key) that has read and write access to the blob container
   * specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified,
   * StorageContainerSasKey is required.
   */
  storageContainerSasKey?: string;
  /**
   * Specifies the identifier key of the storage account for vulnerability assessment scan results.
   * If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.
   */
  storageAccountAccessKey?: string;
  /**
   * The recurring scans settings
   */
  recurringScans?: VulnerabilityAssessmentRecurringScansProperties;
}

/**
 * User activities of a data warehouse
 */
export interface DataWarehouseUserActivities extends ProxyResource {
  /**
   * Count of running and suspended queries.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly activeQueriesCount?: number;
}

/**
 * An Azure SQL job agent.
 */
export interface JobAgent extends TrackedResource {
  /**
   * The name and tier of the SKU.
   */
  sku?: Sku;
  /**
   * Resource ID of the database to store job metadata in.
   */
  databaseId: string;
  /**
   * The state of the job agent. Possible values include: 'Creating', 'Ready', 'Updating',
   * 'Deleting', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: JobAgentState;
}

/**
 * An update to an Azure SQL job agent.
 */
export interface JobAgentUpdate {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A stored credential that can be used by a job to connect to target databases.
 */
export interface JobCredential extends ProxyResource {
  /**
   * The credential user name.
   */
  username: string;
  /**
   * The credential password.
   */
  password: string;
}

/**
 * The target that a job execution is executed on.
 */
export interface JobExecutionTarget {
  /**
   * The type of the target. Possible values include: 'TargetGroup', 'SqlDatabase',
   * 'SqlElasticPool', 'SqlShardMap', 'SqlServer'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: JobTargetType;
  /**
   * The server name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serverName?: string;
  /**
   * The database name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseName?: string;
}

/**
 * An execution of a job
 */
export interface JobExecution extends ProxyResource {
  /**
   * The job version number.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly jobVersion?: number;
  /**
   * The job step name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly stepName?: string;
  /**
   * The job step id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly stepId?: number;
  /**
   * The unique identifier of the job execution.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly jobExecutionId?: string;
  /**
   * The detailed state of the job execution. Possible values include: 'Created', 'InProgress',
   * 'WaitingForChildJobExecutions', 'WaitingForRetry', 'Succeeded', 'SucceededWithSkipped',
   * 'Failed', 'TimedOut', 'Canceled', 'Skipped'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lifecycle?: JobExecutionLifecycle;
  /**
   * The ARM provisioning state of the job execution. Possible values include: 'Created',
   * 'InProgress', 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The time that the job execution was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createTime?: Date;
  /**
   * The time that the job execution started.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The time that the job execution completed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endTime?: Date;
  /**
   * Number of times the job execution has been attempted.
   */
  currentAttempts?: number;
  /**
   * Start time of the current attempt.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentAttemptStartTime?: Date;
  /**
   * The last status or error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastMessage?: string;
  /**
   * The target that this execution is executed on.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: JobExecutionTarget;
}

/**
 * Scheduling properties of a job.
 */
export interface JobSchedule {
  /**
   * Schedule start time. Default value: new Date('0001-01-01T00:00:00Z').
   */
  startTime?: Date;
  /**
   * Schedule end time. Default value: new Date('9999-12-31T11:59:59Z').
   */
  endTime?: Date;
  /**
   * Schedule interval type. Possible values include: 'Once', 'Recurring'. Default value: 'Once'.
   */
  type?: JobScheduleType;
  /**
   * Whether or not the schedule is enabled.
   */
  enabled?: boolean;
  /**
   * Value of the schedule's recurring interval, if the schedule type is recurring. ISO8601
   * duration format.
   */
  interval?: string;
}

/**
 * A job.
 */
export interface Job extends ProxyResource {
  /**
   * User-defined description of the job. Default value: ''.
   */
  description?: string;
  /**
   * The job version number.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: number;
  /**
   * Schedule properties of the job.
   */
  schedule?: JobSchedule;
}

/**
 * The action to be executed by a job step.
 */
export interface JobStepAction {
  /**
   * Type of action being executed by the job step. Possible values include: 'TSql'. Default value:
   * 'TSql'.
   */
  type?: JobStepActionType;
  /**
   * The source of the action to execute. Possible values include: 'Inline'. Default value:
   * 'Inline'.
   */
  source?: JobStepActionSource;
  /**
   * The action value, for example the text of the T-SQL script to execute.
   */
  value: string;
}

/**
 * The output configuration of a job step.
 */
export interface JobStepOutput {
  /**
   * The output destination type. Possible values include: 'SqlDatabase'. Default value:
   * 'SqlDatabase'.
   */
  type?: JobStepOutputType;
  /**
   * The output destination subscription id.
   */
  subscriptionId?: string;
  /**
   * The output destination resource group.
   */
  resourceGroupName?: string;
  /**
   * The output destination server name.
   */
  serverName: string;
  /**
   * The output destination database.
   */
  databaseName: string;
  /**
   * The output destination schema. Default value: 'dbo'.
   */
  schemaName?: string;
  /**
   * The output destination table.
   */
  tableName: string;
  /**
   * The resource ID of the credential to use to connect to the output destination.
   */
  credential: string;
}

/**
 * The execution options of a job step.
 */
export interface JobStepExecutionOptions {
  /**
   * Execution timeout for the job step. Default value: 43200.
   */
  timeoutSeconds?: number;
  /**
   * Maximum number of times the job step will be reattempted if the first attempt fails. Default
   * value: 10.
   */
  retryAttempts?: number;
  /**
   * Initial delay between retries for job step execution. Default value: 1.
   */
  initialRetryIntervalSeconds?: number;
  /**
   * The maximum amount of time to wait between retries for job step execution. Default value: 120.
   */
  maximumRetryIntervalSeconds?: number;
  /**
   * The backoff multiplier for the time between retries. Default value: 2.
   */
  retryIntervalBackoffMultiplier?: number;
}

/**
 * A job step.
 */
export interface JobStep extends ProxyResource {
  /**
   * The job step's index within the job. If not specified when creating the job step, it will be
   * created as the last step. If not specified when updating the job step, the step id is not
   * modified.
   */
  stepId?: number;
  /**
   * The resource ID of the target group that the job step will be executed on.
   */
  targetGroup: string;
  /**
   * The resource ID of the job credential that will be used to connect to the targets.
   */
  credential: string;
  /**
   * The action payload of the job step.
   */
  action: JobStepAction;
  /**
   * Output destination properties of the job step.
   */
  output?: JobStepOutput;
  /**
   * Execution options for the job step.
   */
  executionOptions?: JobStepExecutionOptions;
}

/**
 * A job target, for example a specific database or a container of databases that is evaluated
 * during job execution.
 */
export interface JobTarget {
  /**
   * Whether the target is included or excluded from the group. Possible values include: 'Include',
   * 'Exclude'. Default value: 'Include'.
   */
  membershipType?: JobTargetGroupMembershipType;
  /**
   * The target type. Possible values include: 'TargetGroup', 'SqlDatabase', 'SqlElasticPool',
   * 'SqlShardMap', 'SqlServer'
   */
  type: JobTargetType;
  /**
   * The target server name.
   */
  serverName?: string;
  /**
   * The target database name.
   */
  databaseName?: string;
  /**
   * The target elastic pool name.
   */
  elasticPoolName?: string;
  /**
   * The target shard map.
   */
  shardMapName?: string;
  /**
   * The resource ID of the credential that is used during job execution to connect to the target
   * and determine the list of databases inside the target.
   */
  refreshCredential?: string;
}

/**
 * A group of job targets.
 */
export interface JobTargetGroup extends ProxyResource {
  /**
   * Members of the target group.
   */
  members: JobTarget[];
}

/**
 * A job version.
 */
export interface JobVersion extends ProxyResource {
}

/**
 * A long term retention backup.
 */
export interface LongTermRetentionBackup extends ProxyResource {
  /**
   * The server name that the backup database belong to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serverName?: string;
  /**
   * The create time of the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serverCreateTime?: Date;
  /**
   * The name of the database the backup belong to
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseName?: string;
  /**
   * The delete time of the database
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseDeletionTime?: Date;
  /**
   * The time the backup was taken
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly backupTime?: Date;
  /**
   * The time the long term retention backup will expire.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly backupExpirationTime?: Date;
}

/**
 * A long term retention policy.
 */
export interface BackupLongTermRetentionPolicy extends ProxyResource {
  /**
   * The weekly retention policy for an LTR backup in an ISO 8601 format.
   */
  weeklyRetention?: string;
  /**
   * The monthly retention policy for an LTR backup in an ISO 8601 format.
   */
  monthlyRetention?: string;
  /**
   * The yearly retention policy for an LTR backup in an ISO 8601 format.
   */
  yearlyRetention?: string;
  /**
   * The week of year to take the yearly backup in an ISO 8601 format.
   */
  weekOfYear?: number;
}

/**
 * A short term retention policy.
 */
export interface ManagedBackupShortTermRetentionPolicy extends ProxyResource {
  /**
   * The backup retention period in days. This is how many days Point-in-Time Restore will be
   * supported.
   */
  retentionDays?: number;
}

/**
 * Contains the information necessary to perform a complete database restore operation.
 */
export interface CompleteDatabaseRestoreDefinition {
  /**
   * The last backup name to apply
   */
  lastBackupName: string;
}

/**
 * A managed database resource.
 */
export interface ManagedDatabase extends TrackedResource {
  /**
   * Collation of the managed database.
   */
  collation?: string;
  /**
   * Status of the database. Possible values include: 'Online', 'Offline', 'Shutdown', 'Creating',
   * 'Inaccessible', 'Restoring', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: ManagedDatabaseStatus;
  /**
   * Creation date of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
  /**
   * Earliest restore point in time for point in time restore.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly earliestRestorePoint?: Date;
  /**
   * Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point
   * in time (ISO8601 format) of the source database that will be restored to create the new
   * database.
   */
  restorePointInTime?: Date;
  /**
   * Geo paired region.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultSecondaryLocation?: string;
  /**
   * Collation of the metadata catalog. Possible values include: 'DATABASE_DEFAULT',
   * 'SQL_Latin1_General_CP1_CI_AS'
   */
  catalogCollation?: CatalogCollationType;
  /**
   * Managed database create mode. PointInTimeRestore: Create a database by restoring a point in
   * time backup of an existing database. SourceDatabaseName, SourceManagedInstanceName and
   * PointInTime must be specified. RestoreExternalBackup: Create a database by restoring from
   * external backup files. Collation, StorageContainerUri and StorageContainerSasToken must be
   * specified. Recovery: Creates a database by restoring a geo-replicated backup.
   * RecoverableDatabaseId must be specified as the recoverable database resource ID to restore.
   * Possible values include: 'Default', 'RestoreExternalBackup', 'PointInTimeRestore', 'Recovery',
   * 'RestoreLongTermRetentionBackup'
   */
  createMode?: ManagedDatabaseCreateMode;
  /**
   * Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the uri
   * of the storage container where backups for this restore are stored.
   */
  storageContainerUri?: string;
  /**
   * The resource identifier of the source database associated with create operation of this
   * database.
   */
  sourceDatabaseId?: string;
  /**
   * The restorable dropped database resource id to restore when creating this database.
   */
  restorableDroppedDatabaseId?: string;
  /**
   * Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the
   * storage container sas token.
   */
  storageContainerSasToken?: string;
  /**
   * Instance Failover Group resource identifier that this managed database belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly failoverGroupId?: string;
  /**
   * The resource identifier of the recoverable database associated with create operation of this
   * database.
   */
  recoverableDatabaseId?: string;
  /**
   * The name of the Long Term Retention backup to be used for restore of this managed database.
   */
  longTermRetentionBackupResourceId?: string;
}

/**
 * An managed database update.
 */
export interface ManagedDatabaseUpdate {
  /**
   * Collation of the managed database.
   */
  collation?: string;
  /**
   * Status of the database. Possible values include: 'Online', 'Offline', 'Shutdown', 'Creating',
   * 'Inaccessible', 'Restoring', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: ManagedDatabaseStatus;
  /**
   * Creation date of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
  /**
   * Earliest restore point in time for point in time restore.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly earliestRestorePoint?: Date;
  /**
   * Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point
   * in time (ISO8601 format) of the source database that will be restored to create the new
   * database.
   */
  restorePointInTime?: Date;
  /**
   * Geo paired region.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultSecondaryLocation?: string;
  /**
   * Collation of the metadata catalog. Possible values include: 'DATABASE_DEFAULT',
   * 'SQL_Latin1_General_CP1_CI_AS'
   */
  catalogCollation?: CatalogCollationType;
  /**
   * Managed database create mode. PointInTimeRestore: Create a database by restoring a point in
   * time backup of an existing database. SourceDatabaseName, SourceManagedInstanceName and
   * PointInTime must be specified. RestoreExternalBackup: Create a database by restoring from
   * external backup files. Collation, StorageContainerUri and StorageContainerSasToken must be
   * specified. Recovery: Creates a database by restoring a geo-replicated backup.
   * RecoverableDatabaseId must be specified as the recoverable database resource ID to restore.
   * Possible values include: 'Default', 'RestoreExternalBackup', 'PointInTimeRestore', 'Recovery',
   * 'RestoreLongTermRetentionBackup'
   */
  createMode?: ManagedDatabaseCreateMode;
  /**
   * Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the uri
   * of the storage container where backups for this restore are stored.
   */
  storageContainerUri?: string;
  /**
   * The resource identifier of the source database associated with create operation of this
   * database.
   */
  sourceDatabaseId?: string;
  /**
   * The restorable dropped database resource id to restore when creating this database.
   */
  restorableDroppedDatabaseId?: string;
  /**
   * Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the
   * storage container sas token.
   */
  storageContainerSasToken?: string;
  /**
   * Instance Failover Group resource identifier that this managed database belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly failoverGroupId?: string;
  /**
   * The resource identifier of the recoverable database associated with create operation of this
   * database.
   */
  recoverableDatabaseId?: string;
  /**
   * The name of the Long Term Retention backup to be used for restore of this managed database.
   */
  longTermRetentionBackupResourceId?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Contains the information necessary to perform a resource move (rename).
 */
export interface ResourceMoveDefinition {
  /**
   * The target ID for the resource
   */
  id: string;
}

/**
 * A restorable dropped managed database resource.
 */
export interface RestorableDroppedManagedDatabase extends TrackedResource {
  /**
   * The name of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseName?: string;
  /**
   * The creation date of the database (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
  /**
   * The deletion date of the database (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deletionDate?: Date;
  /**
   * The earliest restore date of the database (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly earliestRestoreDate?: Date;
}

/**
 * Database restore points.
 */
export interface RestorePoint extends ProxyResource {
  /**
   * Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * The type of restore point. Possible values include: 'CONTINUOUS', 'DISCRETE'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly restorePointType?: RestorePointType;
  /**
   * The earliest time to which this database can be restored
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly earliestRestoreDate?: Date;
  /**
   * The time the backup was taken
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly restorePointCreationDate?: Date;
  /**
   * The label of restore point for backup request by user
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly restorePointLabel?: string;
}

/**
 * Contains the information necessary to perform a create database restore point operation.
 */
export interface CreateDatabaseRestorePointDefinition {
  /**
   * The restore point label to apply
   */
  restorePointLabel: string;
}

/**
 * Automatic tuning properties for individual advisors.
 */
export interface AutomaticTuningServerOptions {
  /**
   * Automatic tuning option desired state. Possible values include: 'Off', 'On', 'Default'
   */
  desiredState?: AutomaticTuningOptionModeDesired;
  /**
   * Automatic tuning option actual state. Possible values include: 'Off', 'On'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actualState?: AutomaticTuningOptionModeActual;
  /**
   * Reason code if desired and actual state are different.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reasonCode?: number;
  /**
   * Reason description if desired and actual state are different. Possible values include:
   * 'Default', 'Disabled', 'AutoConfigured'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reasonDesc?: AutomaticTuningServerReason;
}

/**
 * Server-level Automatic Tuning.
 */
export interface ServerAutomaticTuning extends ProxyResource {
  /**
   * Automatic tuning desired state. Possible values include: 'Custom', 'Auto', 'Unspecified'
   */
  desiredState?: AutomaticTuningServerMode;
  /**
   * Automatic tuning actual state. Possible values include: 'Custom', 'Auto', 'Unspecified'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actualState?: AutomaticTuningServerMode;
  /**
   * Automatic tuning options definition.
   */
  options?: { [propertyName: string]: AutomaticTuningServerOptions };
}

/**
 * A server DNS alias.
 */
export interface ServerDnsAlias extends ProxyResource {
  /**
   * The fully qualified DNS record for alias
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly azureDnsRecord?: string;
}

/**
 * A server DNS alias acquisition request.
 */
export interface ServerDnsAliasAcquisition {
  /**
   * The id of the server alias that will be acquired to point to this server instead.
   */
  oldServerDnsAliasId?: string;
}

/**
 * A server security alert policy.
 */
export interface ServerSecurityAlertPolicy extends ProxyResource {
  /**
   * Specifies the state of the policy, whether it is enabled or disabled or a policy has not been
   * applied yet on the specific database. Possible values include: 'New', 'Enabled', 'Disabled'
   */
  state: SecurityAlertPolicyState;
  /**
   * Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection,
   * Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action
   */
  disabledAlerts?: string[];
  /**
   * Specifies an array of e-mail addresses to which the alert is sent.
   */
  emailAddresses?: string[];
  /**
   * Specifies that the alert is sent to the account administrators.
   */
  emailAccountAdmins?: boolean;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob
   * storage will hold all Threat Detection audit logs.
   */
  storageEndpoint?: string;
  /**
   * Specifies the identifier key of the Threat Detection audit storage account.
   */
  storageAccountAccessKey?: string;
  /**
   * Specifies the number of days to keep in the Threat Detection audit logs.
   */
  retentionDays?: number;
  /**
   * Specifies the UTC creation time of the policy.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationTime?: Date;
}

/**
 * A managed database security alert policy.
 */
export interface ManagedDatabaseSecurityAlertPolicy extends ProxyResource {
  /**
   * Specifies the state of the policy, whether it is enabled or disabled or a policy has not been
   * applied yet on the specific database. Possible values include: 'New', 'Enabled', 'Disabled'
   */
  state: SecurityAlertPolicyState;
  /**
   * Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection,
   * Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action
   */
  disabledAlerts?: string[];
  /**
   * Specifies an array of e-mail addresses to which the alert is sent.
   */
  emailAddresses?: string[];
  /**
   * Specifies that the alert is sent to the account administrators.
   */
  emailAccountAdmins?: boolean;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob
   * storage will hold all Threat Detection audit logs.
   */
  storageEndpoint?: string;
  /**
   * Specifies the identifier key of the Threat Detection audit storage account.
   */
  storageAccountAccessKey?: string;
  /**
   * Specifies the number of days to keep in the Threat Detection audit logs.
   */
  retentionDays?: number;
  /**
   * Specifies the UTC creation time of the policy.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationTime?: Date;
}

/**
 * A managed server security alert policy.
 */
export interface ManagedServerSecurityAlertPolicy extends ProxyResource {
  /**
   * Specifies the state of the policy, whether it is enabled or disabled or a policy has not been
   * applied yet on the specific database. Possible values include: 'New', 'Enabled', 'Disabled'
   */
  state: SecurityAlertPolicyState;
  /**
   * Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection,
   * Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action
   */
  disabledAlerts?: string[];
  /**
   * Specifies an array of e-mail addresses to which the alert is sent.
   */
  emailAddresses?: string[];
  /**
   * Specifies that the alert is sent to the account administrators.
   */
  emailAccountAdmins?: boolean;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob
   * storage will hold all Threat Detection audit logs.
   */
  storageEndpoint?: string;
  /**
   * Specifies the identifier key of the Threat Detection audit storage account.
   */
  storageAccountAccessKey?: string;
  /**
   * Specifies the number of days to keep in the Threat Detection audit logs.
   */
  retentionDays?: number;
  /**
   * Specifies the UTC creation time of the policy.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationTime?: Date;
}

/**
 * A sensitivity label.
 */
export interface SensitivityLabel extends ProxyResource {
  /**
   * The label name.
   */
  labelName?: string;
  /**
   * The label ID.
   */
  labelId?: string;
  /**
   * The information type.
   */
  informationType?: string;
  /**
   * The information type ID.
   */
  informationTypeId?: string;
  /**
   * Is sensitivity recommendation disabled. Applicable for recommended sensitivity label only.
   * Specifies whether the sensitivity recommendation on this column is disabled (dismissed) or
   * not.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isDisabled?: boolean;
  /**
   * Possible values include: 'None', 'Low', 'Medium', 'High', 'Critical'
   */
  rank?: SensitivityLabelRank;
}

/**
 * An Azure SQL managed instance administrator.
 */
export interface ManagedInstanceAdministrator extends ProxyResource {
  /**
   * Login name of the managed instance administrator.
   */
  login: string;
  /**
   * SID (object ID) of the managed instance administrator.
   */
  sid: string;
  /**
   * Tenant ID of the managed instance administrator.
   */
  tenantId?: string;
}

/**
 * Optional Parameters.
 */
export interface JobExecutionsListByAgentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If specified, only job executions created at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * If specified, only job executions created before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * If specified, only job executions completed at or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * If specified, only job executions completed before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * If specified, only active or only completed job executions are included.
   */
  isActive?: boolean;
  /**
   * The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * The number of elements to return from the collection.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface JobExecutionsListByJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If specified, only job executions created at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * If specified, only job executions created before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * If specified, only job executions completed at or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * If specified, only job executions completed before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * If specified, only active or only completed job executions are included.
   */
  isActive?: boolean;
  /**
   * The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * The number of elements to return from the collection.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface JobExecutionsListByAgentNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If specified, only job executions created at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * If specified, only job executions created before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * If specified, only job executions completed at or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * If specified, only job executions completed before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * If specified, only active or only completed job executions are included.
   */
  isActive?: boolean;
  /**
   * The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * The number of elements to return from the collection.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface JobExecutionsListByJobNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If specified, only job executions created at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * If specified, only job executions created before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * If specified, only job executions completed at or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * If specified, only job executions completed before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * If specified, only active or only completed job executions are included.
   */
  isActive?: boolean;
  /**
   * The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * The number of elements to return from the collection.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface JobStepExecutionsListByJobExecutionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If specified, only job executions created at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * If specified, only job executions created before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * If specified, only job executions completed at or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * If specified, only job executions completed before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * If specified, only active or only completed job executions are included.
   */
  isActive?: boolean;
  /**
   * The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * The number of elements to return from the collection.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface JobStepExecutionsListByJobExecutionNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If specified, only job executions created at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * If specified, only job executions created before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * If specified, only job executions completed at or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * If specified, only job executions completed before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * If specified, only active or only completed job executions are included.
   */
  isActive?: boolean;
  /**
   * The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * The number of elements to return from the collection.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface JobTargetExecutionsListByJobExecutionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If specified, only job executions created at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * If specified, only job executions created before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * If specified, only job executions completed at or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * If specified, only job executions completed before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * If specified, only active or only completed job executions are included.
   */
  isActive?: boolean;
  /**
   * The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * The number of elements to return from the collection.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface JobTargetExecutionsListByStepOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If specified, only job executions created at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * If specified, only job executions created before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * If specified, only job executions completed at or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * If specified, only job executions completed before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * If specified, only active or only completed job executions are included.
   */
  isActive?: boolean;
  /**
   * The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * The number of elements to return from the collection.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface JobTargetExecutionsListByJobExecutionNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If specified, only job executions created at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * If specified, only job executions created before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * If specified, only job executions completed at or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * If specified, only job executions completed before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * If specified, only active or only completed job executions are included.
   */
  isActive?: boolean;
  /**
   * The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * The number of elements to return from the collection.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface JobTargetExecutionsListByStepNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If specified, only job executions created at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * If specified, only job executions created before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * If specified, only job executions completed at or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * If specified, only job executions completed before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * If specified, only active or only completed job executions are included.
   */
  isActive?: boolean;
  /**
   * The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * The number of elements to return from the collection.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface LongTermRetentionBackupsListByResourceGroupDatabaseOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether or not to only get the latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * Whether to query against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * Optional Parameters.
 */
export interface LongTermRetentionBackupsListByResourceGroupLocationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether or not to only get the latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * Whether to query against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * Optional Parameters.
 */
export interface LongTermRetentionBackupsListByResourceGroupServerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether or not to only get the latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * Whether to query against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * Optional Parameters.
 */
export interface LongTermRetentionBackupsListByDatabaseOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether or not to only get the latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * Whether to query against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * Optional Parameters.
 */
export interface LongTermRetentionBackupsListByLocationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether or not to only get the latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * Whether to query against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * Optional Parameters.
 */
export interface LongTermRetentionBackupsListByServerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether or not to only get the latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * Whether to query against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * Optional Parameters.
 */
export interface LongTermRetentionBackupsListByResourceGroupDatabaseNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether or not to only get the latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * Whether to query against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * Optional Parameters.
 */
export interface LongTermRetentionBackupsListByResourceGroupLocationNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether or not to only get the latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * Whether to query against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * Optional Parameters.
 */
export interface LongTermRetentionBackupsListByResourceGroupServerNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether or not to only get the latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * Whether to query against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * Optional Parameters.
 */
export interface LongTermRetentionBackupsListByDatabaseNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether or not to only get the latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * Whether to query against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * Optional Parameters.
 */
export interface LongTermRetentionBackupsListByLocationNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether or not to only get the latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * Whether to query against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * Optional Parameters.
 */
export interface LongTermRetentionBackupsListByServerNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether or not to only get the latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * Whether to query against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * Optional Parameters.
 */
export interface SensitivityLabelsListCurrentByDatabaseOptionalParams extends msRest.RequestOptionsBase {
  /**
   * An OData filter expression that filters elements in the collection.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface SensitivityLabelsListRecommendedByDatabaseOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specifies whether to include disabled recommendations or not.
   */
  includeDisabledRecommendations?: boolean;
  skipToken?: string;
  /**
   * An OData filter expression that filters elements in the collection.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface SensitivityLabelsListCurrentByDatabaseNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * An OData filter expression that filters elements in the collection.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface SensitivityLabelsListRecommendedByDatabaseNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specifies whether to include disabled recommendations or not.
   */
  includeDisabledRecommendations?: boolean;
  skipToken?: string;
  /**
   * An OData filter expression that filters elements in the collection.
   */
  filter?: string;
}

/**
 * An interface representing SqlManagementClientOptions.
 */
export interface SqlManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * A list of database extended auditing settings.
 * @extends Array<ExtendedDatabaseBlobAuditingPolicy>
 */
export interface ExtendedDatabaseBlobAuditingPolicyListResult extends Array<ExtendedDatabaseBlobAuditingPolicy> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of server extended auditing settings.
 * @extends Array<ExtendedServerBlobAuditingPolicy>
 */
export interface ExtendedServerBlobAuditingPolicyListResult extends Array<ExtendedServerBlobAuditingPolicy> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of server auditing settings.
 * @extends Array<ServerBlobAuditingPolicy>
 */
export interface ServerBlobAuditingPolicyListResult extends Array<ServerBlobAuditingPolicy> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of database auditing settings.
 * @extends Array<DatabaseBlobAuditingPolicy>
 */
export interface DatabaseBlobAuditingPolicyListResult extends Array<DatabaseBlobAuditingPolicy> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The response to a list database operations request
 * @extends Array<DatabaseOperation>
 */
export interface DatabaseOperationListResult extends Array<DatabaseOperation> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of databases.
 * @extends Array<Database>
 */
export interface DatabaseListResult extends Array<Database> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of the database's vulnerability assessments.
 * @extends Array<DatabaseVulnerabilityAssessment>
 */
export interface DatabaseVulnerabilityAssessmentListResult extends Array<DatabaseVulnerabilityAssessment> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of Azure SQL job agents.
 * @extends Array<JobAgent>
 */
export interface JobAgentListResult extends Array<JobAgent> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of job credentials.
 * @extends Array<JobCredential>
 */
export interface JobCredentialListResult extends Array<JobCredential> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of job executions.
 * @extends Array<JobExecution>
 */
export interface JobExecutionListResult extends Array<JobExecution> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of jobs.
 * @extends Array<Job>
 */
export interface JobListResult extends Array<Job> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of job steps.
 * @extends Array<JobStep>
 */
export interface JobStepListResult extends Array<JobStep> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of target groups.
 * @extends Array<JobTargetGroup>
 */
export interface JobTargetGroupListResult extends Array<JobTargetGroup> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of job versions.
 * @extends Array<JobVersion>
 */
export interface JobVersionListResult extends Array<JobVersion> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of long term retention backups.
 * @extends Array<LongTermRetentionBackup>
 */
export interface LongTermRetentionBackupListResult extends Array<LongTermRetentionBackup> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of short term retention policies.
 * @extends Array<ManagedBackupShortTermRetentionPolicy>
 */
export interface ManagedBackupShortTermRetentionPolicyListResult extends Array<ManagedBackupShortTermRetentionPolicy> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of managed databases.
 * @extends Array<ManagedDatabase>
 */
export interface ManagedDatabaseListResult extends Array<ManagedDatabase> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of restorable dropped managed databases.
 * @extends Array<RestorableDroppedManagedDatabase>
 */
export interface RestorableDroppedManagedDatabaseListResult extends Array<RestorableDroppedManagedDatabase> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of long term retention backups.
 * @extends Array<RestorePoint>
 */
export interface RestorePointListResult extends Array<RestorePoint> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of server DNS aliases.
 * @extends Array<ServerDnsAlias>
 */
export interface ServerDnsAliasListResult extends Array<ServerDnsAlias> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of the server's security alert policies.
 * @extends Array<ServerSecurityAlertPolicy>
 */
export interface LogicalServerSecurityAlertPolicyListResult extends Array<ServerSecurityAlertPolicy> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of the managed database's security alert policies.
 * @extends Array<ManagedDatabaseSecurityAlertPolicy>
 */
export interface ManagedDatabaseSecurityAlertPolicyListResult extends Array<ManagedDatabaseSecurityAlertPolicy> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of the managed Server's security alert policies.
 * @extends Array<ManagedServerSecurityAlertPolicy>
 */
export interface ManagedServerSecurityAlertPolicyListResult extends Array<ManagedServerSecurityAlertPolicy> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of sensitivity labels.
 * @extends Array<SensitivityLabel>
 */
export interface SensitivityLabelListResult extends Array<SensitivityLabel> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of managed instance administrators.
 * @extends Array<ManagedInstanceAdministrator>
 */
export interface ManagedInstanceAdministratorListResult extends Array<ManagedInstanceAdministrator> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for BlobAuditingPolicyState.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type BlobAuditingPolicyState = 'Enabled' | 'Disabled';

/**
 * Defines values for ManagementOperationState.
 * Possible values include: 'Pending', 'InProgress', 'Succeeded', 'Failed', 'CancelInProgress',
 * 'Cancelled'
 * @readonly
 * @enum {string}
 */
export type ManagementOperationState = 'Pending' | 'InProgress' | 'Succeeded' | 'Failed' | 'CancelInProgress' | 'Cancelled';

/**
 * Defines values for CreateMode.
 * Possible values include: 'Default', 'Copy', 'Secondary', 'OnlineSecondary',
 * 'PointInTimeRestore', 'Restore', 'Recovery', 'RestoreExternalBackup',
 * 'RestoreExternalBackupSecondary', 'RestoreLongTermRetentionBackup'
 * @readonly
 * @enum {string}
 */
export type CreateMode = 'Default' | 'Copy' | 'Secondary' | 'OnlineSecondary' | 'PointInTimeRestore' | 'Restore' | 'Recovery' | 'RestoreExternalBackup' | 'RestoreExternalBackupSecondary' | 'RestoreLongTermRetentionBackup';

/**
 * Defines values for SampleName.
 * Possible values include: 'AdventureWorksLT', 'WideWorldImportersStd', 'WideWorldImportersFull'
 * @readonly
 * @enum {string}
 */
export type SampleName = 'AdventureWorksLT' | 'WideWorldImportersStd' | 'WideWorldImportersFull';

/**
 * Defines values for DatabaseStatus.
 * Possible values include: 'Online', 'Restoring', 'RecoveryPending', 'Recovering', 'Suspect',
 * 'Offline', 'Standby', 'Shutdown', 'EmergencyMode', 'AutoClosed', 'Copying', 'Creating',
 * 'Inaccessible', 'OfflineSecondary', 'Pausing', 'Paused', 'Resuming', 'Scaling'
 * @readonly
 * @enum {string}
 */
export type DatabaseStatus = 'Online' | 'Restoring' | 'RecoveryPending' | 'Recovering' | 'Suspect' | 'Offline' | 'Standby' | 'Shutdown' | 'EmergencyMode' | 'AutoClosed' | 'Copying' | 'Creating' | 'Inaccessible' | 'OfflineSecondary' | 'Pausing' | 'Paused' | 'Resuming' | 'Scaling';

/**
 * Defines values for CatalogCollationType.
 * Possible values include: 'DATABASE_DEFAULT', 'SQL_Latin1_General_CP1_CI_AS'
 * @readonly
 * @enum {string}
 */
export type CatalogCollationType = 'DATABASE_DEFAULT' | 'SQL_Latin1_General_CP1_CI_AS';

/**
 * Defines values for JobAgentState.
 * Possible values include: 'Creating', 'Ready', 'Updating', 'Deleting', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type JobAgentState = 'Creating' | 'Ready' | 'Updating' | 'Deleting' | 'Disabled';

/**
 * Defines values for JobExecutionLifecycle.
 * Possible values include: 'Created', 'InProgress', 'WaitingForChildJobExecutions',
 * 'WaitingForRetry', 'Succeeded', 'SucceededWithSkipped', 'Failed', 'TimedOut', 'Canceled',
 * 'Skipped'
 * @readonly
 * @enum {string}
 */
export type JobExecutionLifecycle = 'Created' | 'InProgress' | 'WaitingForChildJobExecutions' | 'WaitingForRetry' | 'Succeeded' | 'SucceededWithSkipped' | 'Failed' | 'TimedOut' | 'Canceled' | 'Skipped';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Created', 'InProgress', 'Succeeded', 'Failed', 'Canceled'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Created' | 'InProgress' | 'Succeeded' | 'Failed' | 'Canceled';

/**
 * Defines values for JobTargetType.
 * Possible values include: 'TargetGroup', 'SqlDatabase', 'SqlElasticPool', 'SqlShardMap',
 * 'SqlServer'
 * @readonly
 * @enum {string}
 */
export type JobTargetType = 'TargetGroup' | 'SqlDatabase' | 'SqlElasticPool' | 'SqlShardMap' | 'SqlServer';

/**
 * Defines values for JobScheduleType.
 * Possible values include: 'Once', 'Recurring'
 * @readonly
 * @enum {string}
 */
export type JobScheduleType = 'Once' | 'Recurring';

/**
 * Defines values for JobStepActionType.
 * Possible values include: 'TSql'
 * @readonly
 * @enum {string}
 */
export type JobStepActionType = 'TSql';

/**
 * Defines values for JobStepActionSource.
 * Possible values include: 'Inline'
 * @readonly
 * @enum {string}
 */
export type JobStepActionSource = 'Inline';

/**
 * Defines values for JobStepOutputType.
 * Possible values include: 'SqlDatabase'
 * @readonly
 * @enum {string}
 */
export type JobStepOutputType = 'SqlDatabase';

/**
 * Defines values for JobTargetGroupMembershipType.
 * Possible values include: 'Include', 'Exclude'
 * @readonly
 * @enum {string}
 */
export type JobTargetGroupMembershipType = 'Include' | 'Exclude';

/**
 * Defines values for ManagedDatabaseStatus.
 * Possible values include: 'Online', 'Offline', 'Shutdown', 'Creating', 'Inaccessible',
 * 'Restoring', 'Updating'
 * @readonly
 * @enum {string}
 */
export type ManagedDatabaseStatus = 'Online' | 'Offline' | 'Shutdown' | 'Creating' | 'Inaccessible' | 'Restoring' | 'Updating';

/**
 * Defines values for ManagedDatabaseCreateMode.
 * Possible values include: 'Default', 'RestoreExternalBackup', 'PointInTimeRestore', 'Recovery',
 * 'RestoreLongTermRetentionBackup'
 * @readonly
 * @enum {string}
 */
export type ManagedDatabaseCreateMode = 'Default' | 'RestoreExternalBackup' | 'PointInTimeRestore' | 'Recovery' | 'RestoreLongTermRetentionBackup';

/**
 * Defines values for RestorePointType.
 * Possible values include: 'CONTINUOUS', 'DISCRETE'
 * @readonly
 * @enum {string}
 */
export type RestorePointType = 'CONTINUOUS' | 'DISCRETE';

/**
 * Defines values for AutomaticTuningServerMode.
 * Possible values include: 'Custom', 'Auto', 'Unspecified'
 * @readonly
 * @enum {string}
 */
export type AutomaticTuningServerMode = 'Custom' | 'Auto' | 'Unspecified';

/**
 * Defines values for AutomaticTuningOptionModeDesired.
 * Possible values include: 'Off', 'On', 'Default'
 * @readonly
 * @enum {string}
 */
export type AutomaticTuningOptionModeDesired = 'Off' | 'On' | 'Default';

/**
 * Defines values for AutomaticTuningOptionModeActual.
 * Possible values include: 'Off', 'On'
 * @readonly
 * @enum {string}
 */
export type AutomaticTuningOptionModeActual = 'Off' | 'On';

/**
 * Defines values for AutomaticTuningServerReason.
 * Possible values include: 'Default', 'Disabled', 'AutoConfigured'
 * @readonly
 * @enum {string}
 */
export type AutomaticTuningServerReason = 'Default' | 'Disabled' | 'AutoConfigured';

/**
 * Defines values for SecurityAlertPolicyState.
 * Possible values include: 'New', 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type SecurityAlertPolicyState = 'New' | 'Enabled' | 'Disabled';

/**
 * Defines values for SensitivityLabelRank.
 * Possible values include: 'None', 'Low', 'Medium', 'High', 'Critical'
 * @readonly
 * @enum {string}
 */
export type SensitivityLabelRank = 'None' | 'Low' | 'Medium' | 'High' | 'Critical';

/**
 * Defines values for LongTermRetentionDatabaseState.
 * Possible values include: 'All', 'Live', 'Deleted'
 * @readonly
 * @enum {string}
 */
export type LongTermRetentionDatabaseState = 'All' | 'Live' | 'Deleted';

/**
 * Defines values for VulnerabilityAssessmentPolicyBaselineName.
 * Possible values include: 'master', 'default'
 * @readonly
 * @enum {string}
 */
export type VulnerabilityAssessmentPolicyBaselineName = 'master' | 'default';

/**
 * Defines values for SensitivityLabelSource.
 * Possible values include: 'current', 'recommended'
 * @readonly
 * @enum {string}
 */
export type SensitivityLabelSource = 'current' | 'recommended';

/**
 * Contains response data for the get operation.
 */
export type ExtendedDatabaseBlobAuditingPoliciesGetResponse = ExtendedDatabaseBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtendedDatabaseBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ExtendedDatabaseBlobAuditingPoliciesCreateOrUpdateResponse = ExtendedDatabaseBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtendedDatabaseBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type ExtendedDatabaseBlobAuditingPoliciesListByDatabaseResponse = ExtendedDatabaseBlobAuditingPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtendedDatabaseBlobAuditingPolicyListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type ExtendedDatabaseBlobAuditingPoliciesListByDatabaseNextResponse = ExtendedDatabaseBlobAuditingPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtendedDatabaseBlobAuditingPolicyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ExtendedServerBlobAuditingPoliciesGetResponse = ExtendedServerBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtendedServerBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ExtendedServerBlobAuditingPoliciesCreateOrUpdateResponse = ExtendedServerBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtendedServerBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ExtendedServerBlobAuditingPoliciesListByServerResponse = ExtendedServerBlobAuditingPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtendedServerBlobAuditingPolicyListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ExtendedServerBlobAuditingPoliciesBeginCreateOrUpdateResponse = ExtendedServerBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtendedServerBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type ExtendedServerBlobAuditingPoliciesListByServerNextResponse = ExtendedServerBlobAuditingPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtendedServerBlobAuditingPolicyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerBlobAuditingPoliciesGetResponse = ServerBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerBlobAuditingPoliciesCreateOrUpdateResponse = ServerBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServerBlobAuditingPoliciesListByServerResponse = ServerBlobAuditingPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerBlobAuditingPolicyListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServerBlobAuditingPoliciesBeginCreateOrUpdateResponse = ServerBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type ServerBlobAuditingPoliciesListByServerNextResponse = ServerBlobAuditingPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerBlobAuditingPolicyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseBlobAuditingPoliciesGetResponse = DatabaseBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabaseBlobAuditingPoliciesCreateOrUpdateResponse = DatabaseBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type DatabaseBlobAuditingPoliciesListByDatabaseResponse = DatabaseBlobAuditingPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseBlobAuditingPolicyListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type DatabaseBlobAuditingPoliciesListByDatabaseNextResponse = DatabaseBlobAuditingPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseBlobAuditingPolicyListResult;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type DatabaseOperationsListByDatabaseResponse = DatabaseOperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseOperationListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type DatabaseOperationsListByDatabaseNextResponse = DatabaseOperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseOperationListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type DatabasesListByServerResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabasesGetResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabasesCreateOrUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DatabasesUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the exportMethod operation.
 */
export type DatabasesExportMethodResponse = ImportExportOperationResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImportExportOperationResult;
    };
};

/**
 * Contains response data for the pause operation.
 */
export type DatabasesPauseResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the listByElasticPool operation.
 */
export type DatabasesListByElasticPoolResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the resume operation.
 */
export type DatabasesResumeResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DatabasesBeginCreateOrUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type DatabasesBeginUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the beginExportMethod operation.
 */
export type DatabasesBeginExportMethodResponse = ImportExportOperationResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImportExportOperationResult;
    };
};

/**
 * Contains response data for the beginPause operation.
 */
export type DatabasesBeginPauseResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the beginResume operation.
 */
export type DatabasesBeginResumeResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type DatabasesListByServerNextResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the listByElasticPoolNext operation.
 */
export type DatabasesListByElasticPoolNextResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseVulnerabilityAssessmentRuleBaselinesGetResponse = DatabaseVulnerabilityAssessmentRuleBaseline & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentRuleBaseline;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse = DatabaseVulnerabilityAssessmentRuleBaseline & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentRuleBaseline;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseVulnerabilityAssessmentsGetResponse = DatabaseVulnerabilityAssessment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessment;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabaseVulnerabilityAssessmentsCreateOrUpdateResponse = DatabaseVulnerabilityAssessment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessment;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type DatabaseVulnerabilityAssessmentsListByDatabaseResponse = DatabaseVulnerabilityAssessmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type DatabaseVulnerabilityAssessmentsListByDatabaseNextResponse = DatabaseVulnerabilityAssessmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DataWarehouseUserActivitiesGetResponse = DataWarehouseUserActivities & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataWarehouseUserActivities;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type JobAgentsListByServerResponse = JobAgentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgentListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobAgentsGetResponse = JobAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgent;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobAgentsCreateOrUpdateResponse = JobAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgent;
    };
};

/**
 * Contains response data for the update operation.
 */
export type JobAgentsUpdateResponse = JobAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgent;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type JobAgentsBeginCreateOrUpdateResponse = JobAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgent;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type JobAgentsBeginUpdateResponse = JobAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgent;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type JobAgentsListByServerNextResponse = JobAgentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgentListResult;
    };
};

/**
 * Contains response data for the listByAgent operation.
 */
export type JobCredentialsListByAgentResponse = JobCredentialListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCredentialListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobCredentialsGetResponse = JobCredential & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCredential;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobCredentialsCreateOrUpdateResponse = JobCredential & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCredential;
    };
};

/**
 * Contains response data for the listByAgentNext operation.
 */
export type JobCredentialsListByAgentNextResponse = JobCredentialListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCredentialListResult;
    };
};

/**
 * Contains response data for the listByAgent operation.
 */
export type JobExecutionsListByAgentResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type JobExecutionsCreateResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the listByJob operation.
 */
export type JobExecutionsListByJobResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobExecutionsGetResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobExecutionsCreateOrUpdateResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type JobExecutionsBeginCreateResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type JobExecutionsBeginCreateOrUpdateResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the listByAgentNext operation.
 */
export type JobExecutionsListByAgentNextResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the listByJobNext operation.
 */
export type JobExecutionsListByJobNextResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the listByAgent operation.
 */
export type JobsListByAgentResponse = JobListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobsGetResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobsCreateOrUpdateResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the listByAgentNext operation.
 */
export type JobsListByAgentNextResponse = JobListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobListResult;
    };
};

/**
 * Contains response data for the listByJobExecution operation.
 */
export type JobStepExecutionsListByJobExecutionResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobStepExecutionsGetResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the listByJobExecutionNext operation.
 */
export type JobStepExecutionsListByJobExecutionNextResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the listByVersion operation.
 */
export type JobStepsListByVersionResponse = JobStepListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStepListResult;
    };
};

/**
 * Contains response data for the getByVersion operation.
 */
export type JobStepsGetByVersionResponse = JobStep & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStep;
    };
};

/**
 * Contains response data for the listByJob operation.
 */
export type JobStepsListByJobResponse = JobStepListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStepListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobStepsGetResponse = JobStep & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStep;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobStepsCreateOrUpdateResponse = JobStep & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStep;
    };
};

/**
 * Contains response data for the listByVersionNext operation.
 */
export type JobStepsListByVersionNextResponse = JobStepListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStepListResult;
    };
};

/**
 * Contains response data for the listByJobNext operation.
 */
export type JobStepsListByJobNextResponse = JobStepListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStepListResult;
    };
};

/**
 * Contains response data for the listByJobExecution operation.
 */
export type JobTargetExecutionsListByJobExecutionResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the listByStep operation.
 */
export type JobTargetExecutionsListByStepResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobTargetExecutionsGetResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the listByJobExecutionNext operation.
 */
export type JobTargetExecutionsListByJobExecutionNextResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the listByStepNext operation.
 */
export type JobTargetExecutionsListByStepNextResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the listByAgent operation.
 */
export type JobTargetGroupsListByAgentResponse = JobTargetGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobTargetGroupListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobTargetGroupsGetResponse = JobTargetGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobTargetGroup;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobTargetGroupsCreateOrUpdateResponse = JobTargetGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobTargetGroup;
    };
};

/**
 * Contains response data for the listByAgentNext operation.
 */
export type JobTargetGroupsListByAgentNextResponse = JobTargetGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobTargetGroupListResult;
    };
};

/**
 * Contains response data for the listByJob operation.
 */
export type JobVersionsListByJobResponse = JobVersionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobVersionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobVersionsGetResponse = JobVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobVersion;
    };
};

/**
 * Contains response data for the listByJobNext operation.
 */
export type JobVersionsListByJobNextResponse = JobVersionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobVersionListResult;
    };
};

/**
 * Contains response data for the getByResourceGroup operation.
 */
export type LongTermRetentionBackupsGetByResourceGroupResponse = LongTermRetentionBackup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackup;
    };
};

/**
 * Contains response data for the listByResourceGroupDatabase operation.
 */
export type LongTermRetentionBackupsListByResourceGroupDatabaseResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupLocation operation.
 */
export type LongTermRetentionBackupsListByResourceGroupLocationResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupServer operation.
 */
export type LongTermRetentionBackupsListByResourceGroupServerResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type LongTermRetentionBackupsGetResponse = LongTermRetentionBackup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackup;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type LongTermRetentionBackupsListByDatabaseResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByLocation operation.
 */
export type LongTermRetentionBackupsListByLocationResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type LongTermRetentionBackupsListByServerResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupDatabaseNext operation.
 */
export type LongTermRetentionBackupsListByResourceGroupDatabaseNextResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupLocationNext operation.
 */
export type LongTermRetentionBackupsListByResourceGroupLocationNextResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupServerNext operation.
 */
export type LongTermRetentionBackupsListByResourceGroupServerNextResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type LongTermRetentionBackupsListByDatabaseNextResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByLocationNext operation.
 */
export type LongTermRetentionBackupsListByLocationNextResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type LongTermRetentionBackupsListByServerNextResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BackupLongTermRetentionPoliciesGetResponse = BackupLongTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupLongTermRetentionPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type BackupLongTermRetentionPoliciesCreateOrUpdateResponse = BackupLongTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupLongTermRetentionPolicy;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type BackupLongTermRetentionPoliciesListByDatabaseResponse = BackupLongTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupLongTermRetentionPolicy;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type BackupLongTermRetentionPoliciesBeginCreateOrUpdateResponse = BackupLongTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupLongTermRetentionPolicy;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedBackupShortTermRetentionPoliciesGetResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedBackupShortTermRetentionPoliciesCreateOrUpdateResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ManagedBackupShortTermRetentionPoliciesUpdateResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type ManagedBackupShortTermRetentionPoliciesListByDatabaseResponse = ManagedBackupShortTermRetentionPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicyListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedBackupShortTermRetentionPoliciesBeginCreateOrUpdateResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ManagedBackupShortTermRetentionPoliciesBeginUpdateResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type ManagedBackupShortTermRetentionPoliciesListByDatabaseNextResponse = ManagedBackupShortTermRetentionPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicyListResult;
    };
};

/**
 * Contains response data for the listByInstance operation.
 */
export type ManagedDatabasesListByInstanceResponse = ManagedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabaseListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedDatabasesGetResponse = ManagedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabase;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedDatabasesCreateOrUpdateResponse = ManagedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabase;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ManagedDatabasesUpdateResponse = ManagedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabase;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedDatabasesBeginCreateOrUpdateResponse = ManagedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabase;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ManagedDatabasesBeginUpdateResponse = ManagedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabase;
    };
};

/**
 * Contains response data for the listByInstanceNext operation.
 */
export type ManagedDatabasesListByInstanceNextResponse = ManagedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabaseListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesGetResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesCreateOrUpdateResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesUpdateResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the listByRestorableDroppedDatabase operation.
 */
export type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseResponse = ManagedBackupShortTermRetentionPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicyListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesBeginCreateOrUpdateResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesBeginUpdateResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the listByRestorableDroppedDatabaseNext operation.
 */
export type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseNextResponse = ManagedBackupShortTermRetentionPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicyListResult;
    };
};

/**
 * Contains response data for the listByInstance operation.
 */
export type RestorableDroppedManagedDatabasesListByInstanceResponse = RestorableDroppedManagedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorableDroppedManagedDatabaseListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RestorableDroppedManagedDatabasesGetResponse = RestorableDroppedManagedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorableDroppedManagedDatabase;
    };
};

/**
 * Contains response data for the listByInstanceNext operation.
 */
export type RestorableDroppedManagedDatabasesListByInstanceNextResponse = RestorableDroppedManagedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorableDroppedManagedDatabaseListResult;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type RestorePointsListByDatabaseResponse = RestorePointListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorePointListResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type RestorePointsCreateResponse = RestorePoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorePoint;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RestorePointsGetResponse = RestorePoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorePoint;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type RestorePointsBeginCreateResponse = RestorePoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorePoint;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerAutomaticTuningGetResponse = ServerAutomaticTuning & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerAutomaticTuning;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ServerAutomaticTuningUpdateResponse = ServerAutomaticTuning & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerAutomaticTuning;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerDnsAliasesGetResponse = ServerDnsAlias & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerDnsAlias;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerDnsAliasesCreateOrUpdateResponse = ServerDnsAlias & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerDnsAlias;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServerDnsAliasesListByServerResponse = ServerDnsAliasListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerDnsAliasListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServerDnsAliasesBeginCreateOrUpdateResponse = ServerDnsAlias & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerDnsAlias;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type ServerDnsAliasesListByServerNextResponse = ServerDnsAliasListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerDnsAliasListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerSecurityAlertPoliciesGetResponse = ServerSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerSecurityAlertPoliciesCreateOrUpdateResponse = ServerSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServerSecurityAlertPoliciesListByServerResponse = LogicalServerSecurityAlertPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogicalServerSecurityAlertPolicyListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServerSecurityAlertPoliciesBeginCreateOrUpdateResponse = ServerSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type ServerSecurityAlertPoliciesListByServerNextResponse = LogicalServerSecurityAlertPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogicalServerSecurityAlertPolicyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedDatabaseSecurityAlertPoliciesGetResponse = ManagedDatabaseSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabaseSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedDatabaseSecurityAlertPoliciesCreateOrUpdateResponse = ManagedDatabaseSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabaseSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type ManagedDatabaseSecurityAlertPoliciesListByDatabaseResponse = ManagedDatabaseSecurityAlertPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabaseSecurityAlertPolicyListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type ManagedDatabaseSecurityAlertPoliciesListByDatabaseNextResponse = ManagedDatabaseSecurityAlertPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabaseSecurityAlertPolicyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedServerSecurityAlertPoliciesGetResponse = ManagedServerSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedServerSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedServerSecurityAlertPoliciesCreateOrUpdateResponse = ManagedServerSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedServerSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the listByInstance operation.
 */
export type ManagedServerSecurityAlertPoliciesListByInstanceResponse = ManagedServerSecurityAlertPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedServerSecurityAlertPolicyListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedServerSecurityAlertPoliciesBeginCreateOrUpdateResponse = ManagedServerSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedServerSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the listByInstanceNext operation.
 */
export type ManagedServerSecurityAlertPoliciesListByInstanceNextResponse = ManagedServerSecurityAlertPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedServerSecurityAlertPolicyListResult;
    };
};

/**
 * Contains response data for the listCurrentByDatabase operation.
 */
export type SensitivityLabelsListCurrentByDatabaseResponse = SensitivityLabelListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabelListResult;
    };
};

/**
 * Contains response data for the listRecommendedByDatabase operation.
 */
export type SensitivityLabelsListRecommendedByDatabaseResponse = SensitivityLabelListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabelListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SensitivityLabelsGetResponse = SensitivityLabel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabel;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SensitivityLabelsCreateOrUpdateResponse = SensitivityLabel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabel;
    };
};

/**
 * Contains response data for the listCurrentByDatabaseNext operation.
 */
export type SensitivityLabelsListCurrentByDatabaseNextResponse = SensitivityLabelListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabelListResult;
    };
};

/**
 * Contains response data for the listRecommendedByDatabaseNext operation.
 */
export type SensitivityLabelsListRecommendedByDatabaseNextResponse = SensitivityLabelListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabelListResult;
    };
};

/**
 * Contains response data for the listByInstance operation.
 */
export type ManagedInstanceAdministratorsListByInstanceResponse = ManagedInstanceAdministratorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceAdministratorListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedInstanceAdministratorsGetResponse = ManagedInstanceAdministrator & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceAdministrator;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedInstanceAdministratorsCreateOrUpdateResponse = ManagedInstanceAdministrator & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceAdministrator;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedInstanceAdministratorsBeginCreateOrUpdateResponse = ManagedInstanceAdministrator & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceAdministrator;
    };
};

/**
 * Contains response data for the listByInstanceNext operation.
 */
export type ManagedInstanceAdministratorsListByInstanceNextResponse = ManagedInstanceAdministratorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceAdministratorListResult;
    };
};
