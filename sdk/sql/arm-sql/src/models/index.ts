/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Contains information of current state for an Azure SQL Database, Server or Elastic Pool
 * Recommended Action.
 */
export interface RecommendedActionStateInfo {
  /**
   * Current state the recommended action is in. Some commonly used states are: Active      ->
   * recommended action is active and no action has been taken yet. Pending     -> recommended
   * action is approved for and is awaiting execution. Executing   -> recommended action is being
   * applied on the user database. Verifying   -> recommended action was applied and is being
   * verified of its usefulness by the system. Success     -> recommended action was applied and
   * improvement found during verification. Pending Revert  -> verification found little or no
   * improvement so recommended action is queued for revert or user has manually reverted.
   * Reverting   -> changes made while applying recommended action are being reverted on the user
   * database. Reverted    -> successfully reverted the changes made by recommended action on user
   * database. Ignored     -> user explicitly ignored/discarded the recommended action. Possible
   * values include: 'Active', 'Pending', 'Executing', 'Verifying', 'PendingRevert',
   * 'RevertCancelled', 'Reverting', 'Reverted', 'Ignored', 'Expired', 'Monitoring', 'Resolved',
   * 'Success', 'Error'
   */
  currentValue: RecommendedActionCurrentState;
  /**
   * Gets who initiated the execution of this recommended action. Possible Value are: User    ->
   * When user explicitly notified system to apply the recommended action. System  -> When
   * auto-execute status of this advisor was set to 'Enabled', in which case the system applied it.
   * Possible values include: 'User', 'System'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actionInitiatedBy?: RecommendedActionInitiatedBy;
  /**
   * Gets the time when the state was last modified
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModified?: Date;
}

/**
 * Contains information for manual implementation for an Azure SQL Database, Server or Elastic Pool
 * Recommended Action.
 */
export interface RecommendedActionImplementationInfo {
  /**
   * Gets the method in which this recommended action can be manually implemented. e.g., TSql,
   * AzurePowerShell. Possible values include: 'TSql', 'AzurePowerShell'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly method?: ImplementationMethod;
  /**
   * Gets the manual implementation script. e.g., T-SQL script that could be executed on the
   * database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly script?: string;
}

/**
 * Contains error information for an Azure SQL Database, Server or Elastic Pool Recommended Action.
 */
export interface RecommendedActionErrorInfo {
  /**
   * Gets the reason why the recommended action was put to error state. e.g., DatabaseHasQdsOff,
   * IndexAlreadyExists
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorCode?: string;
  /**
   * Gets whether the error could be ignored and recommended action could be retried. Possible
   * values are: Yes/No. Possible values include: 'Yes', 'No'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isRetryable?: IsRetryable;
}

/**
 * Contains information of estimated or observed impact on various metrics for an Azure SQL
 * Database, Server or Elastic Pool Recommended Action.
 */
export interface RecommendedActionImpactRecord {
  /**
   * Gets the name of the impact dimension. e.g., CPUChange, DiskSpaceChange,
   * NumberOfQueriesAffected.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dimensionName?: string;
  /**
   * Gets the name of the impact dimension. e.g., CPUChange, DiskSpaceChange,
   * NumberOfQueriesAffected.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: string;
  /**
   * Gets the absolute value of this dimension if applicable. e.g., Number of Queries affected
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly absoluteValue?: number;
  /**
   * Gets the absolute change in the value of this dimension. e.g., Absolute Disk space change in
   * Megabytes
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly changeValueAbsolute?: number;
  /**
   * Gets the relative change in the value of this dimension. e.g., Relative Disk space change in
   * Percentage
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly changeValueRelative?: number;
}

/**
 * Contains time series of various impacted metrics for an Azure SQL Database, Server or Elastic
 * Pool Recommended Action.
 */
export interface RecommendedActionMetricInfo {
  /**
   * Gets the name of the metric. e.g., CPU, Number of Queries.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metricName?: string;
  /**
   * Gets the unit in which metric is measured. e.g., DTU, Frequency
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: string;
  /**
   * Gets the duration of time interval for the value given by this MetricInfo. e.g., PT1H (1 hour)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeGrain?: string;
  /**
   * Gets the start time of time interval given by this MetricInfo.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * Gets the value of the metric in the time interval given by this MetricInfo.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: number;
}

/**
 * ARM resource.
 */
export interface Resource extends BaseResource {
  /**
   * Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * ARM proxy resource.
 */
export interface ProxyResource extends Resource {
}

/**
 * Database, Server or Elastic Pool Recommended Action.
 */
export interface RecommendedAction extends ProxyResource {
  /**
   * Resource kind.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Gets the reason for recommending this action. e.g., DuplicateIndex
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recommendationReason?: string;
  /**
   * Gets the time since when this recommended action is valid.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly validSince?: Date;
  /**
   * Gets time when this recommended action was last refreshed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastRefresh?: Date;
  /**
   * Gets the info of the current state the recommended action is in.
   */
  state: RecommendedActionStateInfo;
  /**
   * Gets if this recommended action is actionable by user
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isExecutableAction?: boolean;
  /**
   * Gets if changes applied by this recommended action can be reverted by user
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isRevertableAction?: boolean;
  /**
   * Gets if this recommended action was suggested some time ago but user chose to ignore this and
   * system added a new recommended action again.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isArchivedAction?: boolean;
  /**
   * Gets the time when system started applying this recommended action on the user resource. e.g.,
   * index creation start time
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly executeActionStartTime?: Date;
  /**
   * Gets the time taken for applying this recommended action on user resource. e.g., time taken
   * for index creation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly executeActionDuration?: string;
  /**
   * Gets the time when system started reverting changes of this recommended action on user
   * resource. e.g., time when index drop is executed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly revertActionStartTime?: Date;
  /**
   * Gets the time taken for reverting changes of this recommended action on user resource. e.g.,
   * time taken for dropping the created index.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly revertActionDuration?: string;
  /**
   * Gets if approval for applying this recommended action was given by user/system. Possible
   * values include: 'User', 'System'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly executeActionInitiatedBy?: RecommendedActionInitiatedBy;
  /**
   * Gets the time when this recommended action was approved for execution.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly executeActionInitiatedTime?: Date;
  /**
   * Gets if approval for reverting this recommended action was given by user/system. Possible
   * values include: 'User', 'System'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly revertActionInitiatedBy?: RecommendedActionInitiatedBy;
  /**
   * Gets the time when this recommended action was approved for revert.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly revertActionInitiatedTime?: Date;
  /**
   * Gets the impact of this recommended action. Possible values are 1 - Low impact, 2 - Medium
   * Impact and 3 - High Impact
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly score?: number;
  /**
   * Gets the implementation details of this recommended action for user to apply it manually.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly implementationDetails?: RecommendedActionImplementationInfo;
  /**
   * Gets the error details if and why this recommended action is put to error state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorDetails?: RecommendedActionErrorInfo;
  /**
   * Gets the estimated impact info for this recommended action e.g., Estimated CPU gain, Estimated
   * Disk Space change
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly estimatedImpact?: RecommendedActionImpactRecord[];
  /**
   * Gets the observed/actual impact info for this recommended action e.g., Actual CPU gain, Actual
   * Disk Space change
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly observedImpact?: RecommendedActionImpactRecord[];
  /**
   * Gets the time series info of metrics for this recommended action e.g., CPU consumption time
   * series
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeSeries?: RecommendedActionMetricInfo[];
  /**
   * Gets the linked objects, if any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly linkedObjects?: string[];
  /**
   * Gets additional details specific to this recommended action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: { [propertyName: string]: any };
}

/**
 * Database, Server or Elastic Pool Advisor.
 */
export interface Advisor extends ProxyResource {
  /**
   * Resource kind.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Gets the status of availability of this advisor to customers. Possible values are 'GA',
   * 'PublicPreview', 'LimitedPublicPreview' and 'PrivatePreview'. Possible values include: 'GA',
   * 'PublicPreview', 'LimitedPublicPreview', 'PrivatePreview'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly advisorStatus?: AdvisorStatus;
  /**
   * Gets the auto-execute status (whether to let the system execute the recommendations) of this
   * advisor. Possible values are 'Enabled' and 'Disabled'. Possible values include: 'Enabled',
   * 'Disabled', 'Default'
   */
  autoExecuteStatus: AutoExecuteStatus;
  /**
   * Gets the resource from which current value of auto-execute status is inherited. Auto-execute
   * status can be set on (and inherited from) different levels in the resource hierarchy. Possible
   * values are 'Subscription', 'Server', 'ElasticPool', 'Database' and 'Default' (when status is
   * not explicitly set on any level). Possible values include: 'Default', 'Subscription',
   * 'Server', 'ElasticPool', 'Database'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly autoExecuteStatusInheritedFrom?: AutoExecuteStatusInheritedFrom;
  /**
   * Gets that status of recommendations for this advisor and reason for not having any
   * recommendations. Possible values include, but are not limited to, 'Ok' (Recommendations
   * available),LowActivity (not enough workload to analyze), 'DbSeemsTuned' (Database is doing
   * well), etc.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recommendationsStatus?: string;
  /**
   * Gets the time when the current resource was analyzed for recommendations by this advisor.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastChecked?: Date;
  /**
   * Gets the recommended actions for this advisor.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recommendedActions?: RecommendedAction[];
}

/**
 * ARM tracked top level resource.
 */
export interface TrackedResource extends Resource {
  /**
   * Resource location.
   */
  location: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A database blob auditing policy.
 */
export interface DatabaseBlobAuditingPolicy extends ProxyResource {
  /**
   * Resource kind.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Specifies the state of the policy. If state is Enabled, storageEndpoint or
   * isAzureMonitorTargetEnabled are required. Possible values include: 'Enabled', 'Disabled'
   */
  state: BlobAuditingPolicyState;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state
   * is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.
   */
  storageEndpoint?: string;
  /**
   * Specifies the identifier key of the auditing storage account.
   * If state is Enabled and storageEndpoint is specified, not specifying the
   * storageAccountAccessKey will use SQL server system-assigned managed identity to access the
   * storage.
   * Prerequisites for using managed identity authentication:
   * 1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).
   * 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data
   * Contributor' RBAC role to the server identity.
   * For more information, see [Auditing to storage using Managed Identity
   * authentication](https://go.microsoft.com/fwlink/?linkid=2114355)
   */
  storageAccountAccessKey?: string;
  /**
   * Specifies the number of days to keep in the audit logs in the storage account.
   */
  retentionDays?: number;
  /**
   * Specifies the Actions-Groups and Actions to audit.
   *
   * The recommended set of action groups to use is the following combination - this will audit all
   * the queries and stored procedures executed against the database, as well as successful and
   * failed logins:
   *
   * BATCH_COMPLETED_GROUP,
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
   * FAILED_DATABASE_AUTHENTICATION_GROUP.
   *
   * This above combination is also the set that is configured by default when enabling auditing
   * from the Azure portal.
   *
   * The supported action groups to audit are (note: choose only specific groups that cover your
   * auditing needs. Using unnecessary groups could lead to very large quantities of audit
   * records):
   *
   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
   * BACKUP_RESTORE_GROUP
   * DATABASE_LOGOUT_GROUP
   * DATABASE_OBJECT_CHANGE_GROUP
   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
   * DATABASE_OPERATION_GROUP
   * DATABASE_PERMISSION_CHANGE_GROUP
   * DATABASE_PRINCIPAL_CHANGE_GROUP
   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
   * DATABASE_ROLE_MEMBER_CHANGE_GROUP
   * FAILED_DATABASE_AUTHENTICATION_GROUP
   * SCHEMA_OBJECT_ACCESS_GROUP
   * SCHEMA_OBJECT_CHANGE_GROUP
   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
   * USER_CHANGE_PASSWORD_GROUP
   * BATCH_STARTED_GROUP
   * BATCH_COMPLETED_GROUP
   *
   * These are groups that cover all sql statements and stored procedures executed against the
   * database, and should not be used in combination with other groups as this will result in
   * duplicate audit logs.
   *
   * For more information, see [Database-Level Audit Action
   * Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
   *
   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot
   * be specified for Server auditing policy). The supported actions to audit are:
   * SELECT
   * UPDATE
   * INSERT
   * DELETE
   * EXECUTE
   * RECEIVE
   * REFERENCES
   *
   * The general form for defining an action to be audited is:
   * {action} ON {object} BY {principal}
   *
   * Note that <object> in the above format can refer to an object like a table, view, or stored
   * procedure, or an entire database or schema. For the latter cases, the forms
   * DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
   *
   * For example:
   * SELECT on dbo.myTable by public
   * SELECT on DATABASE::myDatabase by public
   * SELECT on SCHEMA::mySchema by public
   *
   * For more information, see [Database-Level Audit
   * Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
   */
  auditActionsAndGroups?: string[];
  /**
   * Specifies the blob storage subscription Id.
   */
  storageAccountSubscriptionId?: string;
  /**
   * Specifies whether storageAccountAccessKey value is the storage's secondary key.
   */
  isStorageSecondaryKeyInUse?: boolean;
  /**
   * Specifies whether audit events are sent to Azure Monitor.
   * In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and
   * 'isAzureMonitorTargetEnabled' as true.
   *
   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents'
   * diagnostic logs category on the database should be also created.
   * Note that for server level audit you should use the 'master' database as {databaseName}.
   *
   * Diagnostic Settings URI format:
   * PUT
   * https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
   *
   * For more information, see [Diagnostic Settings REST
   * API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   */
  isAzureMonitorTargetEnabled?: boolean;
  /**
   * Specifies the amount of time in milliseconds that can elapse before audit actions are forced
   * to be processed.
   * The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.
   */
  queueDelayMs?: number;
}

/**
 * Automatic tuning properties for individual advisors.
 */
export interface AutomaticTuningOptions {
  /**
   * Automatic tuning option desired state. Possible values include: 'Off', 'On', 'Default'
   */
  desiredState?: AutomaticTuningOptionModeDesired;
  /**
   * Automatic tuning option actual state. Possible values include: 'Off', 'On'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actualState?: AutomaticTuningOptionModeActual;
  /**
   * Reason code if desired and actual state are different.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reasonCode?: number;
  /**
   * Reason description if desired and actual state are different. Possible values include:
   * 'Default', 'Disabled', 'AutoConfigured', 'InheritedFromServer', 'QueryStoreOff',
   * 'QueryStoreReadOnly', 'NotSupported'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reasonDesc?: AutomaticTuningDisabledReason;
}

/**
 * Database-level Automatic Tuning.
 */
export interface DatabaseAutomaticTuning extends ProxyResource {
  /**
   * Automatic tuning desired state. Possible values include: 'Inherit', 'Custom', 'Auto',
   * 'Unspecified'
   */
  desiredState?: AutomaticTuningMode;
  /**
   * Automatic tuning actual state. Possible values include: 'Inherit', 'Custom', 'Auto',
   * 'Unspecified'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actualState?: AutomaticTuningMode;
  /**
   * Automatic tuning options definition.
   */
  options?: { [propertyName: string]: AutomaticTuningOptions };
}

/**
 * The server encryption protector.
 */
export interface EncryptionProtector extends ProxyResource {
  /**
   * Kind of encryption protector. This is metadata used for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Subregion of the encryption protector.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subregion?: string;
  /**
   * The name of the server key.
   */
  serverKeyName?: string;
  /**
   * The encryption protector type like 'ServiceManaged', 'AzureKeyVault'. Possible values include:
   * 'ServiceManaged', 'AzureKeyVault'
   */
  serverKeyType: ServerKeyType;
  /**
   * The URI of the server key.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly uri?: string;
  /**
   * Thumbprint of the server key.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbprint?: string;
}

/**
 * Read-write endpoint of the failover group instance.
 */
export interface FailoverGroupReadWriteEndpoint {
  /**
   * Failover policy of the read-write endpoint for the failover group. If failoverPolicy is
   * Automatic then failoverWithDataLossGracePeriodMinutes is required. Possible values include:
   * 'Manual', 'Automatic'
   */
  failoverPolicy: ReadWriteEndpointFailoverPolicy;
  /**
   * Grace period before failover with data loss is attempted for the read-write endpoint. If
   * failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required.
   */
  failoverWithDataLossGracePeriodMinutes?: number;
}

/**
 * Read-only endpoint of the failover group instance.
 */
export interface FailoverGroupReadOnlyEndpoint {
  /**
   * Failover policy of the read-only endpoint for the failover group. Possible values include:
   * 'Disabled', 'Enabled'
   */
  failoverPolicy?: ReadOnlyEndpointFailoverPolicy;
}

/**
 * Partner server information for the failover group.
 */
export interface PartnerInfo {
  /**
   * Resource identifier of the partner server.
   */
  id: string;
  /**
   * Geo location of the partner server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Replication role of the partner server. Possible values include: 'Primary', 'Secondary'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationRole?: FailoverGroupReplicationRole;
}

/**
 * A failover group.
 */
export interface FailoverGroup extends ProxyResource {
  /**
   * Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * Read-write endpoint of the failover group instance.
   */
  readWriteEndpoint: FailoverGroupReadWriteEndpoint;
  /**
   * Read-only endpoint of the failover group instance.
   */
  readOnlyEndpoint?: FailoverGroupReadOnlyEndpoint;
  /**
   * Local replication role of the failover group instance. Possible values include: 'Primary',
   * 'Secondary'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationRole?: FailoverGroupReplicationRole;
  /**
   * Replication state of the failover group instance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationState?: string;
  /**
   * List of partner server information for the failover group.
   */
  partnerServers: PartnerInfo[];
  /**
   * List of databases in the failover group.
   */
  databases?: string[];
}

/**
 * A failover group update request.
 */
export interface FailoverGroupUpdate {
  /**
   * Read-write endpoint of the failover group instance.
   */
  readWriteEndpoint?: FailoverGroupReadWriteEndpoint;
  /**
   * Read-only endpoint of the failover group instance.
   */
  readOnlyEndpoint?: FailoverGroupReadOnlyEndpoint;
  /**
   * List of databases in the failover group.
   */
  databases?: string[];
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * ARM resource.
 */
export interface ResourceWithWritableName extends BaseResource {
  /**
   * Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   */
  name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * ARM proxy resource.
 */
export interface ProxyResourceWithWritableName extends ResourceWithWritableName {
}

/**
 * A server firewall rule.
 */
export interface FirewallRule extends ProxyResourceWithWritableName {
  /**
   * The start IP address of the firewall rule. Must be IPv4 format. Use value '0.0.0.0' for all
   * Azure-internal IP addresses.
   */
  startIpAddress?: string;
  /**
   * The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to
   * startIpAddress. Use value '0.0.0.0' for all Azure-internal IP addresses.
   */
  endIpAddress?: string;
}

/**
 * A list of server firewall rules.
 */
export interface FirewallRuleList {
  values?: FirewallRule[];
}

/**
 * Azure Active Directory identity configuration for a resource.
 */
export interface ResourceIdentity {
  /**
   * The Azure Active Directory principal id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an
   * Azure Active Directory principal for the resource. Possible values include: 'None',
   * 'SystemAssigned', 'UserAssigned'
   */
  type?: IdentityType;
  /**
   * The Azure Active Directory tenant id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
}

/**
 * An ARM Resource SKU.
 */
export interface Sku {
  /**
   * The name of the SKU, typically, a letter + Number code, e.g. P3.
   */
  name: string;
  /**
   * The tier or edition of the particular SKU, e.g. Basic, Premium.
   */
  tier?: string;
  /**
   * Size of the particular SKU
   */
  size?: string;
  /**
   * If the service has different generations of hardware, for the same SKU, then that can be
   * captured here.
   */
  family?: string;
  /**
   * Capacity of the particular SKU.
   */
  capacity?: number;
}

/**
 * An Azure SQL managed instance.
 */
export interface ManagedInstance extends TrackedResource {
  /**
   * The Azure Active Directory identity of the managed instance.
   */
  identity?: ResourceIdentity;
  /**
   * Managed instance SKU. Allowed values for sku.name: GP_Gen4, GP_Gen5, BC_Gen4, BC_Gen5
   */
  sku?: Sku;
  /**
   * Specifies the mode of database creation.
   *
   * Default: Regular instance creation.
   *
   * Restore: Creates an instance by restoring a set of backups to specific point in time.
   * RestorePointInTime and SourceManagedInstanceId must be specified. Possible values include:
   * 'Default', 'PointInTimeRestore'
   */
  managedInstanceCreateMode?: ManagedServerCreateMode;
  /**
   * The fully qualified domain name of the managed instance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly fullyQualifiedDomainName?: string;
  /**
   * Administrator username for the managed instance. Can only be specified when the managed
   * instance is being created (and is required for creation).
   */
  administratorLogin?: string;
  /**
   * The administrator login password (required for managed instance creation).
   */
  administratorLoginPassword?: string;
  /**
   * Subnet resource ID for the managed instance.
   */
  subnetId?: string;
  /**
   * The state of the managed instance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: string;
  /**
   * The license type. Possible values are 'LicenseIncluded' (regular price inclusive of a new SQL
   * license) and 'BasePrice' (discounted AHB price for bringing your own SQL licenses). Possible
   * values include: 'LicenseIncluded', 'BasePrice'
   */
  licenseType?: ManagedInstanceLicenseType;
  /**
   * The number of vCores. Allowed values: 8, 16, 24, 32, 40, 64, 80.
   */
  vCores?: number;
  /**
   * Storage size in GB. Minimum value: 32. Maximum value: 8192. Increments of 32 GB allowed only.
   */
  storageSizeInGB?: number;
  /**
   * Collation of the managed instance.
   */
  collation?: string;
  /**
   * The Dns Zone that the managed instance is in.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dnsZone?: string;
  /**
   * The resource id of another managed instance whose DNS zone this managed instance will share
   * after creation.
   */
  dnsZonePartner?: string;
  /**
   * Whether or not the public data endpoint is enabled.
   */
  publicDataEndpointEnabled?: boolean;
  /**
   * The resource identifier of the source managed instance associated with create operation of
   * this instance.
   */
  sourceManagedInstanceId?: string;
  /**
   * Specifies the point in time (ISO8601 format) of the source database that will be restored to
   * create the new database.
   */
  restorePointInTime?: Date;
  /**
   * Connection type used for connecting to the instance. Possible values include: 'Proxy',
   * 'Redirect', 'Default'
   */
  proxyOverride?: ManagedInstanceProxyOverride;
  /**
   * Id of the timezone. Allowed values are timezones supported by Windows.
   * Windows keeps details on supported timezones, including the id, in registry under
   * KEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones.
   * You can get those registry values via SQL Server by querying SELECT name AS timezone_id FROM
   * sys.time_zone_info.
   * List of Ids can also be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in
   * PowerShell.
   * An example of valid timezone id is "Pacific Standard Time" or "W. Europe Standard Time".
   */
  timezoneId?: string;
  /**
   * The Id of the instance pool this managed server belongs to.
   */
  instancePoolId?: string;
  /**
   * Specifies maintenance configuration id to apply to this managed instance.
   */
  maintenanceConfigurationId?: string;
  /**
   * Minimal TLS version. Allowed values: 'None', '1.0', '1.1', '1.2'
   */
  minimalTlsVersion?: string;
}

/**
 * An update request for an Azure SQL Database managed instance.
 */
export interface ManagedInstanceUpdate {
  /**
   * Managed instance sku
   */
  sku?: Sku;
  /**
   * Specifies the mode of database creation.
   *
   * Default: Regular instance creation.
   *
   * Restore: Creates an instance by restoring a set of backups to specific point in time.
   * RestorePointInTime and SourceManagedInstanceId must be specified. Possible values include:
   * 'Default', 'PointInTimeRestore'
   */
  managedInstanceCreateMode?: ManagedServerCreateMode;
  /**
   * The fully qualified domain name of the managed instance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly fullyQualifiedDomainName?: string;
  /**
   * Administrator username for the managed instance. Can only be specified when the managed
   * instance is being created (and is required for creation).
   */
  administratorLogin?: string;
  /**
   * The administrator login password (required for managed instance creation).
   */
  administratorLoginPassword?: string;
  /**
   * Subnet resource ID for the managed instance.
   */
  subnetId?: string;
  /**
   * The state of the managed instance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: string;
  /**
   * The license type. Possible values are 'LicenseIncluded' (regular price inclusive of a new SQL
   * license) and 'BasePrice' (discounted AHB price for bringing your own SQL licenses). Possible
   * values include: 'LicenseIncluded', 'BasePrice'
   */
  licenseType?: ManagedInstanceLicenseType;
  /**
   * The number of vCores. Allowed values: 8, 16, 24, 32, 40, 64, 80.
   */
  vCores?: number;
  /**
   * Storage size in GB. Minimum value: 32. Maximum value: 8192. Increments of 32 GB allowed only.
   */
  storageSizeInGB?: number;
  /**
   * Collation of the managed instance.
   */
  collation?: string;
  /**
   * The Dns Zone that the managed instance is in.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dnsZone?: string;
  /**
   * The resource id of another managed instance whose DNS zone this managed instance will share
   * after creation.
   */
  dnsZonePartner?: string;
  /**
   * Whether or not the public data endpoint is enabled.
   */
  publicDataEndpointEnabled?: boolean;
  /**
   * The resource identifier of the source managed instance associated with create operation of
   * this instance.
   */
  sourceManagedInstanceId?: string;
  /**
   * Specifies the point in time (ISO8601 format) of the source database that will be restored to
   * create the new database.
   */
  restorePointInTime?: Date;
  /**
   * Connection type used for connecting to the instance. Possible values include: 'Proxy',
   * 'Redirect', 'Default'
   */
  proxyOverride?: ManagedInstanceProxyOverride;
  /**
   * Id of the timezone. Allowed values are timezones supported by Windows.
   * Windows keeps details on supported timezones, including the id, in registry under
   * KEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones.
   * You can get those registry values via SQL Server by querying SELECT name AS timezone_id FROM
   * sys.time_zone_info.
   * List of Ids can also be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in
   * PowerShell.
   * An example of valid timezone id is "Pacific Standard Time" or "W. Europe Standard Time".
   */
  timezoneId?: string;
  /**
   * The Id of the instance pool this managed server belongs to.
   */
  instancePoolId?: string;
  /**
   * Specifies maintenance configuration id to apply to this managed instance.
   */
  maintenanceConfigurationId?: string;
  /**
   * Minimal TLS version. Allowed values: 'None', '1.0', '1.1', '1.2'
   */
  minimalTlsVersion?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Display metadata associated with the operation.
 */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: string;
  /**
   * The localized friendly form of the resource type related to this action/operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resource?: string;
  /**
   * The localized friendly name for the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * The localized friendly description for the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
}

/**
 * SQL REST API operation definition.
 */
export interface Operation {
  /**
   * The name of the operation being performed on this particular object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The localized display information for this particular operation / action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly display?: OperationDisplay;
  /**
   * The intended executor of the operation. Possible values include: 'user', 'system'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly origin?: OperationOrigin;
  /**
   * Additional descriptions for the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly properties?: { [propertyName: string]: any };
}

/**
 * A server key.
 */
export interface ServerKey extends ProxyResource {
  /**
   * Kind of encryption protector. This is metadata used for the Azure portal experience.
   */
  kind?: string;
  /**
   * Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Subregion of the server key.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subregion?: string;
  /**
   * The server key type like 'ServiceManaged', 'AzureKeyVault'. Possible values include:
   * 'ServiceManaged', 'AzureKeyVault'
   */
  serverKeyType: ServerKeyType;
  /**
   * The URI of the server key.
   */
  uri?: string;
  /**
   * Thumbprint of the server key.
   */
  thumbprint?: string;
  /**
   * The server key creation date.
   */
  creationDate?: Date;
}

/**
 * An Azure SQL Database server.
 */
export interface Server extends TrackedResource {
  /**
   * The Azure Active Directory identity of the server.
   */
  identity?: ResourceIdentity;
  /**
   * Kind of sql server. This is metadata used for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Administrator username for the server. Once created it cannot be changed.
   */
  administratorLogin?: string;
  /**
   * The administrator login password (required for server creation).
   */
  administratorLoginPassword?: string;
  /**
   * The version of the server.
   */
  version?: string;
  /**
   * The state of the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: string;
  /**
   * The fully qualified domain name of the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly fullyQualifiedDomainName?: string;
}

/**
 * An update request for an Azure SQL Database server.
 */
export interface ServerUpdate {
  /**
   * Administrator username for the server. Once created it cannot be changed.
   */
  administratorLogin?: string;
  /**
   * The administrator login password (required for server creation).
   */
  administratorLoginPassword?: string;
  /**
   * The version of the server.
   */
  version?: string;
  /**
   * The state of the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: string;
  /**
   * The fully qualified domain name of the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly fullyQualifiedDomainName?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * An Azure SQL Database sync agent.
 */
export interface SyncAgent extends ProxyResource {
  /**
   * Name of the sync agent.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly syncAgentName?: string;
  /**
   * ARM resource id of the sync database in the sync agent.
   */
  syncDatabaseId?: string;
  /**
   * Last alive time of the sync agent.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastAliveTime?: Date;
  /**
   * State of the sync agent. Possible values include: 'Online', 'Offline', 'NeverConnected'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: SyncAgentState;
  /**
   * If the sync agent version is up to date.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isUpToDate?: boolean;
  /**
   * Expiration time of the sync agent version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly expiryTime?: Date;
  /**
   * Version of the sync agent.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: string;
}

/**
 * Properties of an Azure SQL Database sync agent key.
 */
export interface SyncAgentKeyProperties {
  /**
   * Key of sync agent.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly syncAgentKey?: string;
}

/**
 * An Azure SQL Database sync agent linked database.
 */
export interface SyncAgentLinkedDatabase extends ProxyResource {
  /**
   * Type of the sync agent linked database. Possible values include: 'AzureSqlDatabase',
   * 'SqlServerDatabase'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseType?: SyncMemberDbType;
  /**
   * Id of the sync agent linked database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseId?: string;
  /**
   * Description of the sync agent linked database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Server name of the sync agent linked database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serverName?: string;
  /**
   * Database name of the sync agent linked database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseName?: string;
  /**
   * User name of the sync agent linked database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userName?: string;
}

/**
 * Properties of the sync database id.
 */
export interface SyncDatabaseIdProperties {
  /**
   * ARM resource id of sync database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
}

/**
 * Properties of the column in the table of database full schema.
 */
export interface SyncFullSchemaTableColumn {
  /**
   * Data size of the column.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSize?: string;
  /**
   * Data type of the column.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataType?: string;
  /**
   * Error id of the column.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorId?: string;
  /**
   * If there is error in the table.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hasError?: boolean;
  /**
   * If it is the primary key of the table.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isPrimaryKey?: boolean;
  /**
   * Name of the column.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Quoted name of the column.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly quotedName?: string;
}

/**
 * Properties of the table in the database full schema.
 */
export interface SyncFullSchemaTable {
  /**
   * List of columns in the table of database full schema.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly columns?: SyncFullSchemaTableColumn[];
  /**
   * Error id of the table.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorId?: string;
  /**
   * If there is error in the table.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hasError?: boolean;
  /**
   * Name of the table.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Quoted name of the table.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly quotedName?: string;
}

/**
 * Properties of the database full schema.
 */
export interface SyncFullSchemaProperties {
  /**
   * List of tables in the database full schema.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tables?: SyncFullSchemaTable[];
  /**
   * Last update time of the database schema.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdateTime?: Date;
}

/**
 * Properties of an Azure SQL Database sync group log.
 */
export interface SyncGroupLogProperties {
  /**
   * Timestamp of the sync group log.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timestamp?: Date;
  /**
   * Type of the sync group log. Possible values include: 'All', 'Error', 'Warning', 'Success'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: SyncGroupLogType;
  /**
   * Source of the sync group log.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly source?: string;
  /**
   * Details of the sync group log.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: string;
  /**
   * TracingId of the sync group log.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tracingId?: string;
  /**
   * OperationStatus of the sync group log.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operationStatus?: string;
}

/**
 * Properties of column in sync group table.
 */
export interface SyncGroupSchemaTableColumn {
  /**
   * Quoted name of sync group table column.
   */
  quotedName?: string;
  /**
   * Data size of the column.
   */
  dataSize?: string;
  /**
   * Data type of the column.
   */
  dataType?: string;
}

/**
 * Properties of table in sync group schema.
 */
export interface SyncGroupSchemaTable {
  /**
   * List of columns in sync group schema.
   */
  columns?: SyncGroupSchemaTableColumn[];
  /**
   * Quoted name of sync group schema table.
   */
  quotedName?: string;
}

/**
 * Properties of sync group schema.
 */
export interface SyncGroupSchema {
  /**
   * List of tables in sync group schema.
   */
  tables?: SyncGroupSchemaTable[];
  /**
   * Name of master sync member where the schema is from.
   */
  masterSyncMemberName?: string;
}

/**
 * An Azure SQL Database sync group.
 */
export interface SyncGroup extends ProxyResource {
  /**
   * Sync interval of the sync group.
   */
  interval?: number;
  /**
   * Last sync time of the sync group.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastSyncTime?: Date;
  /**
   * Conflict resolution policy of the sync group. Possible values include: 'HubWin', 'MemberWin'
   */
  conflictResolutionPolicy?: SyncConflictResolutionPolicy;
  /**
   * ARM resource id of the sync database in the sync group.
   */
  syncDatabaseId?: string;
  /**
   * User name for the sync group hub database credential.
   */
  hubDatabaseUserName?: string;
  /**
   * Password for the sync group hub database credential.
   */
  hubDatabasePassword?: string;
  /**
   * Sync state of the sync group. Possible values include: 'NotReady', 'Error', 'Warning',
   * 'Progressing', 'Good'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly syncState?: SyncGroupState;
  /**
   * Sync schema of the sync group.
   */
  schema?: SyncGroupSchema;
}

/**
 * An Azure SQL Database sync member.
 */
export interface SyncMember extends ProxyResource {
  /**
   * Database type of the sync member. Possible values include: 'AzureSqlDatabase',
   * 'SqlServerDatabase'
   */
  databaseType?: SyncMemberDbType;
  /**
   * ARM resource id of the sync agent in the sync member.
   */
  syncAgentId?: string;
  /**
   * SQL Server database id of the sync member.
   */
  sqlServerDatabaseId?: string;
  /**
   * Server name of the member database in the sync member
   */
  serverName?: string;
  /**
   * Database name of the member database in the sync member.
   */
  databaseName?: string;
  /**
   * User name of the member database in the sync member.
   */
  userName?: string;
  /**
   * Password of the member database in the sync member.
   */
  password?: string;
  /**
   * Sync direction of the sync member. Possible values include: 'Bidirectional',
   * 'OneWayMemberToHub', 'OneWayHubToMember'
   */
  syncDirection?: SyncDirection;
  /**
   * Sync state of the sync member. Possible values include: 'SyncInProgress', 'SyncSucceeded',
   * 'SyncFailed', 'DisabledTombstoneCleanup', 'DisabledBackupRestore',
   * 'SyncSucceededWithWarnings', 'SyncCancelling', 'SyncCancelled', 'UnProvisioned',
   * 'Provisioning', 'Provisioned', 'ProvisionFailed', 'DeProvisioning', 'DeProvisioned',
   * 'DeProvisionFailed', 'Reprovisioning', 'ReprovisionFailed', 'UnReprovisioned'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly syncState?: SyncMemberState;
}

/**
 * Usage Metric of a Subscription in a Location.
 */
export interface SubscriptionUsage extends ProxyResource {
  /**
   * User-readable name of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * Current value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentValue?: number;
  /**
   * Boundary value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * Unit of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: string;
}

/**
 * An Azure SQL virtual cluster.
 */
export interface VirtualCluster extends TrackedResource {
  /**
   * Subnet resource ID for the virtual cluster.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subnetId?: string;
  /**
   * If the service has different generations of hardware, for the same SKU, then that can be
   * captured here.
   */
  family?: string;
  /**
   * List of resources in this virtual cluster.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly childResources?: string[];
}

/**
 * An update request for an Azure SQL Database virtual cluster.
 */
export interface VirtualClusterUpdate {
  /**
   * Subnet resource ID for the virtual cluster.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subnetId?: string;
  /**
   * If the service has different generations of hardware, for the same SKU, then that can be
   * captured here.
   */
  family?: string;
  /**
   * List of resources in this virtual cluster.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly childResources?: string[];
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A virtual network rule.
 */
export interface VirtualNetworkRule extends ProxyResource {
  /**
   * The ARM resource id of the virtual network subnet.
   */
  virtualNetworkSubnetId: string;
  /**
   * Create firewall rule before the virtual network has vnet service endpoint enabled.
   */
  ignoreMissingVnetServiceEndpoint?: boolean;
  /**
   * Virtual Network Rule State. Possible values include: 'Initializing', 'InProgress', 'Ready',
   * 'Deleting', 'Unknown'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: VirtualNetworkRuleState;
}

/**
 * Optional Parameters.
 */
export interface SyncGroupsListLogsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The continuation token for this operation.
   */
  continuationToken?: string;
}

/**
 * Optional Parameters.
 */
export interface SyncGroupsListLogsNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The continuation token for this operation.
   */
  continuationToken?: string;
}

/**
 * An interface representing SqlManagementClientOptions.
 */
export interface SqlManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * A list of database auditing settings.
 * @extends Array<DatabaseBlobAuditingPolicy>
 */
export interface DatabaseBlobAuditingPolicyListResult extends Array<DatabaseBlobAuditingPolicy> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of server encryption protectors.
 * @extends Array<EncryptionProtector>
 */
export interface EncryptionProtectorListResult extends Array<EncryptionProtector> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of failover groups.
 * @extends Array<FailoverGroup>
 */
export interface FailoverGroupListResult extends Array<FailoverGroup> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The response to a list firewall rules request
 * @extends Array<FirewallRule>
 */
export interface FirewallRuleListResult extends Array<FirewallRule> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of managed instances.
 * @extends Array<ManagedInstance>
 */
export interface ManagedInstanceListResult extends Array<ManagedInstance> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Result of the request to list SQL operations.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of server keys.
 * @extends Array<ServerKey>
 */
export interface ServerKeyListResult extends Array<ServerKey> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of servers.
 * @extends Array<Server>
 */
export interface ServerListResult extends Array<Server> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of sync agents.
 * @extends Array<SyncAgent>
 */
export interface SyncAgentListResult extends Array<SyncAgent> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of sync agent linked databases.
 * @extends Array<SyncAgentLinkedDatabase>
 */
export interface SyncAgentLinkedDatabaseListResult extends Array<SyncAgentLinkedDatabase> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of sync database ID properties.
 * @extends Array<SyncDatabaseIdProperties>
 */
export interface SyncDatabaseIdListResult extends Array<SyncDatabaseIdProperties> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of sync schema properties.
 * @extends Array<SyncFullSchemaProperties>
 */
export interface SyncFullSchemaPropertiesListResult extends Array<SyncFullSchemaProperties> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of sync group log properties.
 * @extends Array<SyncGroupLogProperties>
 */
export interface SyncGroupLogListResult extends Array<SyncGroupLogProperties> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of sync groups.
 * @extends Array<SyncGroup>
 */
export interface SyncGroupListResult extends Array<SyncGroup> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of Azure SQL Database sync members.
 * @extends Array<SyncMember>
 */
export interface SyncMemberListResult extends Array<SyncMember> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of subscription usage metrics in a location.
 * @extends Array<SubscriptionUsage>
 */
export interface SubscriptionUsageListResult extends Array<SubscriptionUsage> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of virtual clusters.
 * @extends Array<VirtualCluster>
 */
export interface VirtualClusterListResult extends Array<VirtualCluster> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of virtual network rules.
 * @extends Array<VirtualNetworkRule>
 */
export interface VirtualNetworkRuleListResult extends Array<VirtualNetworkRule> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for AdvisorStatus.
 * Possible values include: 'GA', 'PublicPreview', 'LimitedPublicPreview', 'PrivatePreview'
 * @readonly
 * @enum {string}
 */
export type AdvisorStatus = 'GA' | 'PublicPreview' | 'LimitedPublicPreview' | 'PrivatePreview';

/**
 * Defines values for AutoExecuteStatus.
 * Possible values include: 'Enabled', 'Disabled', 'Default'
 * @readonly
 * @enum {string}
 */
export type AutoExecuteStatus = 'Enabled' | 'Disabled' | 'Default';

/**
 * Defines values for AutoExecuteStatusInheritedFrom.
 * Possible values include: 'Default', 'Subscription', 'Server', 'ElasticPool', 'Database'
 * @readonly
 * @enum {string}
 */
export type AutoExecuteStatusInheritedFrom = 'Default' | 'Subscription' | 'Server' | 'ElasticPool' | 'Database';

/**
 * Defines values for RecommendedActionCurrentState.
 * Possible values include: 'Active', 'Pending', 'Executing', 'Verifying', 'PendingRevert',
 * 'RevertCancelled', 'Reverting', 'Reverted', 'Ignored', 'Expired', 'Monitoring', 'Resolved',
 * 'Success', 'Error'
 * @readonly
 * @enum {string}
 */
export type RecommendedActionCurrentState = 'Active' | 'Pending' | 'Executing' | 'Verifying' | 'PendingRevert' | 'RevertCancelled' | 'Reverting' | 'Reverted' | 'Ignored' | 'Expired' | 'Monitoring' | 'Resolved' | 'Success' | 'Error';

/**
 * Defines values for RecommendedActionInitiatedBy.
 * Possible values include: 'User', 'System'
 * @readonly
 * @enum {string}
 */
export type RecommendedActionInitiatedBy = 'User' | 'System';

/**
 * Defines values for ImplementationMethod.
 * Possible values include: 'TSql', 'AzurePowerShell'
 * @readonly
 * @enum {string}
 */
export type ImplementationMethod = 'TSql' | 'AzurePowerShell';

/**
 * Defines values for IsRetryable.
 * Possible values include: 'Yes', 'No'
 * @readonly
 * @enum {string}
 */
export type IsRetryable = 'Yes' | 'No';

/**
 * Defines values for BlobAuditingPolicyState.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type BlobAuditingPolicyState = 'Enabled' | 'Disabled';

/**
 * Defines values for AutomaticTuningMode.
 * Possible values include: 'Inherit', 'Custom', 'Auto', 'Unspecified'
 * @readonly
 * @enum {string}
 */
export type AutomaticTuningMode = 'Inherit' | 'Custom' | 'Auto' | 'Unspecified';

/**
 * Defines values for AutomaticTuningOptionModeDesired.
 * Possible values include: 'Off', 'On', 'Default'
 * @readonly
 * @enum {string}
 */
export type AutomaticTuningOptionModeDesired = 'Off' | 'On' | 'Default';

/**
 * Defines values for AutomaticTuningOptionModeActual.
 * Possible values include: 'Off', 'On'
 * @readonly
 * @enum {string}
 */
export type AutomaticTuningOptionModeActual = 'Off' | 'On';

/**
 * Defines values for AutomaticTuningDisabledReason.
 * Possible values include: 'Default', 'Disabled', 'AutoConfigured', 'InheritedFromServer',
 * 'QueryStoreOff', 'QueryStoreReadOnly', 'NotSupported'
 * @readonly
 * @enum {string}
 */
export type AutomaticTuningDisabledReason = 'Default' | 'Disabled' | 'AutoConfigured' | 'InheritedFromServer' | 'QueryStoreOff' | 'QueryStoreReadOnly' | 'NotSupported';

/**
 * Defines values for ServerKeyType.
 * Possible values include: 'ServiceManaged', 'AzureKeyVault'
 * @readonly
 * @enum {string}
 */
export type ServerKeyType = 'ServiceManaged' | 'AzureKeyVault';

/**
 * Defines values for ReadWriteEndpointFailoverPolicy.
 * Possible values include: 'Manual', 'Automatic'
 * @readonly
 * @enum {string}
 */
export type ReadWriteEndpointFailoverPolicy = 'Manual' | 'Automatic';

/**
 * Defines values for ReadOnlyEndpointFailoverPolicy.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export type ReadOnlyEndpointFailoverPolicy = 'Disabled' | 'Enabled';

/**
 * Defines values for FailoverGroupReplicationRole.
 * Possible values include: 'Primary', 'Secondary'
 * @readonly
 * @enum {string}
 */
export type FailoverGroupReplicationRole = 'Primary' | 'Secondary';

/**
 * Defines values for IdentityType.
 * Possible values include: 'None', 'SystemAssigned', 'UserAssigned'
 * @readonly
 * @enum {string}
 */
export type IdentityType = 'None' | 'SystemAssigned' | 'UserAssigned';

/**
 * Defines values for ManagedServerCreateMode.
 * Possible values include: 'Default', 'PointInTimeRestore'
 * @readonly
 * @enum {string}
 */
export type ManagedServerCreateMode = 'Default' | 'PointInTimeRestore';

/**
 * Defines values for ManagedInstanceLicenseType.
 * Possible values include: 'LicenseIncluded', 'BasePrice'
 * @readonly
 * @enum {string}
 */
export type ManagedInstanceLicenseType = 'LicenseIncluded' | 'BasePrice';

/**
 * Defines values for ManagedInstanceProxyOverride.
 * Possible values include: 'Proxy', 'Redirect', 'Default'
 * @readonly
 * @enum {string}
 */
export type ManagedInstanceProxyOverride = 'Proxy' | 'Redirect' | 'Default';

/**
 * Defines values for OperationOrigin.
 * Possible values include: 'user', 'system'
 * @readonly
 * @enum {string}
 */
export type OperationOrigin = 'user' | 'system';

/**
 * Defines values for SyncAgentState.
 * Possible values include: 'Online', 'Offline', 'NeverConnected'
 * @readonly
 * @enum {string}
 */
export type SyncAgentState = 'Online' | 'Offline' | 'NeverConnected';

/**
 * Defines values for SyncMemberDbType.
 * Possible values include: 'AzureSqlDatabase', 'SqlServerDatabase'
 * @readonly
 * @enum {string}
 */
export type SyncMemberDbType = 'AzureSqlDatabase' | 'SqlServerDatabase';

/**
 * Defines values for SyncGroupLogType.
 * Possible values include: 'All', 'Error', 'Warning', 'Success'
 * @readonly
 * @enum {string}
 */
export type SyncGroupLogType = 'All' | 'Error' | 'Warning' | 'Success';

/**
 * Defines values for SyncConflictResolutionPolicy.
 * Possible values include: 'HubWin', 'MemberWin'
 * @readonly
 * @enum {string}
 */
export type SyncConflictResolutionPolicy = 'HubWin' | 'MemberWin';

/**
 * Defines values for SyncGroupState.
 * Possible values include: 'NotReady', 'Error', 'Warning', 'Progressing', 'Good'
 * @readonly
 * @enum {string}
 */
export type SyncGroupState = 'NotReady' | 'Error' | 'Warning' | 'Progressing' | 'Good';

/**
 * Defines values for SyncDirection.
 * Possible values include: 'Bidirectional', 'OneWayMemberToHub', 'OneWayHubToMember'
 * @readonly
 * @enum {string}
 */
export type SyncDirection = 'Bidirectional' | 'OneWayMemberToHub' | 'OneWayHubToMember';

/**
 * Defines values for SyncMemberState.
 * Possible values include: 'SyncInProgress', 'SyncSucceeded', 'SyncFailed',
 * 'DisabledTombstoneCleanup', 'DisabledBackupRestore', 'SyncSucceededWithWarnings',
 * 'SyncCancelling', 'SyncCancelled', 'UnProvisioned', 'Provisioning', 'Provisioned',
 * 'ProvisionFailed', 'DeProvisioning', 'DeProvisioned', 'DeProvisionFailed', 'Reprovisioning',
 * 'ReprovisionFailed', 'UnReprovisioned'
 * @readonly
 * @enum {string}
 */
export type SyncMemberState = 'SyncInProgress' | 'SyncSucceeded' | 'SyncFailed' | 'DisabledTombstoneCleanup' | 'DisabledBackupRestore' | 'SyncSucceededWithWarnings' | 'SyncCancelling' | 'SyncCancelled' | 'UnProvisioned' | 'Provisioning' | 'Provisioned' | 'ProvisionFailed' | 'DeProvisioning' | 'DeProvisioned' | 'DeProvisionFailed' | 'Reprovisioning' | 'ReprovisionFailed' | 'UnReprovisioned';

/**
 * Defines values for VirtualNetworkRuleState.
 * Possible values include: 'Initializing', 'InProgress', 'Ready', 'Deleting', 'Unknown'
 * @readonly
 * @enum {string}
 */
export type VirtualNetworkRuleState = 'Initializing' | 'InProgress' | 'Ready' | 'Deleting' | 'Unknown';

/**
 * Defines values for Type.
 * Possible values include: 'All', 'Error', 'Warning', 'Success'
 * @readonly
 * @enum {string}
 */
export type Type = 'All' | 'Error' | 'Warning' | 'Success';

/**
 * Contains response data for the listByDatabase operation.
 */
export type DatabaseAdvisorsListByDatabaseResponse = Array<Advisor> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Advisor[];
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseAdvisorsGetResponse = Advisor & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Advisor;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DatabaseAdvisorsUpdateResponse = Advisor & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Advisor;
    };
};

/**
 * Contains response data for the listByDatabaseAdvisor operation.
 */
export type DatabaseRecommendedActionsListByDatabaseAdvisorResponse = Array<RecommendedAction> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendedAction[];
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseRecommendedActionsGetResponse = RecommendedAction & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendedAction;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DatabaseRecommendedActionsUpdateResponse = RecommendedAction & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendedAction;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServerAdvisorsListByServerResponse = Array<Advisor> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Advisor[];
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerAdvisorsGetResponse = Advisor & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Advisor;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ServerAdvisorsUpdateResponse = Advisor & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Advisor;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseBlobAuditingPoliciesGetResponse = DatabaseBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabaseBlobAuditingPoliciesCreateOrUpdateResponse = DatabaseBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type DatabaseBlobAuditingPoliciesListByDatabaseResponse = DatabaseBlobAuditingPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseBlobAuditingPolicyListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type DatabaseBlobAuditingPoliciesListByDatabaseNextResponse = DatabaseBlobAuditingPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseBlobAuditingPolicyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseAutomaticTuningGetResponse = DatabaseAutomaticTuning & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseAutomaticTuning;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DatabaseAutomaticTuningUpdateResponse = DatabaseAutomaticTuning & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseAutomaticTuning;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type EncryptionProtectorsListByServerResponse = EncryptionProtectorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EncryptionProtectorListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EncryptionProtectorsGetResponse = EncryptionProtector & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EncryptionProtector;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type EncryptionProtectorsCreateOrUpdateResponse = EncryptionProtector & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EncryptionProtector;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type EncryptionProtectorsBeginCreateOrUpdateResponse = EncryptionProtector & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EncryptionProtector;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type EncryptionProtectorsListByServerNextResponse = EncryptionProtectorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EncryptionProtectorListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type FailoverGroupsGetResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type FailoverGroupsCreateOrUpdateResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the update operation.
 */
export type FailoverGroupsUpdateResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type FailoverGroupsListByServerResponse = FailoverGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroupListResult;
    };
};

/**
 * Contains response data for the failover operation.
 */
export type FailoverGroupsFailoverResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the forceFailoverAllowDataLoss operation.
 */
export type FailoverGroupsForceFailoverAllowDataLossResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type FailoverGroupsBeginCreateOrUpdateResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type FailoverGroupsBeginUpdateResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the beginFailover operation.
 */
export type FailoverGroupsBeginFailoverResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the beginForceFailoverAllowDataLoss operation.
 */
export type FailoverGroupsBeginForceFailoverAllowDataLossResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type FailoverGroupsListByServerNextResponse = FailoverGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroupListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type FirewallRulesGetResponse = FirewallRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRule;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type FirewallRulesCreateOrUpdateResponse = FirewallRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRule;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type FirewallRulesListByServerResponse = FirewallRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRuleListResult;
    };
};

/**
 * Contains response data for the replace operation.
 */
export type FirewallRulesReplaceResponse = FirewallRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRule;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type FirewallRulesListByServerNextResponse = FirewallRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRuleListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ManagedInstancesListByResourceGroupResponse = ManagedInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedInstancesGetResponse = ManagedInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstance;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedInstancesCreateOrUpdateResponse = ManagedInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstance;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ManagedInstancesUpdateResponse = ManagedInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstance;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ManagedInstancesListResponse = ManagedInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedInstancesBeginCreateOrUpdateResponse = ManagedInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstance;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ManagedInstancesBeginUpdateResponse = ManagedInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstance;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ManagedInstancesListByResourceGroupNextResponse = ManagedInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ManagedInstancesListNextResponse = ManagedInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServerKeysListByServerResponse = ServerKeyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerKeyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerKeysGetResponse = ServerKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerKey;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerKeysCreateOrUpdateResponse = ServerKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerKey;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServerKeysBeginCreateOrUpdateResponse = ServerKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerKey;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type ServerKeysListByServerNextResponse = ServerKeyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerKeyListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ServersListResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ServersListByResourceGroupResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServersGetResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServersCreateOrUpdateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ServersUpdateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServersBeginCreateOrUpdateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ServersBeginUpdateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ServersListNextResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ServersListByResourceGroupNextResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SyncAgentsGetResponse = SyncAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgent;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SyncAgentsCreateOrUpdateResponse = SyncAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgent;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type SyncAgentsListByServerResponse = SyncAgentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgentListResult;
    };
};

/**
 * Contains response data for the generateKey operation.
 */
export type SyncAgentsGenerateKeyResponse = SyncAgentKeyProperties & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgentKeyProperties;
    };
};

/**
 * Contains response data for the listLinkedDatabases operation.
 */
export type SyncAgentsListLinkedDatabasesResponse = SyncAgentLinkedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgentLinkedDatabaseListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type SyncAgentsBeginCreateOrUpdateResponse = SyncAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgent;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type SyncAgentsListByServerNextResponse = SyncAgentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgentListResult;
    };
};

/**
 * Contains response data for the listLinkedDatabasesNext operation.
 */
export type SyncAgentsListLinkedDatabasesNextResponse = SyncAgentLinkedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgentLinkedDatabaseListResult;
    };
};

/**
 * Contains response data for the listSyncDatabaseIds operation.
 */
export type SyncGroupsListSyncDatabaseIdsResponse = SyncDatabaseIdListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncDatabaseIdListResult;
    };
};

/**
 * Contains response data for the listHubSchemas operation.
 */
export type SyncGroupsListHubSchemasResponse = SyncFullSchemaPropertiesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncFullSchemaPropertiesListResult;
    };
};

/**
 * Contains response data for the listLogs operation.
 */
export type SyncGroupsListLogsResponse = SyncGroupLogListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroupLogListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SyncGroupsGetResponse = SyncGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroup;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SyncGroupsCreateOrUpdateResponse = SyncGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroup;
    };
};

/**
 * Contains response data for the update operation.
 */
export type SyncGroupsUpdateResponse = SyncGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroup;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type SyncGroupsListByDatabaseResponse = SyncGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroupListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type SyncGroupsBeginCreateOrUpdateResponse = SyncGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroup;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type SyncGroupsBeginUpdateResponse = SyncGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroup;
    };
};

/**
 * Contains response data for the listSyncDatabaseIdsNext operation.
 */
export type SyncGroupsListSyncDatabaseIdsNextResponse = SyncDatabaseIdListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncDatabaseIdListResult;
    };
};

/**
 * Contains response data for the listHubSchemasNext operation.
 */
export type SyncGroupsListHubSchemasNextResponse = SyncFullSchemaPropertiesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncFullSchemaPropertiesListResult;
    };
};

/**
 * Contains response data for the listLogsNext operation.
 */
export type SyncGroupsListLogsNextResponse = SyncGroupLogListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroupLogListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type SyncGroupsListByDatabaseNextResponse = SyncGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroupListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SyncMembersGetResponse = SyncMember & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMember;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SyncMembersCreateOrUpdateResponse = SyncMember & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMember;
    };
};

/**
 * Contains response data for the update operation.
 */
export type SyncMembersUpdateResponse = SyncMember & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMember;
    };
};

/**
 * Contains response data for the listBySyncGroup operation.
 */
export type SyncMembersListBySyncGroupResponse = SyncMemberListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMemberListResult;
    };
};

/**
 * Contains response data for the listMemberSchemas operation.
 */
export type SyncMembersListMemberSchemasResponse = SyncFullSchemaPropertiesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncFullSchemaPropertiesListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type SyncMembersBeginCreateOrUpdateResponse = SyncMember & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMember;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type SyncMembersBeginUpdateResponse = SyncMember & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMember;
    };
};

/**
 * Contains response data for the listBySyncGroupNext operation.
 */
export type SyncMembersListBySyncGroupNextResponse = SyncMemberListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMemberListResult;
    };
};

/**
 * Contains response data for the listMemberSchemasNext operation.
 */
export type SyncMembersListMemberSchemasNextResponse = SyncFullSchemaPropertiesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncFullSchemaPropertiesListResult;
    };
};

/**
 * Contains response data for the listByLocation operation.
 */
export type SubscriptionUsagesListByLocationResponse = SubscriptionUsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionUsageListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SubscriptionUsagesGetResponse = SubscriptionUsage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionUsage;
    };
};

/**
 * Contains response data for the listByLocationNext operation.
 */
export type SubscriptionUsagesListByLocationNextResponse = SubscriptionUsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionUsageListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualClustersListResponse = VirtualClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualClusterListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type VirtualClustersListByResourceGroupResponse = VirtualClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualClusterListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualClustersGetResponse = VirtualCluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualCluster;
    };
};

/**
 * Contains response data for the update operation.
 */
export type VirtualClustersUpdateResponse = VirtualCluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualCluster;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type VirtualClustersBeginUpdateResponse = VirtualCluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualCluster;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type VirtualClustersListNextResponse = VirtualClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualClusterListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type VirtualClustersListByResourceGroupNextResponse = VirtualClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualClusterListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualNetworkRulesGetResponse = VirtualNetworkRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRule;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type VirtualNetworkRulesCreateOrUpdateResponse = VirtualNetworkRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRule;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type VirtualNetworkRulesListByServerResponse = VirtualNetworkRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRuleListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type VirtualNetworkRulesBeginCreateOrUpdateResponse = VirtualNetworkRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRule;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type VirtualNetworkRulesListByServerNextResponse = VirtualNetworkRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRuleListResult;
    };
};
