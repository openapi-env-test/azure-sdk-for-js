/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { SqlManagementClientContext } from "./sqlManagementClientContext";


class SqlManagementClient extends SqlManagementClientContext {
  // Operation groups
  databaseSecurityAlertPolicies: operations.DatabaseSecurityAlertPolicies;
  managedDatabaseSensitivityLabels: operations.ManagedDatabaseSensitivityLabels;
  managedInstanceVulnerabilityAssessments: operations.ManagedInstanceVulnerabilityAssessments;
  managedInstanceOperations: operations.ManagedInstanceOperations;
  serverVulnerabilityAssessments: operations.ServerVulnerabilityAssessments;
  instancePools: operations.InstancePools;
  usages: operations.Usages;
  managedInstances: operations.ManagedInstances;
  managedDatabaseRestoreDetails: operations.ManagedDatabaseRestoreDetails;
  managedDatabases: operations.ManagedDatabases;
  databases: operations.Databases;
  elasticPools: operations.ElasticPools;
  privateEndpointConnections: operations.PrivateEndpointConnections;
  serverAzureADAdministrators: operations.ServerAzureADAdministrators;
  managedInstanceLongTermRetentionPolicies: operations.ManagedInstanceLongTermRetentionPolicies;
  longTermRetentionManagedInstanceBackups: operations.LongTermRetentionManagedInstanceBackups;

  /**
   * Initializes a new instance of the SqlManagementClient class.
   * @param credentials Credentials needed for the client to connect to Azure.
   * @param subscriptionId The subscription ID that identifies an Azure subscription.
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials, subscriptionId: string, options?: Models.SqlManagementClientOptions) {
    super(credentials, subscriptionId, options);
    this.databaseSecurityAlertPolicies = new operations.DatabaseSecurityAlertPolicies(this);
    this.managedDatabaseSensitivityLabels = new operations.ManagedDatabaseSensitivityLabels(this);
    this.managedInstanceVulnerabilityAssessments = new operations.ManagedInstanceVulnerabilityAssessments(this);
    this.managedInstanceOperations = new operations.ManagedInstanceOperations(this);
    this.serverVulnerabilityAssessments = new operations.ServerVulnerabilityAssessments(this);
    this.instancePools = new operations.InstancePools(this);
    this.usages = new operations.Usages(this);
    this.managedInstances = new operations.ManagedInstances(this);
    this.managedDatabaseRestoreDetails = new operations.ManagedDatabaseRestoreDetails(this);
    this.managedDatabases = new operations.ManagedDatabases(this);
    this.databases = new operations.Databases(this);
    this.elasticPools = new operations.ElasticPools(this);
    this.privateEndpointConnections = new operations.PrivateEndpointConnections(this);
    this.serverAzureADAdministrators = new operations.ServerAzureADAdministrators(this);
    this.managedInstanceLongTermRetentionPolicies = new operations.ManagedInstanceLongTermRetentionPolicies(this);
    this.longTermRetentionManagedInstanceBackups = new operations.LongTermRetentionManagedInstanceBackups(this);
  }
}

// Operation Specifications

export {
  SqlManagementClient,
  SqlManagementClientContext,
  Models as SqlManagementModels,
  Mappers as SqlManagementMappers
};
export * from "./operations";
