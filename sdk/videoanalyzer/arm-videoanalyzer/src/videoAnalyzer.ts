/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreAuth from "@azure/core-auth";
import {
  OperationsImpl,
  VideoAnalyzersImpl,
  LocationsImpl,
  EdgeModulesImpl,
  VideosImpl,
  AccessPoliciesImpl
} from "./operations";
import {
  Operations,
  VideoAnalyzers,
  Locations,
  EdgeModules,
  Videos,
  AccessPolicies
} from "./operationsInterfaces";
import { VideoAnalyzerContext } from "./videoAnalyzerContext";
import { VideoAnalyzerOptionalParams } from "./models";

export class VideoAnalyzer extends VideoAnalyzerContext {
  /**
   * Initializes a new instance of the VideoAnalyzer class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId The ID of the target subscription.
   * @param options The parameter options
   */
  constructor(
    credentials: coreAuth.TokenCredential,
    subscriptionId: string,
    options?: VideoAnalyzerOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.operations = new OperationsImpl(this);
    this.videoAnalyzers = new VideoAnalyzersImpl(this);
    this.locations = new LocationsImpl(this);
    this.edgeModules = new EdgeModulesImpl(this);
    this.videos = new VideosImpl(this);
    this.accessPolicies = new AccessPoliciesImpl(this);
  }

  operations: Operations;
  videoAnalyzers: VideoAnalyzers;
  locations: Locations;
  edgeModules: EdgeModules;
  videos: Videos;
  accessPolicies: AccessPolicies;
}
