/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type AuthenticationBaseUnion = AuthenticationBase | JwtAuthentication;
export type TokenKeyUnion = TokenKey | RsaTokenKey | EccTokenKey;

/** A collection of Operation items. */
export interface OperationCollection {
  /** A collection of Operation items. */
  value?: Operation[];
}

/** An operation. */
export interface Operation {
  /** The operation name. */
  name: string;
  /** The operation display name. */
  display?: OperationDisplay;
  /** Origin of the operation. */
  origin?: string;
  /** Operation properties format. */
  properties?: Properties;
  /** Whether the operation applies to data-plane. */
  isDataAction?: boolean;
  /** Indicates the action type. */
  actionType?: ActionType;
}

/** Operation details. */
export interface OperationDisplay {
  /** The service provider. */
  provider?: string;
  /** Resource on which the operation is performed. */
  resource?: string;
  /** The operation type. */
  operation?: string;
  /** The operation description. */
  description?: string;
}

/** Metric properties. */
export interface Properties {
  /**
   * The service specifications.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceSpecification?: ServiceSpecification;
}

/** The service metric specifications. */
export interface ServiceSpecification {
  /**
   * List of log specifications.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly logSpecifications?: LogSpecification[];
  /**
   * List of metric specifications.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly metricSpecifications?: MetricSpecification[];
}

/** A diagnostic log emitted by service. */
export interface LogSpecification {
  /**
   * The diagnostic log category name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The diagnostic log category display name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The time range for requests in each blob.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly blobDuration?: string;
}

/** A metric emitted by service. */
export interface MetricSpecification {
  /**
   * The metric name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The metric display name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The metric display description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayDescription?: string;
  /**
   * The metric unit
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly unit?: MetricUnit;
  /**
   * The metric aggregation type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly aggregationType?: MetricAggregationType;
  /**
   * The metric lock aggregation type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lockAggregationType?: MetricAggregationType;
  /** Supported aggregation types. */
  supportedAggregationTypes?: string[];
  /**
   * The metric dimensions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dimensions?: MetricDimension[];
  /**
   * Indicates whether regional MDM account is enabled.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly enableRegionalMdmAccount?: boolean;
  /**
   * The source MDM account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceMdmAccount?: string;
  /**
   * The source MDM namespace.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceMdmNamespace?: string;
  /**
   * The supported time grain types.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly supportedTimeGrainTypes?: string[];
}

/** A metric dimension. */
export interface MetricDimension {
  /**
   * The metric dimension name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The display name for the dimension.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * Whether to export metric to shoebox.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly toBeExportedForShoebox?: boolean;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** A collection of VideoAnalyzer items. */
export interface VideoAnalyzerCollection {
  /** A collection of VideoAnalyzer items. */
  value?: VideoAnalyzer[];
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** Properties of the Video Analyzer account. */
export interface VideoAnalyzerPropertiesUpdate {
  /** The storage accounts for this resource. */
  storageAccounts?: StorageAccount[];
  /**
   * The list of endpoints associated with this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endpoints?: Endpoint[];
  /** The account encryption properties. */
  encryption?: AccountEncryption;
}

/** The details about the associated storage account. */
export interface StorageAccount {
  /** The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). */
  id?: string;
  /** A managed identity that Video Analyzer will use to access the storage account. */
  identity?: ResourceIdentity;
  /**
   * The current status of the storage account mapping.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
}

/** The user assigned managed identity to use when accessing a resource. */
export interface ResourceIdentity {
  /** The user assigned managed identity's resource identifier to use when accessing a resource. */
  userAssignedIdentity: string;
}

/** The endpoint details. */
export interface Endpoint {
  /** The URL of the endpoint. */
  endpointUrl?: string;
  /** The type of the endpoint. */
  type: VideoAnalyzerEndpointType;
}

/** Defines how the Video Analyzer account is (optionally) encrypted. */
export interface AccountEncryption {
  /** The type of key used to encrypt the Account Key. */
  type: AccountEncryptionKeyType;
  /** The properties of the key used to encrypt the account. */
  keyVaultProperties?: KeyVaultProperties;
  /** The Key Vault identity. */
  identity?: ResourceIdentity;
  /**
   * The current status of the Key Vault mapping.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
}

/** The details for accessing the encryption keys in Key Vault. */
export interface KeyVaultProperties {
  /** The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey). */
  keyIdentifier: string;
  /**
   * The current key used to encrypt Video Analyzer account, including the key version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currentKeyIdentifier?: string;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The managed identity for the Video Analyzer resource. */
export interface VideoAnalyzerIdentity {
  /** The identity type. */
  type: string;
  /** The User Assigned Managed Identities. */
  userAssignedIdentities?: {
    [propertyName: string]: UserAssignedManagedIdentity;
  };
}

/** The details of the user assigned managed identity used by the Video Analyzer resource. */
export interface UserAssignedManagedIdentity {
  /**
   * The client ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
  /**
   * The principal ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
}

/** The update operation for a Video Analyzer account. */
export interface VideoAnalyzerUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The identities associated to the Video Analyzer resource. */
  identity?: VideoAnalyzerIdentity;
  /** The storage accounts for this resource. */
  storageAccounts?: StorageAccount[];
  /**
   * The list of endpoints associated with this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endpoints?: Endpoint[];
  /** The account encryption properties. */
  encryption?: AccountEncryption;
}

/** The input to the sync storage keys request. */
export interface SyncStorageKeysInput {
  /** The ID of the storage account resource. */
  id?: string;
}

/** The check availability request body. */
export interface CheckNameAvailabilityRequest {
  /** The name of the resource for which availability needs to be checked. */
  name?: string;
  /** The resource type. */
  type?: string;
}

/** The check availability result. */
export interface CheckNameAvailabilityResponse {
  /** Indicates if the resource name is available. */
  nameAvailable?: boolean;
  /** The reason why the given name is not available. */
  reason?: CheckNameAvailabilityReason;
  /** Detailed reason why the given name is available. */
  message?: string;
}

/** A collection of EdgeModuleEntity items. */
export interface EdgeModuleEntityCollection {
  /** A collection of EdgeModuleEntity items. */
  value?: EdgeModuleEntity[];
  /** A link to the next page of the collection (when the collection contains too many results to return in one response). */
  nextLink?: string;
}

/** The input parameters to generate registration token for the Azure Video Analyzer IoT edge module. */
export interface ListProvisioningTokenInput {
  /** The desired expiration date of the registration token. The Azure Video Analyzer IoT edge module must be initialized and connected to the Internet prior to the token expiration date. */
  expirationDate: Date;
}

/** Provisioning token properties. A provisioning token allows for a single instance of Azure Video analyzer IoT edge module to be initialized and authorized to the cloud account. The provisioning token itself is short lived and it is only used for the initial handshake between IoT edge module and the cloud. After the initial handshake, the IoT edge module will agree on a set of authentication keys which will be auto-rotated as long as the module is able to periodically connect to the cloud. A new provisioning token can be generated for the same IoT edge module in case the module state lost or reset. */
export interface EdgeModuleProvisioningToken {
  /**
   * The expiration date of the registration token. The Azure Video Analyzer IoT edge module must be initialized and connected to the Internet prior to the token expiration date.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expirationDate?: Date;
  /**
   * The token blob to be provided to the Azure Video Analyzer IoT edge module through the Azure IoT Edge module twin properties.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly token?: string;
}

/** A collection of VideoEntity items. */
export interface VideoEntityCollection {
  /** A collection of VideoEntity items. */
  value?: VideoEntity[];
  /** A link to the next page of the collection (when the collection contains too many results to return in one response). */
  nextLink?: string;
}

/** Video flags contain information about the available video actions and its dynamic properties based on the current video state. */
export interface VideoFlags {
  /** Value indicating whether or not the video can be streamed. Only "archive" type videos can be streamed. */
  canStream: boolean;
  /** Value indicating whether or not there has ever been data recorded or uploaded into the video. Newly created videos have this value set to false. */
  hasData: boolean;
  /** Value indicating whether or not the video is currently being referenced be an active live pipeline. The fact that is being referenced, doesn't necessarily indicate that data is being received. For example, video recording may be gated on events or camera may not be accessible at the time. */
  isRecording: boolean;
}

/** Video streaming holds information about video streaming URLs. */
export interface VideoStreaming {
  /**
   * Video streaming base URL for the video archive. When present, archived video can be played through the Azure Video Analyzer player. Alternatively, this URL can be used with compatible DASH or HLS players by appending the following to the base URL:
   *
   *   - HLSv4:     /manifest(format=m3u8-aapl).m3u8
   *   - HLS CMAF:  /manifest(format=m3u8-cmaf)
   *   - DASH CMAF: /manifest(format=mpd-time-cmaf)
   *
   * Moreover, an ongoing video recording can be played in "live mode" with latencies which are approximately double of the chosen video segment length.
   */
  archiveBaseUrl?: string;
}

/** Contains information about the video and audio content. */
export interface VideoMediaInfo {
  /**
   * Video segment length indicates the length of individual video files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. "PT30S" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly segmentLength?: string;
}

/** Video streaming token grants access to the video streaming URLs which can be used by an compatible HLS or DASH player. */
export interface VideoStreamingToken {
  /**
   * The streaming token expiration date in ISO8601 format (eg. 2021-01-01T00:00:00Z).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expirationDate?: Date;
  /**
   * The streaming token value to be added to the video streaming URL as the value for a "token" query string parameter. The token is specific to a single video.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly token?: string;
}

/** A collection of AccessPolicyEntity items. */
export interface AccessPolicyEntityCollection {
  /** A collection of AccessPolicyEntity items. */
  value?: AccessPolicyEntity[];
  /** A link to the next page of the collection (when the collection contains too many results to return in one response). */
  nextLink?: string;
}

/** Base class for access policies authentication methods. */
export interface AuthenticationBase {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "#Microsoft.VideoAnalyzer.JwtAuthentication";
}

/** Properties for expected token claims. */
export interface TokenClaim {
  /** Name of the claim which must be present on the token. */
  name: string;
  /** Expected value of the claim to be present on the token. */
  value: string;
}

/** Key properties for JWT token validation. */
export interface TokenKey {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type:
    | "#Microsoft.VideoAnalyzer.RsaTokenKey"
    | "#Microsoft.VideoAnalyzer.EccTokenKey";
  /** JWT token key id. Validation keys are looked up based on the key id present on the JWT token header. */
  kid: string;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export type TrackedResource = Resource & {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
};

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export type ProxyResource = Resource & {};

export type VideoAnalyzerProperties = VideoAnalyzerPropertiesUpdate & {};

/** Properties for access validation based on JSON Web Tokens (JWT). */
export type JwtAuthentication = AuthenticationBase & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "#Microsoft.VideoAnalyzer.JwtAuthentication";
  /** List of expected token issuers. Token issuer is valid if it matches at least one of the given values. */
  issuers?: string[];
  /** List of expected token audiences. Token audience is valid if it matches at least one of the given values. */
  audiences?: string[];
  /** List of additional token claims to be validated. Token must contains all claims and respective values for it to be valid. */
  claims?: TokenClaim[];
  /** List of keys which can be used to validate access tokens. Having multiple keys allow for seamless key rotation of the token signing key. Token signature must match exactly one key. */
  keys?: TokenKeyUnion[];
};

/** Required validation properties for tokens generated with RSA algorithm. */
export type RsaTokenKey = TokenKey & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "#Microsoft.VideoAnalyzer.RsaTokenKey";
  /** RSA algorithm to be used: RS256, RS384 or RS512. */
  alg: AccessPolicyRsaAlgo;
  /** RSA public key modulus. */
  n: string;
  /** RSA public key exponent. */
  e: string;
};

/** Required validation properties for tokens generated with Elliptical Curve algorithm. */
export type EccTokenKey = TokenKey & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "#Microsoft.VideoAnalyzer.EccTokenKey";
  /** Elliptical curve algorithm to be used: ES256, ES384 or ES512. */
  alg: AccessPolicyEccAlgo;
  /** X coordinate. */
  x: string;
  /** Y coordinate. */
  y: string;
};

/** A Video Analyzer account. */
export type VideoAnalyzer = TrackedResource & {
  /**
   * The system data of the Video Analyzer account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** The set of managed identities associated with the Video Analyzer resource. */
  identity?: VideoAnalyzerIdentity;
  /** The storage accounts for this resource. */
  storageAccounts?: StorageAccount[];
  /**
   * The list of endpoints associated with this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endpoints?: Endpoint[];
  /** The account encryption properties. */
  encryption?: AccountEncryption;
};

/** The representation of an edge module. */
export type EdgeModuleEntity = ProxyResource & {
  /**
   * The system metadata relating to this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * Internal ID generated for the instance of the Video Analyzer edge module.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly edgeModuleId?: string;
};

/** The representation of a single video in a Video Analyzer account. */
export type VideoEntity = ProxyResource & {
  /**
   * The system metadata relating to this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** Optional video title provided by the user. Value can be up to 256 characters long. */
  title?: string;
  /** Optional video description provided by the user. Value can be up to 2048 characters long. */
  description?: string;
  /**
   * Type of the video archive. Different archive formats provide different capabilities.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly typePropertiesType?: VideoType;
  /**
   * Video flags contain information about the available video actions and its dynamic properties based on the current video state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly flags?: VideoFlags;
  /**
   * Video streaming holds information about video streaming URLs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly streaming?: VideoStreaming;
  /**
   * Contains information about the video and audio content.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly mediaInfo?: VideoMediaInfo;
};

/** Policy that determines how a video can be accessed. */
export type AccessPolicyEntity = ProxyResource & {
  /**
   * The system metadata relating to this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** Defines the access level granted by this policy. */
  role?: AccessPolicyRole;
  /** Authentication method to be used when validating client API access. */
  authentication?: AuthenticationBaseUnion;
};

/** Known values of {@link MetricUnit} that the service accepts. */
export const enum KnownMetricUnit {
  /** The number of bytes. */
  Bytes = "Bytes",
  /** The count. */
  Count = "Count",
  /** The number of milliseconds. */
  Milliseconds = "Milliseconds"
}

/**
 * Defines values for MetricUnit. \
 * {@link KnownMetricUnit} can be used interchangeably with MetricUnit,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Bytes**: The number of bytes. \
 * **Count**: The count. \
 * **Milliseconds**: The number of milliseconds.
 */
export type MetricUnit = string;

/** Known values of {@link MetricAggregationType} that the service accepts. */
export const enum KnownMetricAggregationType {
  /** The average. */
  Average = "Average",
  /** The count of a number of items, usually requests. */
  Count = "Count",
  /** The sum. */
  Total = "Total"
}

/**
 * Defines values for MetricAggregationType. \
 * {@link KnownMetricAggregationType} can be used interchangeably with MetricAggregationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Average**: The average. \
 * **Count**: The count of a number of items, usually requests. \
 * **Total**: The sum.
 */
export type MetricAggregationType = string;

/** Known values of {@link ActionType} that the service accepts. */
export const enum KnownActionType {
  /** An internal action. */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**: An internal action.
 */
export type ActionType = string;

/** Known values of {@link VideoAnalyzerEndpointType} that the service accepts. */
export const enum KnownVideoAnalyzerEndpointType {
  /** The client API endpoint. */
  ClientApi = "ClientApi"
}

/**
 * Defines values for VideoAnalyzerEndpointType. \
 * {@link KnownVideoAnalyzerEndpointType} can be used interchangeably with VideoAnalyzerEndpointType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ClientApi**: The client API endpoint.
 */
export type VideoAnalyzerEndpointType = string;

/** Known values of {@link AccountEncryptionKeyType} that the service accepts. */
export const enum KnownAccountEncryptionKeyType {
  /** The Account Key is encrypted with a System Key. */
  SystemKey = "SystemKey",
  /** The Account Key is encrypted with a Customer Key. */
  CustomerKey = "CustomerKey"
}

/**
 * Defines values for AccountEncryptionKeyType. \
 * {@link KnownAccountEncryptionKeyType} can be used interchangeably with AccountEncryptionKeyType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SystemKey**: The Account Key is encrypted with a System Key. \
 * **CustomerKey**: The Account Key is encrypted with a Customer Key.
 */
export type AccountEncryptionKeyType = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export const enum KnownCreatedByType {
  User = "User",
  Application = "Application",
  ManagedIdentity = "ManagedIdentity",
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link CheckNameAvailabilityReason} that the service accepts. */
export const enum KnownCheckNameAvailabilityReason {
  Invalid = "Invalid",
  AlreadyExists = "AlreadyExists"
}

/**
 * Defines values for CheckNameAvailabilityReason. \
 * {@link KnownCheckNameAvailabilityReason} can be used interchangeably with CheckNameAvailabilityReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AlreadyExists**
 */
export type CheckNameAvailabilityReason = string;

/** Known values of {@link VideoType} that the service accepts. */
export const enum KnownVideoType {
  /** Archive is flexible format that represents a video stream associated with wall-clock time. The video archive can either be continuous or discontinuous. An archive is discontinuous when there are gaps in the recording due to various reasons, such as the live pipeline being stopped, camera being disconnected or due to the use of event based recordings through the use of a signal gate. Finally, there is no limit to the archive duration and new video data can be appended to the existing archive at any time, as long as the same video codec and codec parameters are being used. */
  Archive = "Archive"
}

/**
 * Defines values for VideoType. \
 * {@link KnownVideoType} can be used interchangeably with VideoType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Archive**: Archive is flexible format that represents a video stream associated with wall-clock time. The video archive can either be continuous or discontinuous. An archive is discontinuous when there are gaps in the recording due to various reasons, such as the live pipeline being stopped, camera being disconnected or due to the use of event based recordings through the use of a signal gate. Finally, there is no limit to the archive duration and new video data can be appended to the existing archive at any time, as long as the same video codec and codec parameters are being used.
 */
export type VideoType = string;

/** Known values of {@link AccessPolicyRole} that the service accepts. */
export const enum KnownAccessPolicyRole {
  /** Reader role allows for read-only operations to be performed through the client APIs. */
  Reader = "Reader"
}

/**
 * Defines values for AccessPolicyRole. \
 * {@link KnownAccessPolicyRole} can be used interchangeably with AccessPolicyRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Reader**: Reader role allows for read-only operations to be performed through the client APIs.
 */
export type AccessPolicyRole = string;

/** Known values of {@link AccessPolicyRsaAlgo} that the service accepts. */
export const enum KnownAccessPolicyRsaAlgo {
  /** RS256 */
  RS256 = "RS256",
  /** RS384 */
  RS384 = "RS384",
  /** RS512 */
  RS512 = "RS512"
}

/**
 * Defines values for AccessPolicyRsaAlgo. \
 * {@link KnownAccessPolicyRsaAlgo} can be used interchangeably with AccessPolicyRsaAlgo,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **RS256**: RS256 \
 * **RS384**: RS384 \
 * **RS512**: RS512
 */
export type AccessPolicyRsaAlgo = string;

/** Known values of {@link AccessPolicyEccAlgo} that the service accepts. */
export const enum KnownAccessPolicyEccAlgo {
  /** ES265 */
  ES256 = "ES256",
  /** ES384 */
  ES384 = "ES384",
  /** ES512 */
  ES512 = "ES512"
}

/**
 * Defines values for AccessPolicyEccAlgo. \
 * {@link KnownAccessPolicyEccAlgo} can be used interchangeably with AccessPolicyEccAlgo,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ES256**: ES265 \
 * **ES384**: ES384 \
 * **ES512**: ES512
 */
export type AccessPolicyEccAlgo = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationCollection;

/** Optional parameters. */
export interface VideoAnalyzersListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type VideoAnalyzersListResponse = VideoAnalyzerCollection;

/** Optional parameters. */
export interface VideoAnalyzersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type VideoAnalyzersGetResponse = VideoAnalyzer;

/** Optional parameters. */
export interface VideoAnalyzersCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type VideoAnalyzersCreateOrUpdateResponse = VideoAnalyzer;

/** Optional parameters. */
export interface VideoAnalyzersDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface VideoAnalyzersUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type VideoAnalyzersUpdateResponse = VideoAnalyzer;

/** Optional parameters. */
export interface VideoAnalyzersSyncStorageKeysOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface VideoAnalyzersListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type VideoAnalyzersListBySubscriptionResponse = VideoAnalyzerCollection;

/** Optional parameters. */
export interface LocationsCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type LocationsCheckNameAvailabilityResponse = CheckNameAvailabilityResponse;

/** Optional parameters. */
export interface EdgeModulesListOptionalParams
  extends coreClient.OperationOptions {
  /** Restricts the set of items returned. */
  filter?: string;
  /** Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n. */
  top?: number;
  /** Specifies the key by which the result collection should be ordered. */
  orderby?: string;
}

/** Contains response data for the list operation. */
export type EdgeModulesListResponse = EdgeModuleEntityCollection;

/** Optional parameters. */
export interface EdgeModulesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type EdgeModulesGetResponse = EdgeModuleEntity;

/** Optional parameters. */
export interface EdgeModulesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type EdgeModulesCreateOrUpdateResponse = EdgeModuleEntity;

/** Optional parameters. */
export interface EdgeModulesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface EdgeModulesListProvisioningTokenOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listProvisioningToken operation. */
export type EdgeModulesListProvisioningTokenResponse = EdgeModuleProvisioningToken;

/** Optional parameters. */
export interface EdgeModulesListNextOptionalParams
  extends coreClient.OperationOptions {
  /** Restricts the set of items returned. */
  filter?: string;
  /** Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n. */
  top?: number;
  /** Specifies the key by which the result collection should be ordered. */
  orderby?: string;
}

/** Contains response data for the listNext operation. */
export type EdgeModulesListNextResponse = EdgeModuleEntityCollection;

/** Optional parameters. */
export interface VideosListOptionalParams extends coreClient.OperationOptions {
  /** Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n. */
  top?: number;
}

/** Contains response data for the list operation. */
export type VideosListResponse = VideoEntityCollection;

/** Optional parameters. */
export interface VideosGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type VideosGetResponse = VideoEntity;

/** Optional parameters. */
export interface VideosCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type VideosCreateOrUpdateResponse = VideoEntity;

/** Optional parameters. */
export interface VideosDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface VideosUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type VideosUpdateResponse = VideoEntity;

/** Optional parameters. */
export interface VideosListStreamingTokenOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listStreamingToken operation. */
export type VideosListStreamingTokenResponse = VideoStreamingToken;

/** Optional parameters. */
export interface VideosListNextOptionalParams
  extends coreClient.OperationOptions {
  /** Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n. */
  top?: number;
}

/** Contains response data for the listNext operation. */
export type VideosListNextResponse = VideoEntityCollection;

/** Optional parameters. */
export interface AccessPoliciesListOptionalParams
  extends coreClient.OperationOptions {
  /** Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n. */
  top?: number;
}

/** Contains response data for the list operation. */
export type AccessPoliciesListResponse = AccessPolicyEntityCollection;

/** Optional parameters. */
export interface AccessPoliciesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AccessPoliciesGetResponse = AccessPolicyEntity;

/** Optional parameters. */
export interface AccessPoliciesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type AccessPoliciesCreateOrUpdateResponse = AccessPolicyEntity;

/** Optional parameters. */
export interface AccessPoliciesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AccessPoliciesUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type AccessPoliciesUpdateResponse = AccessPolicyEntity;

/** Optional parameters. */
export interface AccessPoliciesListNextOptionalParams
  extends coreClient.OperationOptions {
  /** Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n. */
  top?: number;
}

/** Contains response data for the listNext operation. */
export type AccessPoliciesListNextResponse = AccessPolicyEntityCollection;

/** Optional parameters. */
export interface VideoAnalyzerOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
