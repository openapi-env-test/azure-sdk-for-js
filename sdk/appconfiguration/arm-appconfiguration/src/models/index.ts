/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** The result of a request to list configuration stores. */
export interface ConfigurationStoreListResult {
  /** The collection value. */
  value?: ConfigurationStore[];
  /** The URI that can be used to request the next set of paged results. */
  nextLink?: string;
}

/** An Azure resource. */
export interface Resource {
  /**
   * The resource ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** The location of the resource. This cannot be changed after the resource is created. */
  location: string;
  /** The tags of the resource. */
  tags?: { [propertyName: string]: string };
}

/** AppConfiguration error object. */
export interface ErrorModel {
  /** Error code. */
  code?: string;
  /** Error message. */
  message?: string;
}

/** The parameters for updating a configuration store. */
export interface ConfigurationStoreUpdateParameters {
  /** The properties for updating a configuration store. */
  properties?: Record<string, unknown>;
  /** The ARM resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Parameters used for checking whether a resource name is available. */
export interface CheckNameAvailabilityParameters {
  /** The name to check for availability. */
  name: string;
  /** The resource type to check for name availability. */
  type: ConfigurationResourceType;
}

/** The result of a request to check the availability of a resource name. */
export interface NameAvailabilityStatus {
  /**
   * The value indicating whether the resource name is available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nameAvailable?: boolean;
  /**
   * If any, the error message that provides more detail for the reason that the name is not available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * If any, the reason that the name is not available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reason?: string;
}

/** The result of a request to list API keys. */
export interface ApiKeyListResult {
  /** The collection value. */
  value?: ApiKey[];
  /** The URI that can be used to request the next set of paged results. */
  nextLink?: string;
}

/** An API key used for authenticating with a configuration store endpoint. */
export interface ApiKey {
  /**
   * The key ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * A name for the key describing its usage.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The value of the key that is used for authentication purposes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: string;
  /**
   * A connection string that can be used by supporting clients for authentication.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly connectionString?: string;
  /**
   * The last time any of the key's properties were modified.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastModified?: Date;
  /**
   * Whether this key can only be used for read operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly readOnly?: boolean;
}

/** The parameters used to regenerate an API key. */
export interface RegenerateKeyParameters {
  /** The id of the key to regenerate. */
  id?: string;
}

/** The result of a request to list configuration store operations. */
export interface OperationDefinitionListResult {
  /** The collection value. */
  value?: OperationDefinition[];
  /** The URI that can be used to request the next set of paged results. */
  nextLink?: string;
}

/** The definition of a configuration store operation. */
export interface OperationDefinition {
  /** Operation name: {provider}/{resource}/{operation}. */
  name?: string;
  /** The display information for the configuration store operation. */
  display?: OperationDefinitionDisplay;
}

/** The display information for a configuration store operation. */
export interface OperationDefinitionDisplay {
  /**
   * The resource provider name: Microsoft App Configuration."
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /** The resource on which the operation is performed. */
  resource?: string;
  /** The operation that users can perform. */
  operation?: string;
  /** The description for the operation. */
  description?: string;
}

/** The parameters used to list a configuration store key-value */
export interface ListKeyValueParameters {
  /** The key to retrieve. */
  key: string;
  /** The label of the key. */
  label?: string;
}

/** The result of a request to retrieve a key-value from the specified configuration store. */
export interface KeyValue {
  /**
   * The primary identifier of a key-value.
   * The key is used in unison with the label to uniquely identify a key-value.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly key?: string;
  /**
   * A value used to group key-values.
   * The label is used in unison with the key to uniquely identify a key-value.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly label?: string;
  /**
   * The value of the key-value.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: string;
  /**
   * The content type of the key-value's value.
   * Providing a proper content-type can enable transformations of values when they are retrieved by applications.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly contentType?: string;
  /**
   * An ETag indicating the state of a key-value within a configuration store.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly eTag?: string;
  /**
   * The last time a modifying operation was performed on the given key-value.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastModified?: Date;
  /**
   * A value indicating whether the key-value is locked.
   * A locked key-value may not be modified until it is unlocked.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly locked?: boolean;
  /**
   * A dictionary of tags that can help identify what a key-value may be applicable for.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tags?: { [propertyName: string]: string };
}

/** The configuration store along with all resource properties. The Configuration Store will have all information to begin utilizing it. */
export type ConfigurationStore = Resource & {
  /**
   * The provisioning state of the configuration store.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The creation date of configuration store.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationDate?: Date;
  /**
   * The DNS endpoint where the configuration store API will be available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endpoint?: string;
};

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  Creating = "Creating",
  Updating = "Updating",
  Deleting = "Deleting",
  Succeeded = "Succeeded",
  Failed = "Failed",
  Canceled = "Canceled"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Updating** \
 * **Deleting** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled**
 */
export type ProvisioningState = string;

/** Known values of {@link ConfigurationResourceType} that the service accepts. */
export enum KnownConfigurationResourceType {
  MicrosoftAppConfigurationConfigurationStores = "Microsoft.AppConfiguration/configurationStores"
}

/**
 * Defines values for ConfigurationResourceType. \
 * {@link KnownConfigurationResourceType} can be used interchangeably with ConfigurationResourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Microsoft.AppConfiguration\/configurationStores**
 */
export type ConfigurationResourceType = string;

/** Optional parameters. */
export interface ConfigurationStoresListOptionalParams
  extends coreClient.OperationOptions {
  /** A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */
  skipToken?: string;
}

/** Contains response data for the list operation. */
export type ConfigurationStoresListResponse = ConfigurationStoreListResult;

/** Optional parameters. */
export interface ConfigurationStoresListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {
  /** A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */
  skipToken?: string;
}

/** Contains response data for the listByResourceGroup operation. */
export type ConfigurationStoresListByResourceGroupResponse = ConfigurationStoreListResult;

/** Optional parameters. */
export interface ConfigurationStoresGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ConfigurationStoresGetResponse = ConfigurationStore;

/** Optional parameters. */
export interface ConfigurationStoresCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ConfigurationStoresCreateResponse = ConfigurationStore;

/** Optional parameters. */
export interface ConfigurationStoresDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ConfigurationStoresUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ConfigurationStoresUpdateResponse = ConfigurationStore;

/** Optional parameters. */
export interface ConfigurationStoresListKeysOptionalParams
  extends coreClient.OperationOptions {
  /** A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */
  skipToken?: string;
}

/** Contains response data for the listKeys operation. */
export type ConfigurationStoresListKeysResponse = ApiKeyListResult;

/** Optional parameters. */
export interface ConfigurationStoresRegenerateKeyOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the regenerateKey operation. */
export type ConfigurationStoresRegenerateKeyResponse = ApiKey;

/** Optional parameters. */
export interface ConfigurationStoresListKeyValueOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listKeyValue operation. */
export type ConfigurationStoresListKeyValueResponse = KeyValue;

/** Optional parameters. */
export interface ConfigurationStoresListNextOptionalParams
  extends coreClient.OperationOptions {
  /** A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */
  skipToken?: string;
}

/** Contains response data for the listNext operation. */
export type ConfigurationStoresListNextResponse = ConfigurationStoreListResult;

/** Optional parameters. */
export interface ConfigurationStoresListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {
  /** A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */
  skipToken?: string;
}

/** Contains response data for the listByResourceGroupNext operation. */
export type ConfigurationStoresListByResourceGroupNextResponse = ConfigurationStoreListResult;

/** Optional parameters. */
export interface ConfigurationStoresListKeysNextOptionalParams
  extends coreClient.OperationOptions {
  /** A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */
  skipToken?: string;
}

/** Contains response data for the listKeysNext operation. */
export type ConfigurationStoresListKeysNextResponse = ApiKeyListResult;

/** Optional parameters. */
export interface OperationsCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type OperationsCheckNameAvailabilityResponse = NameAvailabilityStatus;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {
  /** A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */
  skipToken?: string;
}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationDefinitionListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {
  /** A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */
  skipToken?: string;
}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationDefinitionListResult;

/** Optional parameters. */
export interface AppConfigurationManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
