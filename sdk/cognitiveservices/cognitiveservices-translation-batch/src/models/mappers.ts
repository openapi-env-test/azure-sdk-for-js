/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


export const DocumentFilter: msRest.CompositeMapper = {
  serializedName: "DocumentFilter",
  type: {
    name: "Composite",
    className: "DocumentFilter",
    modelProperties: {
      prefix: {
        serializedName: "prefix",
        type: {
          name: "String"
        }
      },
      suffix: {
        serializedName: "suffix",
        type: {
          name: "String"
        }
      },
      includeSubFolder: {
        serializedName: "includeSubFolder",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SourceInput: msRest.CompositeMapper = {
  serializedName: "SourceInput",
  type: {
    name: "Composite",
    className: "SourceInput",
    modelProperties: {
      filter: {
        serializedName: "filter",
        type: {
          name: "Composite",
          className: "DocumentFilter"
        }
      },
      path: {
        required: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      storageSource: {
        serializedName: "storageSource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DestinationInput: msRest.CompositeMapper = {
  serializedName: "DestinationInput",
  type: {
    name: "Composite",
    className: "DestinationInput",
    modelProperties: {
      path: {
        required: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      storageSource: {
        serializedName: "storageSource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BatchRequest: msRest.CompositeMapper = {
  serializedName: "BatchRequest",
  type: {
    name: "Composite",
    className: "BatchRequest",
    modelProperties: {
      source: {
        required: true,
        serializedName: "source",
        type: {
          name: "Composite",
          className: "SourceInput"
        }
      },
      destination: {
        required: true,
        serializedName: "destination",
        type: {
          name: "Composite",
          className: "DestinationInput"
        }
      }
    }
  }
};

export const JobSubmissionBatchRequest: msRest.CompositeMapper = {
  serializedName: "JobSubmissionBatchRequest",
  type: {
    name: "Composite",
    className: "JobSubmissionBatchRequest",
    modelProperties: {
      to: {
        required: true,
        serializedName: "to",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      inputs: {
        required: true,
        serializedName: "inputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BatchRequest"
            }
          }
        }
      },
      from: {
        serializedName: "from",
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "category",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StatusSummary: msRest.CompositeMapper = {
  serializedName: "StatusSummary",
  type: {
    name: "Composite",
    className: "StatusSummary",
    modelProperties: {
      totalDocuments: {
        serializedName: "totalDocuments",
        type: {
          name: "Number"
        }
      },
      failedDocuments: {
        serializedName: "failedDocuments",
        type: {
          name: "Number"
        }
      },
      succeedDocuments: {
        serializedName: "succeedDocuments",
        type: {
          name: "Number"
        }
      },
      inProgressDocuments: {
        serializedName: "inProgressDocuments",
        type: {
          name: "Number"
        }
      },
      notYetStartedDocuments: {
        serializedName: "notYetStartedDocuments",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DocumentStatusDetail: msRest.CompositeMapper = {
  serializedName: "DocumentStatusDetail",
  type: {
    name: "Composite",
    className: "DocumentStatusDetail",
    modelProperties: {
      path: {
        required: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      createdDateTimeUtc: {
        required: true,
        serializedName: "createdDateTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      lastActionDateTimeUtc: {
        required: true,
        serializedName: "lastActionDateTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      detectedLanguage: {
        serializedName: "detectedLanguage",
        type: {
          name: "String"
        }
      },
      to: {
        required: true,
        serializedName: "to",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "Number"
        }
      },
      progress: {
        serializedName: "progress",
        constraints: {
          InclusiveMaximum: 1,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const OperationStatusResponse: msRest.CompositeMapper = {
  serializedName: "OperationStatusResponse",
  type: {
    name: "Composite",
    className: "OperationStatusResponse",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      createdDateTimeUtc: {
        required: true,
        serializedName: "createdDateTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      lastActionDateTimeUtc: {
        required: true,
        serializedName: "lastActionDateTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      summary: {
        required: true,
        serializedName: "summary",
        type: {
          name: "Composite",
          className: "StatusSummary"
        }
      },
      documentStatusDetails: {
        serializedName: "documentStatusDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DocumentStatusDetail"
            }
          }
        }
      }
    }
  }
};

export const InnerErrorV2: msRest.CompositeMapper = {
  serializedName: "InnerErrorV2",
  type: {
    name: "Composite",
    className: "InnerErrorV2",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      innerError: {
        serializedName: "innerError",
        type: {
          name: "Composite",
          className: "InnerErrorV2"
        }
      }
    }
  }
};

export const ErrorV2: msRest.CompositeMapper = {
  serializedName: "ErrorV2",
  type: {
    name: "Composite",
    className: "ErrorV2",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorV2"
            }
          }
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      innerError: {
        serializedName: "innerError",
        type: {
          name: "Composite",
          className: "InnerErrorV2"
        }
      }
    }
  }
};

export const ErrorResponseV2: msRest.CompositeMapper = {
  serializedName: "ErrorResponseV2",
  type: {
    name: "Composite",
    className: "ErrorResponseV2",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorV2"
        }
      }
    }
  }
};

export const DocumentSubmissionResponse: msRest.CompositeMapper = {
  serializedName: "DocumentSubmissionResponse",
  type: {
    name: "Composite",
    className: "DocumentSubmissionResponse",
    modelProperties: {
      job: {
        serializedName: "job",
        type: {
          name: "Composite",
          className: "OperationStatusResponse"
        }
      },
      documentDownloadUrl: {
        serializedName: "documentDownloadUrl",
        type: {
          name: "String"
        }
      },
      documentExpirationDateTimeUtc: {
        serializedName: "documentExpirationDateTimeUtc",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const DocumentStatusResponse: msRest.CompositeMapper = {
  serializedName: "DocumentStatusResponse",
  type: {
    name: "Composite",
    className: "DocumentStatusResponse",
    modelProperties: {
      documents: {
        serializedName: "documents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DocumentStatusDetail"
            }
          }
        }
      },
      nextLink: {
        serializedName: "@nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DocumentFormat: msRest.CompositeMapper = {
  serializedName: "DocumentFormat",
  type: {
    name: "Composite",
    className: "DocumentFormat",
    modelProperties: {
      format: {
        serializedName: "format",
        type: {
          name: "String"
        }
      },
      fileExtensions: {
        serializedName: "fileExtensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      contentTypes: {
        serializedName: "contentTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SingleDocumentUploadHeaders: msRest.CompositeMapper = {
  serializedName: "single document upload-headers",
  type: {
    name: "Composite",
    className: "SingleDocumentUploadHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      operationLocation: {
        serializedName: "operation-location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetDocumentStatusHeaders: msRest.CompositeMapper = {
  serializedName: "get document status-headers",
  type: {
    name: "Composite",
    className: "GetDocumentStatusHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetOperationStatusHeaders: msRest.CompositeMapper = {
  serializedName: "get operation status-headers",
  type: {
    name: "Composite",
    className: "GetOperationStatusHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetDetailedDocumentStatusHeaders: msRest.CompositeMapper = {
  serializedName: "get detailed document status-headers",
  type: {
    name: "Composite",
    className: "GetDetailedDocumentStatusHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};
