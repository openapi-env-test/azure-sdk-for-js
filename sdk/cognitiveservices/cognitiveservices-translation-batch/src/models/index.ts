/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ServiceClientOptions } from "@azure/ms-rest-js";
import * as msRest from "@azure/ms-rest-js";

/**
 * An interface representing DocumentFilter.
 */
export interface DocumentFilter {
  /**
   * A case-sensitive prefix string to filter documents in the source path for translation.
   * For example, when using a Azure storage blob Uri, use the prefix to restrict sub folders for
   * translation.
   */
  prefix?: string;
  /**
   * A case-sensitive suffix string to filter documents in the source path for translation.
   * This is most often use for file extensions
   */
  suffix?: string;
  /**
   * A flag to indicate if sub folders within the set of prefix folders will also need to be
   * included when searching for content to be translated.
   */
  includeSubFolder?: boolean;
}

/**
 * Source of the input documents
 */
export interface SourceInput {
  filter?: DocumentFilter;
  /**
   * Location of the folder / container with your documents
   */
  path: string;
  /**
   * Possible values include: 'AzureBlob'
   */
  storageSource?: StorageSource;
}

/**
 * Destination for the finished translated documents
 */
export interface DestinationInput {
  /**
   * Location of the folder / container with your documents
   */
  path: string;
  /**
   * Possible values include: 'AzureBlob'
   */
  storageSource?: StorageSource1;
}

/**
 * Definition for the input batch translation request
 */
export interface BatchRequest {
  source: SourceInput;
  destination: DestinationInput;
}

/**
 * Job submission batch request
 */
export interface JobSubmissionBatchRequest {
  /**
   * The list of language codes for the documents to translate to
   */
  to: string[];
  /**
   * The input list of documents or folders containing documents
   */
  inputs: BatchRequest[];
  /**
   * The language code of the original document
   * If none is specified, we will perform auto detect on the document (TBD)
   */
  from?: string;
  /**
   * Category for the translation system (Optional)
   */
  category?: string;
}

/**
 * An interface representing StatusSummary.
 */
export interface StatusSummary {
  /**
   * Total document count
   */
  totalDocuments?: number;
  /**
   * Number of documents that has failed
   */
  failedDocuments?: number;
  /**
   * Number of documents that have succeeded
   */
  succeedDocuments?: number;
  /**
   * Number of documents that are in progress
   */
  inProgressDocuments?: number;
  /**
   * Number of documents that has not yet been processed
   */
  notYetStartedDocuments?: number;
}

/**
 * An interface representing DocumentStatusDetail.
 */
export interface DocumentStatusDetail {
  /**
   * Location of the document or folder
   */
  path: string;
  /**
   * Operation created date time
   */
  createdDateTimeUtc: Date;
  /**
   * Date time in which the operation's status has been updated
   */
  lastActionDateTimeUtc: Date;
  /**
   * Possible values include: 'NotStarted', 'Running', 'Succeeded', 'Failed', 'Cancelled'
   */
  status: Status;
  /**
   * Detected language of the original document (to be implemented)
   */
  detectedLanguage?: string;
  /**
   * To language
   */
  to: string;
  /**
   * Error message if any
   */
  errorMessage?: string;
  /**
   * Error code if any
   */
  errorCode?: number;
  /**
   * Progress of the translation if available
   */
  progress?: number;
  /**
   * Document Id
   */
  id?: number;
}

/**
 * Job status response
 */
export interface OperationStatusResponse {
  /**
   * Id of the operation.
   */
  id: string;
  /**
   * Operation created date time
   */
  createdDateTimeUtc: Date;
  /**
   * Date time in which the operation's status has been updated
   */
  lastActionDateTimeUtc: Date;
  /**
   * Possible values include: 'NotStarted', 'Running', 'Succeeded', 'Failed', 'Cancelled'
   */
  status?: Status1;
  summary: StatusSummary;
  /**
   * The detail status of individual documents
   */
  documentStatusDetails?: DocumentStatusDetail[];
}

/**
 * New Inner Error format which conforms to Cognitive Services API Guidelines which is available at
 * https://microsoft.sharepoint.com/%3Aw%3A/t/CognitiveServicesPMO/EUoytcrjuJdKpeOKIK_QRC8BPtUYQpKBi8JsWyeDMRsWlQ?e=CPq8ow.
 * This contains required properties ErrorCode, message and optional properties target, details(key
 * value pair), inner error(this can be nested).
 */
export interface InnerErrorV2 {
  /**
   * Possible values include: 'InvalidParameterValue', 'InvalidRequestBodyFormat', 'EmptyRequest',
   * 'MissingInputRecords', 'InvalidDocument', 'ModelVersionIncorrect', 'InvalidDocumentBatch',
   * 'UnsupportedLanguageCode'
   */
  code?: Code;
  /**
   * Gets additional supportive details regarding the error and/or expected policies.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: { [propertyName: string]: string };
  /**
   * Gets high level error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * Gets the source of the error.
   * For example it would be "documents" or "document id" in case of invalid document.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  innerError?: InnerErrorV2;
}

/**
 * This contains an outer error with error code, message, details, target and an inner error with
 * more descriptive details.
 */
export interface ErrorV2 {
  /**
   * Possible values include: 'InvalidRequest', 'InvalidArgument', 'InternalServerError',
   * 'ServiceUnavailable'
   */
  code?: Code1;
  /**
   * Gets additional supportive details regarding the error and/or expected policies.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorV2[];
  /**
   * Gets high level error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * Gets the source of the error.
   * For example it would be "documents" or "document id" in case of invalid document.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  innerError?: InnerErrorV2;
}

/**
 * Contains unified error information used for HTTP responses across any Cognitive Service.
 * Instances
 * can be created either through Microsoft.CloudAI.Containers.HttpStatusExceptionV2 or by returning
 * it directly from
 * a controller.
 */
export interface ErrorResponseV2 {
  error?: ErrorV2;
}

/**
 * The response for a document submission
 */
export interface DocumentSubmissionResponse {
  job?: OperationStatusResponse;
  /**
   * Document download link
   */
  documentDownloadUrl?: string;
  /**
   * Datetime in Utc when the document will no longer be available
   */
  documentExpirationDateTimeUtc?: Date;
}

/**
 * Document Status Response
 */
export interface DocumentStatusResponse {
  /**
   * The detail status of individual documents
   */
  documents?: DocumentStatusDetail[];
  /**
   * Url for the next page.  Null if no more pages available
   */
  nextLink?: string;
}

/**
 * An interface representing DocumentFormat.
 */
export interface DocumentFormat {
  /**
   * Name of the format
   */
  format?: string;
  /**
   * Supported file extension for this format
   */
  fileExtensions?: string[];
  /**
   * Supported Content-Types for this format
   */
  contentTypes?: string[];
}

/**
 * An interface representing BatchTextTranslationAPIOptions.
 */
export interface BatchTextTranslationAPIOptions extends ServiceClientOptions {
  baseUri?: string;
}

/**
 * Optional Parameters.
 */
export interface BatchTextTranslationAPIBatchDocumentsSubmitOptionalParams extends msRest.RequestOptionsBase {
  /**
   * request details
   */
  body?: JobSubmissionBatchRequest;
}

/**
 * Optional Parameters.
 */
export interface BatchTextTranslationAPISingleDocumentUploadOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The language code of the original document
   * If none is specified, we will perform auto detect on the document (TBD)
   */
  from?: string;
  /**
   * Category for the translation system (Optional)
   */
  category?: string;
}

/**
 * Optional Parameters.
 */
export interface BatchTextTranslationAPIGetDetailedDocumentStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Take the $top entries in the collection
   * When both $top and $skip are supplied, $skip is applied first. Default value: 50.
   */
  top?: number;
  /**
   * Skip the $skip entries in the collection
   * When both $top and $skip are supplied, $skip is applied first. Default value: 0.
   */
  skip?: number;
}

/**
 * Defines headers for Single Document Upload operation.
 */
export interface SingleDocumentUploadHeaders {
  /**
   * Location of the document status
   */
  location: string;
  /**
   * Location of the operation
   */
  operationLocation: string;
}

/**
 * Defines headers for Get Document Status operation.
 */
export interface GetDocumentStatusHeaders {
  /**
   * Indicates how long to wait before making a new request.
   */
  retryAfter: number;
  /**
   * The ETag response-header field provides the current value of the entity tag for the requested
   * variant. Used with If-Match, If-None-Match and If-Range to implement optimistic concurrency
   * control.
   */
  eTag: string;
}

/**
 * Defines headers for Get Operation Status operation.
 */
export interface GetOperationStatusHeaders {
  /**
   * Indicates how long to wait before making a new request.
   */
  retryAfter: number;
  /**
   * The ETag response-header field provides the current value of the entity tag for the requested
   * variant. Used with If-Match, If-None-Match and If-Range to implement optimistic concurrency
   * control.
   */
  eTag: string;
}

/**
 * Defines headers for Get Detailed Document Status operation.
 */
export interface GetDetailedDocumentStatusHeaders {
  /**
   * Indicates how long to wait before making a new request.
   */
  retryAfter: number;
  /**
   * The ETag response-header field provides the current value of the entity tag for the requested
   * variant. Used with If-Match, If-None-Match and If-Range to implement optimistic concurrency
   * control.
   */
  eTag: string;
}

/**
 * Defines values for StorageSource.
 * Possible values include: 'AzureBlob'
 * @readonly
 * @enum {string}
 */
export type StorageSource = 'AzureBlob';

/**
 * Defines values for StorageSource1.
 * Possible values include: 'AzureBlob'
 * @readonly
 * @enum {string}
 */
export type StorageSource1 = 'AzureBlob';

/**
 * Defines values for Status.
 * Possible values include: 'NotStarted', 'Running', 'Succeeded', 'Failed', 'Cancelled'
 * @readonly
 * @enum {string}
 */
export type Status = 'NotStarted' | 'Running' | 'Succeeded' | 'Failed' | 'Cancelled';

/**
 * Defines values for Status1.
 * Possible values include: 'NotStarted', 'Running', 'Succeeded', 'Failed', 'Cancelled'
 * @readonly
 * @enum {string}
 */
export type Status1 = 'NotStarted' | 'Running' | 'Succeeded' | 'Failed' | 'Cancelled';

/**
 * Defines values for Code.
 * Possible values include: 'InvalidParameterValue', 'InvalidRequestBodyFormat', 'EmptyRequest',
 * 'MissingInputRecords', 'InvalidDocument', 'ModelVersionIncorrect', 'InvalidDocumentBatch',
 * 'UnsupportedLanguageCode'
 * @readonly
 * @enum {string}
 */
export type Code = 'InvalidParameterValue' | 'InvalidRequestBodyFormat' | 'EmptyRequest' | 'MissingInputRecords' | 'InvalidDocument' | 'ModelVersionIncorrect' | 'InvalidDocumentBatch' | 'UnsupportedLanguageCode';

/**
 * Defines values for Code1.
 * Possible values include: 'InvalidRequest', 'InvalidArgument', 'InternalServerError',
 * 'ServiceUnavailable'
 * @readonly
 * @enum {string}
 */
export type Code1 = 'InvalidRequest' | 'InvalidArgument' | 'InternalServerError' | 'ServiceUnavailable';

/**
 * Contains response data for the batchDocumentsSubmit operation.
 */
export type BatchDocumentsSubmitResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the singleDocumentUpload operation.
 */
export type SingleDocumentUploadResponse = SingleDocumentUploadHeaders & {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SingleDocumentUploadHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getDocumentStatus operation.
 */
export type GetDocumentStatusResponse = GetDocumentStatusHeaders & {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetDocumentStatusHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getOperationStatus operation.
 */
export type GetOperationStatusResponse = GetOperationStatusHeaders & {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetOperationStatusHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the cancelOperation operation.
 */
export type CancelOperationResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getDetailedDocumentStatus operation.
 */
export type GetDetailedDocumentStatusResponse = GetDetailedDocumentStatusHeaders & {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetDetailedDocumentStatusHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getDocumentFormats operation.
 */
export type GetDocumentFormatsResponse = {
  /**
   * The response body properties.
   */
  [propertyName: string]: DocumentFormat[];
} & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: { [propertyName: string]: DocumentFormat[] };
    };
};

/**
 * Contains response data for the getStorageSourcesThatWeCurrentlySupport operation.
 */
export type GetStorageSourcesThatWeCurrentlySupportResponse = {
  /**
   * The response body properties.
   */
  [propertyName: string]: string[];
} & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: { [propertyName: string]: string[] };
    };
};
