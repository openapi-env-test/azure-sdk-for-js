/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const WorkbooksListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkbooksListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Workbook"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ManagedServiceIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedServiceIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "UserAssignedIdentity" }
          }
        }
      }
    }
  }
};

export const UserAssignedIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserAssignedIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      clientId: {
        serializedName: "clientId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkbookError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkbookError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "WorkbookErrorDefinition"
        }
      }
    }
  }
};

export const WorkbookErrorDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkbookErrorDefinition",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      innerError: {
        serializedName: "innerError",
        readOnly: true,
        type: {
          name: "any"
        }
      }
    }
  }
};

export const WorkbookUpdateParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkbookUpdateParameters",
    modelProperties: {
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      serializedData: {
        serializedName: "properties.serializedData",
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "properties.category",
        type: {
          name: "String"
        }
      },
      tagsPropertiesTags: {
        serializedName: "properties.tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        nullable: true,
        type: {
          name: "String"
        }
      },
      revision: {
        serializedName: "properties.revision",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkbookInnerErrorTrace: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkbookInnerErrorTrace",
    modelProperties: {
      trace: {
        serializedName: "trace",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const WorkbookResourceIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkbookResourceIdentity",
    modelProperties: {
      ...ManagedServiceIdentity.type.modelProperties
    }
  }
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkbookResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkbookResource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "WorkbookResourceIdentity"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Workbook: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Workbook",
    modelProperties: {
      ...WorkbookResource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      serializedData: {
        serializedName: "properties.serializedData",
        nullable: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      timeModified: {
        serializedName: "properties.timeModified",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      category: {
        serializedName: "properties.category",
        type: {
          name: "String"
        }
      },
      tagsPropertiesTags: {
        serializedName: "properties.tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      userId: {
        serializedName: "properties.userId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      sourceId: {
        serializedName: "properties.sourceId",
        type: {
          name: "String"
        }
      },
      storageUri: {
        serializedName: "properties.storageUri",
        nullable: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        nullable: true,
        type: {
          name: "String"
        }
      },
      revision: {
        serializedName: "properties.revision",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};
