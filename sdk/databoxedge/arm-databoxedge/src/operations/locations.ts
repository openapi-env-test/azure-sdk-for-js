/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/locationsMappers";
import * as Parameters from "../models/parameters";
import { DataBoxEdgeManagementClientContext } from "../dataBoxEdgeManagementClientContext";

/** Class representing a Locations. */
export class Locations {
  private readonly client: DataBoxEdgeManagementClientContext;

  /**
   * Create a Locations.
   * @param {DataBoxEdgeManagementClientContext} client Reference to the service client.
   */
  constructor(client: DataBoxEdgeManagementClientContext) {
    this.client = client;
  }

  /**
   * @summary List all the available Skus in the region and information related to them
   * @param [options] The optional parameters
   * @returns Promise<Models.LocationsListAvailableSkusResponse>
   */
  listAvailableSkus(options?: Models.LocationsListAvailableSkusOptionalParams): Promise<Models.LocationsListAvailableSkusResponse>;
  /**
   * @param callback The callback
   */
  listAvailableSkus(callback: msRest.ServiceCallback<Models.SkuInformationList>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  listAvailableSkus(options: Models.LocationsListAvailableSkusOptionalParams, callback: msRest.ServiceCallback<Models.SkuInformationList>): void;
  listAvailableSkus(options?: Models.LocationsListAvailableSkusOptionalParams | msRest.ServiceCallback<Models.SkuInformationList>, callback?: msRest.ServiceCallback<Models.SkuInformationList>): Promise<Models.LocationsListAvailableSkusResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listAvailableSkusOperationSpec,
      callback) as Promise<Models.LocationsListAvailableSkusResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listAvailableSkusOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.DataBoxEdge/skus",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.filter
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SkuInformationList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
