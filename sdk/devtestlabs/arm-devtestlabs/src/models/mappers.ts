/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const ProviderOperationResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProviderOperationResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationMetadata"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationMetadata",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationMetadataDisplay"
        }
      }
    }
  }
};

export const OperationMetadataDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationMetadataDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CloudErrorBody"
        }
      }
    }
  }
};

export const CloudErrorBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudErrorBody",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CloudErrorBody"
            }
          }
        }
      }
    }
  }
};

export const LabList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LabList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Lab"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationResult",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      statusCode: {
        serializedName: "statusCode",
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "error.code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "error.message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScheduleList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScheduleList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Schedule"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ArtifactSourceList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArtifactSourceList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArtifactSource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ArmTemplateList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArmTemplateList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArmTemplate"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ParametersValueFileInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ParametersValueFileInfo",
    modelProperties: {
      fileName: {
        serializedName: "fileName",
        type: {
          name: "String"
        }
      },
      parametersValueInfo: {
        serializedName: "parametersValueInfo",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const ArtifactList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArtifactList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Artifact"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GenerateArmTemplateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GenerateArmTemplateRequest",
    modelProperties: {
      virtualMachineName: {
        serializedName: "virtualMachineName",
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ParameterInfo"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      fileUploadOptions: {
        serializedName: "fileUploadOptions",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ParameterInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ParameterInfo",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ArmTemplateInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArmTemplateInfo",
    modelProperties: {
      template: {
        serializedName: "template",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const UpdateResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateResource",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const CostThresholdProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CostThresholdProperties",
    modelProperties: {
      thresholdId: {
        serializedName: "thresholdId",
        type: {
          name: "String"
        }
      },
      displayOnChart: {
        serializedName: "displayOnChart",
        type: {
          name: "String"
        }
      },
      sendNotificationWhenExceeded: {
        serializedName: "sendNotificationWhenExceeded",
        type: {
          name: "String"
        }
      },
      notificationSent: {
        serializedName: "notificationSent",
        type: {
          name: "String"
        }
      },
      thresholdValue: {
        serializedName: "percentageThreshold.thresholdValue",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const LabCostDetailsProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LabCostDetailsProperties",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "DateTime"
        }
      },
      cost: {
        serializedName: "cost",
        type: {
          name: "Number"
        }
      },
      costType: {
        serializedName: "costType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LabResourceCostProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LabResourceCostProperties",
    modelProperties: {
      resourcename: {
        serializedName: "resourcename",
        type: {
          name: "String"
        }
      },
      resourceUId: {
        serializedName: "resourceUId",
        type: {
          name: "String"
        }
      },
      resourceCost: {
        serializedName: "resourceCost",
        type: {
          name: "Number"
        }
      },
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      resourceOwner: {
        serializedName: "resourceOwner",
        type: {
          name: "String"
        }
      },
      resourcePricingTier: {
        serializedName: "resourcePricingTier",
        type: {
          name: "String"
        }
      },
      resourceStatus: {
        serializedName: "resourceStatus",
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      externalResourceId: {
        serializedName: "externalResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomImageList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomImageList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CustomImage"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataDiskStorageTypeInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataDiskStorageTypeInfo",
    modelProperties: {
      lun: {
        serializedName: "lun",
        type: {
          name: "String"
        }
      },
      storageType: {
        serializedName: "storageType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FormulaList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FormulaList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Formula"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LabVirtualMachineCreationParameter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LabVirtualMachineCreationParameter",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      notes: {
        serializedName: "properties.notes",
        type: {
          name: "String"
        }
      },
      ownerObjectId: {
        defaultValue: "dynamicValue",
        serializedName: "properties.ownerObjectId",
        type: {
          name: "String"
        }
      },
      ownerUserPrincipalName: {
        serializedName: "properties.ownerUserPrincipalName",
        type: {
          name: "String"
        }
      },
      createdByUserId: {
        serializedName: "properties.createdByUserId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      createdByUser: {
        serializedName: "properties.createdByUser",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      createdDatePropertiesCreatedDate: {
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      computeId: {
        serializedName: "properties.computeId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      customImageId: {
        serializedName: "properties.customImageId",
        type: {
          name: "String"
        }
      },
      galleryImageVersionId: {
        serializedName: "properties.galleryImageVersionId",
        type: {
          name: "String"
        }
      },
      sharedImageId: {
        serializedName: "properties.sharedImageId",
        type: {
          name: "String"
        }
      },
      sharedImageVersion: {
        serializedName: "properties.sharedImageVersion",
        type: {
          name: "String"
        }
      },
      osTypePropertiesOsType: {
        serializedName: "properties.osType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "properties.size",
        type: {
          name: "String"
        }
      },
      userName: {
        serializedName: "properties.userName",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "properties.password",
        type: {
          name: "String"
        }
      },
      sshKey: {
        serializedName: "properties.sshKey",
        type: {
          name: "String"
        }
      },
      isAuthenticationWithSshKey: {
        serializedName: "properties.isAuthenticationWithSshKey",
        type: {
          name: "Boolean"
        }
      },
      fqdn: {
        serializedName: "properties.fqdn",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      labSubnetName: {
        serializedName: "properties.labSubnetName",
        type: {
          name: "String"
        }
      },
      labVirtualNetworkId: {
        serializedName: "properties.labVirtualNetworkId",
        type: {
          name: "String"
        }
      },
      disallowPublicIpAddress: {
        defaultValue: false,
        serializedName: "properties.disallowPublicIpAddress",
        type: {
          name: "Boolean"
        }
      },
      artifacts: {
        serializedName: "properties.artifacts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArtifactInstallProperties"
            }
          }
        }
      },
      planId: {
        serializedName: "properties.planId",
        type: {
          name: "String"
        }
      },
      osDiskSizeGb: {
        serializedName: "properties.osDiskSizeGb",
        type: {
          name: "Number"
        }
      },
      expirationDate: {
        serializedName: "properties.expirationDate",
        type: {
          name: "DateTime"
        }
      },
      allowClaim: {
        defaultValue: false,
        serializedName: "properties.allowClaim",
        type: {
          name: "Boolean"
        }
      },
      storageType: {
        serializedName: "properties.storageType",
        type: {
          name: "String"
        }
      },
      virtualMachineCreationSource: {
        serializedName: "properties.virtualMachineCreationSource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      environmentId: {
        serializedName: "properties.environmentId",
        type: {
          name: "String"
        }
      },
      dataDiskParameters: {
        serializedName: "properties.dataDiskParameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataDiskProperties"
            }
          }
        }
      },
      scheduleParameters: {
        serializedName: "properties.scheduleParameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScheduleCreationParameter"
            }
          }
        }
      },
      lastKnownPowerState: {
        serializedName: "properties.lastKnownPowerState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      canApplyArtifacts: {
        serializedName: "properties.canApplyArtifacts",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      provisioningStatePropertiesProvisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifierPropertiesUniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      idPropertiesApplicableScheduleId: {
        serializedName: "properties.applicableSchedule.id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      namePropertiesApplicableScheduleName: {
        serializedName: "properties.applicableSchedule.name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typePropertiesApplicableScheduleType: {
        serializedName: "properties.applicableSchedule.type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tagsPropertiesApplicableScheduleTags: {
        serializedName: "properties.applicableSchedule.tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      locationPropertiesApplicableScheduleLocation: {
        serializedName: "properties.applicableSchedule.location",
        type: {
          name: "String"
        }
      },
      systemDataPropertiesApplicableScheduleSystemData: {
        serializedName: "properties.applicableSchedule.systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      idPropertiesApplicableSchedulePropertiesLabVmsStartupId: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      namePropertiesApplicableSchedulePropertiesLabVmsStartupName: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typePropertiesApplicableSchedulePropertiesLabVmsStartupType: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tagsPropertiesApplicableSchedulePropertiesLabVmsStartupTags: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      locationPropertiesApplicableSchedulePropertiesLabVmsStartupLocation: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.location",
        type: {
          name: "String"
        }
      },
      systemDataPropertiesApplicableSchedulePropertiesLabVmsStartupSystemData: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      statusPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesStatus: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.status",
        type: {
          name: "String"
        }
      },
      taskTypePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesTaskType: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.taskType",
        type: {
          name: "String"
        }
      },
      timeZoneIdPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesTimeZoneId: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.timeZoneId",
        type: {
          name: "String"
        }
      },
      createdDatePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesCreatedDate: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      targetResourceIdPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesTargetResourceId: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.targetResourceId",
        type: {
          name: "String"
        }
      },
      provisioningStatePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesProvisioningState: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifierPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesUniqueIdentifier: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      statusPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsStatus: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.status",
        type: {
          name: "String"
        }
      },
      timeInMinutesPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsTimeInMinutes: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.timeInMinutes",
        type: {
          name: "Number"
        }
      },
      webhookUrlPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsWebhookUrl: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.webhookUrl",
        type: {
          name: "String"
        }
      },
      emailRecipientPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsEmailRecipient: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.emailRecipient",
        type: {
          name: "String"
        }
      },
      notificationLocalePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsNotificationLocale: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.notificationLocale",
        type: {
          name: "String"
        }
      },
      minutePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesHourlyRecurrenceMinute: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.hourlyRecurrence.minute",
        type: {
          name: "Number"
        }
      },
      timePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesDailyRecurrenceTime: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.dailyRecurrence.time",
        type: {
          name: "String"
        }
      },
      weekdaysPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesWeeklyRecurrenceWeekdays: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.weeklyRecurrence.weekdays",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      timePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesWeeklyRecurrenceTime: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.weeklyRecurrence.time",
        type: {
          name: "String"
        }
      },
      idPropertiesApplicableSchedulePropertiesLabVmsShutdownId: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      namePropertiesApplicableSchedulePropertiesLabVmsShutdownName: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typePropertiesApplicableSchedulePropertiesLabVmsShutdownType: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tagsPropertiesApplicableSchedulePropertiesLabVmsShutdownTags: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      locationPropertiesApplicableSchedulePropertiesLabVmsShutdownLocation: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.location",
        type: {
          name: "String"
        }
      },
      systemDataPropertiesApplicableSchedulePropertiesLabVmsShutdownSystemData: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      statusPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesStatus: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.status",
        type: {
          name: "String"
        }
      },
      taskTypePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesTaskType: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.taskType",
        type: {
          name: "String"
        }
      },
      timeZoneIdPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesTimeZoneId: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.timeZoneId",
        type: {
          name: "String"
        }
      },
      createdDatePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesCreatedDate: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      targetResourceIdPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesTargetResourceId: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.targetResourceId",
        type: {
          name: "String"
        }
      },
      provisioningStatePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesProvisioningState: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifierPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesUniqueIdentifier: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      statusPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsStatus: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.status",
        type: {
          name: "String"
        }
      },
      timeInMinutesPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsTimeInMinutes: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.timeInMinutes",
        type: {
          name: "Number"
        }
      },
      webhookUrlPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsWebhookUrl: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.webhookUrl",
        type: {
          name: "String"
        }
      },
      emailRecipientPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsEmailRecipient: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.emailRecipient",
        type: {
          name: "String"
        }
      },
      notificationLocalePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsNotificationLocale: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.notificationLocale",
        type: {
          name: "String"
        }
      },
      minutePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesHourlyRecurrenceMinute: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.hourlyRecurrence.minute",
        type: {
          name: "Number"
        }
      },
      timePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesDailyRecurrenceTime: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.dailyRecurrence.time",
        type: {
          name: "String"
        }
      },
      weekdaysPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesWeeklyRecurrenceWeekdays: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.weeklyRecurrence.weekdays",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      timePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesWeeklyRecurrenceTime: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.weeklyRecurrence.time",
        type: {
          name: "String"
        }
      },
      virtualNetworkId: {
        serializedName: "properties.networkInterface.virtualNetworkId",
        type: {
          name: "String"
        }
      },
      subnetId: {
        serializedName: "properties.networkInterface.subnetId",
        type: {
          name: "String"
        }
      },
      publicIpAddressId: {
        serializedName: "properties.networkInterface.publicIpAddressId",
        type: {
          name: "String"
        }
      },
      publicIpAddress: {
        serializedName: "properties.networkInterface.publicIpAddress",
        type: {
          name: "String"
        }
      },
      privateIpAddress: {
        serializedName: "properties.networkInterface.privateIpAddress",
        type: {
          name: "String"
        }
      },
      dnsName: {
        serializedName: "properties.networkInterface.dnsName",
        type: {
          name: "String"
        }
      },
      rdpAuthority: {
        serializedName: "properties.networkInterface.rdpAuthority",
        type: {
          name: "String"
        }
      },
      sshAuthority: {
        serializedName: "properties.networkInterface.sshAuthority",
        type: {
          name: "String"
        }
      },
      inboundNatRules: {
        serializedName:
          "properties.networkInterface.sharedPublicIpAddressConfiguration.inboundNatRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InboundNatRule"
            }
          }
        }
      },
      statuses: {
        serializedName: "properties.computeVm.statuses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComputeVmInstanceViewStatus"
            }
          }
        }
      },
      osTypePropertiesComputeVmOsType: {
        serializedName: "properties.computeVm.osType",
        type: {
          name: "String"
        }
      },
      vmSize: {
        serializedName: "properties.computeVm.vmSize",
        type: {
          name: "String"
        }
      },
      networkInterfaceId: {
        serializedName: "properties.computeVm.networkInterfaceId",
        type: {
          name: "String"
        }
      },
      osDiskId: {
        serializedName: "properties.computeVm.osDiskId",
        type: {
          name: "String"
        }
      },
      dataDiskIds: {
        serializedName: "properties.computeVm.dataDiskIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      dataDisks: {
        serializedName: "properties.computeVm.dataDisks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComputeDataDisk"
            }
          }
        }
      },
      offer: {
        serializedName: "properties.galleryImageReference.offer",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "properties.galleryImageReference.publisher",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "properties.galleryImageReference.sku",
        type: {
          name: "String"
        }
      },
      osTypePropertiesGalleryImageReferenceOsType: {
        serializedName: "properties.galleryImageReference.osType",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.galleryImageReference.version",
        type: {
          name: "String"
        }
      },
      deploymentStatus: {
        serializedName: "properties.artifactDeploymentStatus.deploymentStatus",
        type: {
          name: "String"
        }
      },
      artifactsApplied: {
        serializedName: "properties.artifactDeploymentStatus.artifactsApplied",
        type: {
          name: "Number"
        }
      },
      totalArtifacts: {
        serializedName: "properties.artifactDeploymentStatus.totalArtifacts",
        type: {
          name: "Number"
        }
      },
      instanceCount: {
        serializedName: "properties.bulkCreationParameters.instanceCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ArtifactInstallProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArtifactInstallProperties",
    modelProperties: {
      artifactId: {
        serializedName: "artifactId",
        type: {
          name: "String"
        }
      },
      artifactTitle: {
        serializedName: "artifactTitle",
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArtifactParameterProperties"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      deploymentStatusMessage: {
        serializedName: "deploymentStatusMessage",
        type: {
          name: "String"
        }
      },
      vmExtensionStatusMessage: {
        serializedName: "vmExtensionStatusMessage",
        type: {
          name: "String"
        }
      },
      installTime: {
        serializedName: "installTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ArtifactParameterProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArtifactParameterProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComputeVmInstanceViewStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComputeVmInstanceViewStatus",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      displayStatus: {
        serializedName: "displayStatus",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComputeDataDisk: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComputeDataDisk",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      diskUri: {
        serializedName: "diskUri",
        type: {
          name: "String"
        }
      },
      managedDiskId: {
        serializedName: "managedDiskId",
        type: {
          name: "String"
        }
      },
      diskSizeGiB: {
        serializedName: "diskSizeGiB",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const InboundNatRule: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InboundNatRule",
    modelProperties: {
      transportProtocol: {
        serializedName: "transportProtocol",
        type: {
          name: "String"
        }
      },
      frontendPort: {
        serializedName: "frontendPort",
        type: {
          name: "Number"
        }
      },
      backendPort: {
        serializedName: "backendPort",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DataDiskProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataDiskProperties",
    modelProperties: {
      existingLabDiskId: {
        serializedName: "existingLabDiskId",
        type: {
          name: "String"
        }
      },
      hostCaching: {
        serializedName: "hostCaching",
        type: {
          name: "String"
        }
      },
      diskSizeGiB: {
        serializedName: "attachNewDataDiskOptions.diskSizeGiB",
        type: {
          name: "Number"
        }
      },
      diskName: {
        serializedName: "attachNewDataDiskOptions.diskName",
        type: {
          name: "String"
        }
      },
      diskType: {
        serializedName: "attachNewDataDiskOptions.diskType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScheduleCreationParameter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScheduleCreationParameter",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      statusPropertiesStatus: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      taskType: {
        serializedName: "properties.taskType",
        type: {
          name: "String"
        }
      },
      timeZoneId: {
        serializedName: "properties.timeZoneId",
        type: {
          name: "String"
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      targetResourceId: {
        serializedName: "properties.targetResourceId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      statusPropertiesNotificationSettingsStatus: {
        serializedName: "properties.notificationSettings.status",
        type: {
          name: "String"
        }
      },
      timeInMinutes: {
        serializedName: "properties.notificationSettings.timeInMinutes",
        type: {
          name: "Number"
        }
      },
      webhookUrl: {
        serializedName: "properties.notificationSettings.webhookUrl",
        type: {
          name: "String"
        }
      },
      emailRecipient: {
        serializedName: "properties.notificationSettings.emailRecipient",
        type: {
          name: "String"
        }
      },
      notificationLocale: {
        serializedName: "properties.notificationSettings.notificationLocale",
        type: {
          name: "String"
        }
      },
      minute: {
        serializedName: "properties.hourlyRecurrence.minute",
        type: {
          name: "Number"
        }
      },
      timePropertiesDailyRecurrenceTime: {
        serializedName: "properties.dailyRecurrence.time",
        type: {
          name: "String"
        }
      },
      weekdays: {
        serializedName: "properties.weeklyRecurrence.weekdays",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      timePropertiesWeeklyRecurrenceTime: {
        serializedName: "properties.weeklyRecurrence.time",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryImageList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryImage"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationChannelList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotificationChannelList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NotificationChannel"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Event: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Event",
    modelProperties: {
      eventName: {
        serializedName: "eventName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotifyParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotifyParameters",
    modelProperties: {
      eventName: {
        serializedName: "eventName",
        type: {
          name: "String"
        }
      },
      jsonPayload: {
        serializedName: "jsonPayload",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicySetList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicySetList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicySet"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EvaluatePoliciesRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EvaluatePoliciesRequest",
    modelProperties: {
      policies: {
        serializedName: "policies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EvaluatePoliciesProperties"
            }
          }
        }
      }
    }
  }
};

export const EvaluatePoliciesProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EvaluatePoliciesProperties",
    modelProperties: {
      factName: {
        serializedName: "factName",
        type: {
          name: "String"
        }
      },
      factData: {
        serializedName: "factData",
        type: {
          name: "String"
        }
      },
      valueOffset: {
        serializedName: "valueOffset",
        type: {
          name: "String"
        }
      },
      userObjectId: {
        serializedName: "userObjectId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EvaluatePoliciesResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EvaluatePoliciesResponse",
    modelProperties: {
      results: {
        serializedName: "results",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicySetResult"
            }
          }
        }
      }
    }
  }
};

export const PolicySetResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicySetResult",
    modelProperties: {
      hasError: {
        serializedName: "hasError",
        type: {
          name: "Boolean"
        }
      },
      policyViolations: {
        serializedName: "policyViolations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicyViolation"
            }
          }
        }
      }
    }
  }
};

export const PolicyViolation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyViolation",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicyList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Policy"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LabSecretList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LabSecretList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LabSecret"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceRunnerList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceRunnerList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceRunner"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SharedGalleryList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedGalleryList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SharedGallery"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SharedImageList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedImageList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SharedImage"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageVersionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImageVersionProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "User"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiskList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiskList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Disk"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AttachDiskProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AttachDiskProperties",
    modelProperties: {
      leasedByLabVmId: {
        serializedName: "leasedByLabVmId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DetachDiskProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DetachDiskProperties",
    modelProperties: {
      leasedByLabVmId: {
        serializedName: "leasedByLabVmId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DtlEnvironmentList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DtlEnvironmentList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DtlEnvironment"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ArmTemplateParameterProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArmTemplateParameterProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecretList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecretList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Secret"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceFabricList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceFabricList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceFabric"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LabVirtualMachineList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LabVirtualMachineList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LabVirtualMachine"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplyArtifactsRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplyArtifactsRequest",
    modelProperties: {
      artifacts: {
        serializedName: "artifacts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArtifactInstallProperties"
            }
          }
        }
      }
    }
  }
};

export const DetachDataDiskProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DetachDataDiskProperties",
    modelProperties: {
      existingLabDiskId: {
        serializedName: "existingLabDiskId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RdpConnection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RdpConnection",
    modelProperties: {
      contents: {
        serializedName: "contents",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResizeLabVirtualMachineProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResizeLabVirtualMachineProperties",
    modelProperties: {
      size: {
        serializedName: "size",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualNetworkList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualNetwork"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Subnet: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Subnet",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      labSubnetName: {
        serializedName: "labSubnetName",
        type: {
          name: "String"
        }
      },
      allowPublicIp: {
        serializedName: "allowPublicIp",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExternalSubnet: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExternalSubnet",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubnetOverride: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubnetOverride",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      labSubnetName: {
        serializedName: "labSubnetName",
        type: {
          name: "String"
        }
      },
      useInVmCreationPermission: {
        serializedName: "useInVmCreationPermission",
        type: {
          name: "String"
        }
      },
      usePublicIpAddressPermission: {
        serializedName: "usePublicIpAddressPermission",
        type: {
          name: "String"
        }
      },
      virtualNetworkPoolName: {
        serializedName: "virtualNetworkPoolName",
        type: {
          name: "String"
        }
      },
      allowedPorts: {
        serializedName: "sharedPublicIpAddressConfiguration.allowedPorts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Port"
            }
          }
        }
      }
    }
  }
};

export const Port: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Port",
    modelProperties: {
      transportProtocol: {
        serializedName: "transportProtocol",
        type: {
          name: "String"
        }
      },
      backendPort: {
        serializedName: "backendPort",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const BastionHostList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BastionHostList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BastionHost"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExportResourceUsageParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExportResourceUsageParameters",
    modelProperties: {
      blobStorageAbsoluteSasUri: {
        serializedName: "blobStorageAbsoluteSasUri",
        type: {
          name: "String"
        }
      },
      usageStartDate: {
        serializedName: "usageStartDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const GenerateUploadUriParameter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GenerateUploadUriParameter",
    modelProperties: {
      blobName: {
        serializedName: "blobName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GenerateUploadUriResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GenerateUploadUriResponse",
    modelProperties: {
      uploadUri: {
        serializedName: "uploadUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImportLabVirtualMachineRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImportLabVirtualMachineRequest",
    modelProperties: {
      sourceVirtualMachineResourceId: {
        serializedName: "sourceVirtualMachineResourceId",
        type: {
          name: "String"
        }
      },
      destinationVirtualMachineName: {
        serializedName: "destinationVirtualMachineName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LabVhdList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LabVhdList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LabVhd"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LabVhd: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LabVhd",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RetargetScheduleProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RetargetScheduleProperties",
    modelProperties: {
      currentResourceId: {
        serializedName: "currentResourceId",
        type: {
          name: "String"
        }
      },
      targetResourceId: {
        serializedName: "targetResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomImagePropertiesFromPlanFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomImagePropertiesFromPlanFragment",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      offer: {
        serializedName: "offer",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LabCostList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LabCostList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LabCost"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WeekDetailsFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WeekDetailsFragment",
    modelProperties: {
      weekdays: {
        serializedName: "weekdays",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      time: {
        serializedName: "time",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceModelWithAllowedPropertySet: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceModelWithAllowedPropertySet",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      managedBy: {
        serializedName: "managedBy",
        type: {
          name: "String"
        }
      },
      kind: {
        constraints: {
          Pattern: new RegExp("^[-\\w\\._,\\(\\)]+$")
        },
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ResourceModelWithAllowedPropertySetIdentity"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ResourceModelWithAllowedPropertySetSku"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "ResourceModelWithAllowedPropertySetPlan"
        }
      }
    }
  }
};

export const Identity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Identity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        defaultValue: "SystemAssigned",
        isConstant: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Sku: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "Enum",
          allowedValues: ["Free", "Basic", "Standard", "Premium"]
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "String"
        }
      },
      family: {
        serializedName: "family",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Plan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Plan",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "publisher",
        required: true,
        type: {
          name: "String"
        }
      },
      product: {
        serializedName: "product",
        required: true,
        type: {
          name: "String"
        }
      },
      promotionCode: {
        serializedName: "promotionCode",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationStatusResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationStatusResult",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      percentComplete: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        serializedName: "percentComplete",
        type: {
          name: "Number"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      operations: {
        serializedName: "operations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationStatusResult"
            }
          }
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const LocationData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LocationData",
    modelProperties: {
      name: {
        constraints: {
          MaxLength: 256
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      city: {
        serializedName: "city",
        type: {
          name: "String"
        }
      },
      district: {
        serializedName: "district",
        type: {
          name: "String"
        }
      },
      countryOrRegion: {
        serializedName: "countryOrRegion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EncryptionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EncryptionProperties",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      keyVaultProperties: {
        serializedName: "keyVaultProperties",
        type: {
          name: "Composite",
          className: "KeyVaultProperties"
        }
      }
    }
  }
};

export const KeyVaultProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultProperties",
    modelProperties: {
      keyIdentifier: {
        serializedName: "keyIdentifier",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckNameAvailabilityRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckNameAvailabilityResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityResponse",
    modelProperties: {
      nameAvailable: {
        serializedName: "nameAvailable",
        type: {
          name: "Boolean"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Lab: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Lab",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      typeIdentityType: {
        serializedName: "identity.type",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "identity.principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "identity.tenantId",
        type: {
          name: "String"
        }
      },
      clientSecretUrl: {
        serializedName: "identity.clientSecretUrl",
        type: {
          name: "String"
        }
      },
      userAssignedIdentities: {
        serializedName: "identity.userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      defaultStorageAccount: {
        serializedName: "properties.defaultStorageAccount",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      defaultPremiumStorageAccount: {
        serializedName: "properties.defaultPremiumStorageAccount",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      artifactsStorageAccount: {
        serializedName: "properties.artifactsStorageAccount",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      premiumDataDiskStorageAccount: {
        serializedName: "properties.premiumDataDiskStorageAccount",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "properties.vaultName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      labStorageType: {
        serializedName: "properties.labStorageType",
        type: {
          name: "String"
        }
      },
      mandatoryArtifactsResourceIdsLinux: {
        serializedName: "properties.mandatoryArtifactsResourceIdsLinux",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      mandatoryArtifactsResourceIdsWindows: {
        serializedName: "properties.mandatoryArtifactsResourceIdsWindows",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      premiumDataDisks: {
        serializedName: "properties.premiumDataDisks",
        type: {
          name: "String"
        }
      },
      environmentPermission: {
        serializedName: "properties.environmentPermission",
        type: {
          name: "String"
        }
      },
      vmCreationResourceGroup: {
        serializedName: "properties.vmCreationResourceGroup",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      publicIpId: {
        serializedName: "properties.publicIpId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      loadBalancerId: {
        serializedName: "properties.loadBalancerId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      networkSecurityGroupId: {
        serializedName: "properties.networkSecurityGroupId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      extendedProperties: {
        serializedName: "properties.extendedProperties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      browserConnect: {
        serializedName: "properties.browserConnect",
        type: {
          name: "String"
        }
      },
      disableAutoUpgradeCseMinorVersion: {
        serializedName: "properties.disableAutoUpgradeCseMinorVersion",
        type: {
          name: "Boolean"
        }
      },
      managementIdentities: {
        serializedName: "properties.managementIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      isolateLabResources: {
        serializedName: "properties.isolateLabResources",
        type: {
          name: "String"
        }
      },
      defaultSecretName: {
        serializedName: "properties.defaultSecretName",
        type: {
          name: "String"
        }
      },
      provisioningStatePropertiesProvisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifierPropertiesUniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      diskEncryptionSetId: {
        serializedName: "properties.encryption.diskEncryptionSetId",
        type: {
          name: "String"
        }
      },
      typePropertiesEncryptionType: {
        serializedName: "properties.encryption.type",
        type: {
          name: "String"
        }
      },
      enabledPropertiesSupportEnabled: {
        serializedName: "properties.support.enabled",
        type: {
          name: "String"
        }
      },
      markdownPropertiesSupportMarkdown: {
        serializedName: "properties.support.markdown",
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "properties.announcement.title",
        type: {
          name: "String"
        }
      },
      markdownPropertiesAnnouncementMarkdown: {
        serializedName: "properties.announcement.markdown",
        type: {
          name: "String"
        }
      },
      enabledPropertiesAnnouncementEnabled: {
        serializedName: "properties.announcement.enabled",
        type: {
          name: "String"
        }
      },
      expirationDate: {
        serializedName: "properties.announcement.expirationDate",
        type: {
          name: "DateTime"
        }
      },
      expired: {
        serializedName: "properties.announcement.expired",
        type: {
          name: "Boolean"
        }
      },
      provisioningStatePropertiesAnnouncementProvisioningState: {
        serializedName: "properties.announcement.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifierPropertiesAnnouncementUniqueIdentifier: {
        serializedName: "properties.announcement.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Schedule: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Schedule",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      statusPropertiesStatus: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      taskType: {
        serializedName: "properties.taskType",
        type: {
          name: "String"
        }
      },
      timeZoneId: {
        serializedName: "properties.timeZoneId",
        type: {
          name: "String"
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      targetResourceId: {
        serializedName: "properties.targetResourceId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      statusPropertiesNotificationSettingsStatus: {
        serializedName: "properties.notificationSettings.status",
        type: {
          name: "String"
        }
      },
      timeInMinutes: {
        serializedName: "properties.notificationSettings.timeInMinutes",
        type: {
          name: "Number"
        }
      },
      webhookUrl: {
        serializedName: "properties.notificationSettings.webhookUrl",
        type: {
          name: "String"
        }
      },
      emailRecipient: {
        serializedName: "properties.notificationSettings.emailRecipient",
        type: {
          name: "String"
        }
      },
      notificationLocale: {
        serializedName: "properties.notificationSettings.notificationLocale",
        type: {
          name: "String"
        }
      },
      minute: {
        serializedName: "properties.hourlyRecurrence.minute",
        type: {
          name: "Number"
        }
      },
      timePropertiesDailyRecurrenceTime: {
        serializedName: "properties.dailyRecurrence.time",
        type: {
          name: "String"
        }
      },
      weekdays: {
        serializedName: "properties.weeklyRecurrence.weekdays",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      timePropertiesWeeklyRecurrenceTime: {
        serializedName: "properties.weeklyRecurrence.time",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ArtifactSource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArtifactSource",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      uri: {
        serializedName: "properties.uri",
        type: {
          name: "String"
        }
      },
      sourceType: {
        serializedName: "properties.sourceType",
        type: {
          name: "String"
        }
      },
      folderPath: {
        serializedName: "properties.folderPath",
        type: {
          name: "String"
        }
      },
      armTemplateFolderPath: {
        serializedName: "properties.armTemplateFolderPath",
        type: {
          name: "String"
        }
      },
      branchRef: {
        serializedName: "properties.branchRef",
        type: {
          name: "String"
        }
      },
      securityToken: {
        serializedName: "properties.securityToken",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ArmTemplate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArmTemplate",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "properties.publisher",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      icon: {
        serializedName: "properties.icon",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      contents: {
        serializedName: "properties.contents",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      parametersValueFilesInfo: {
        serializedName: "properties.parametersValueFilesInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ParametersValueFileInfo"
            }
          }
        }
      },
      enabled: {
        serializedName: "properties.enabled",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Artifact: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Artifact",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      title: {
        serializedName: "properties.title",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "properties.publisher",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      filePath: {
        serializedName: "properties.filePath",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      icon: {
        serializedName: "properties.icon",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      targetOsType: {
        serializedName: "properties.targetOsType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "properties.parameters",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const LabCost: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LabCost",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      labCostDetails: {
        serializedName: "properties.labCostDetails",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LabCostDetailsProperties"
            }
          }
        }
      },
      resourceCosts: {
        serializedName: "properties.resourceCosts",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LabResourceCostProperties"
            }
          }
        }
      },
      currencyCode: {
        serializedName: "properties.currencyCode",
        type: {
          name: "String"
        }
      },
      startDateTime: {
        serializedName: "properties.startDateTime",
        type: {
          name: "DateTime"
        }
      },
      endDateTime: {
        serializedName: "properties.endDateTime",
        type: {
          name: "DateTime"
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      estimatedLabCost: {
        serializedName: "properties.labCostSummary.estimatedLabCost",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "properties.targetCost.status",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "properties.targetCost.target",
        type: {
          name: "Number"
        }
      },
      costThresholds: {
        serializedName: "properties.targetCost.costThresholds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostThresholdProperties"
            }
          }
        }
      },
      cycleStartDateTime: {
        serializedName: "properties.targetCost.cycleStartDateTime",
        type: {
          name: "DateTime"
        }
      },
      cycleEndDateTime: {
        serializedName: "properties.targetCost.cycleEndDateTime",
        type: {
          name: "DateTime"
        }
      },
      cycleType: {
        serializedName: "properties.targetCost.cycleType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomImage",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      author: {
        serializedName: "properties.author",
        type: {
          name: "String"
        }
      },
      creationDate: {
        serializedName: "properties.creationDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      managedImageId: {
        serializedName: "properties.managedImageId",
        type: {
          name: "String"
        }
      },
      managedSnapshotId: {
        serializedName: "properties.managedSnapshotId",
        type: {
          name: "String"
        }
      },
      dataDiskStorageInfo: {
        serializedName: "properties.dataDiskStorageInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataDiskStorageTypeInfo"
            }
          }
        }
      },
      isPlanAuthorized: {
        serializedName: "properties.isPlanAuthorized",
        type: {
          name: "Boolean"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      idPropertiesCustomImagePlanId: {
        serializedName: "properties.customImagePlan.id",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "properties.customImagePlan.publisher",
        type: {
          name: "String"
        }
      },
      offer: {
        serializedName: "properties.customImagePlan.offer",
        type: {
          name: "String"
        }
      },
      imageName: {
        serializedName: "properties.vhd.imageName",
        type: {
          name: "String"
        }
      },
      sysPrep: {
        serializedName: "properties.vhd.sysPrep",
        type: {
          name: "Boolean"
        }
      },
      osType: {
        serializedName: "properties.vhd.osType",
        type: {
          name: "String"
        }
      },
      sourceVmId: {
        serializedName: "properties.vm.sourceVmId",
        type: {
          name: "String"
        }
      },
      linuxOsState: {
        serializedName: "properties.vm.linuxOsInfo.linuxOsState",
        type: {
          name: "String"
        }
      },
      windowsOsState: {
        serializedName: "properties.vm.windowsOsInfo.windowsOsState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicableSchedule: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicableSchedule",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      idPropertiesLabVmsStartupId: {
        serializedName: "properties.labVmsStartup.id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      namePropertiesLabVmsStartupName: {
        serializedName: "properties.labVmsStartup.name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typePropertiesLabVmsStartupType: {
        serializedName: "properties.labVmsStartup.type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tagsPropertiesLabVmsStartupTags: {
        serializedName: "properties.labVmsStartup.tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      locationPropertiesLabVmsStartupLocation: {
        serializedName: "properties.labVmsStartup.location",
        type: {
          name: "String"
        }
      },
      systemDataPropertiesLabVmsStartupSystemData: {
        serializedName: "properties.labVmsStartup.systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      statusPropertiesLabVmsStartupPropertiesStatus: {
        serializedName: "properties.labVmsStartup.properties.status",
        type: {
          name: "String"
        }
      },
      taskTypePropertiesLabVmsStartupPropertiesTaskType: {
        serializedName: "properties.labVmsStartup.properties.taskType",
        type: {
          name: "String"
        }
      },
      timeZoneIdPropertiesLabVmsStartupPropertiesTimeZoneId: {
        serializedName: "properties.labVmsStartup.properties.timeZoneId",
        type: {
          name: "String"
        }
      },
      createdDatePropertiesLabVmsStartupPropertiesCreatedDate: {
        serializedName: "properties.labVmsStartup.properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      targetResourceIdPropertiesLabVmsStartupPropertiesTargetResourceId: {
        serializedName: "properties.labVmsStartup.properties.targetResourceId",
        type: {
          name: "String"
        }
      },
      provisioningStatePropertiesLabVmsStartupPropertiesProvisioningState: {
        serializedName: "properties.labVmsStartup.properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifierPropertiesLabVmsStartupPropertiesUniqueIdentifier: {
        serializedName: "properties.labVmsStartup.properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      statusPropertiesLabVmsStartupPropertiesNotificationSettingsStatus: {
        serializedName:
          "properties.labVmsStartup.properties.notificationSettings.status",
        type: {
          name: "String"
        }
      },
      timeInMinutesPropertiesLabVmsStartupPropertiesNotificationSettingsTimeInMinutes: {
        serializedName:
          "properties.labVmsStartup.properties.notificationSettings.timeInMinutes",
        type: {
          name: "Number"
        }
      },
      webhookUrlPropertiesLabVmsStartupPropertiesNotificationSettingsWebhookUrl: {
        serializedName:
          "properties.labVmsStartup.properties.notificationSettings.webhookUrl",
        type: {
          name: "String"
        }
      },
      emailRecipientPropertiesLabVmsStartupPropertiesNotificationSettingsEmailRecipient: {
        serializedName:
          "properties.labVmsStartup.properties.notificationSettings.emailRecipient",
        type: {
          name: "String"
        }
      },
      notificationLocalePropertiesLabVmsStartupPropertiesNotificationSettingsNotificationLocale: {
        serializedName:
          "properties.labVmsStartup.properties.notificationSettings.notificationLocale",
        type: {
          name: "String"
        }
      },
      minutePropertiesLabVmsStartupPropertiesHourlyRecurrenceMinute: {
        serializedName:
          "properties.labVmsStartup.properties.hourlyRecurrence.minute",
        type: {
          name: "Number"
        }
      },
      timePropertiesLabVmsStartupPropertiesDailyRecurrenceTime: {
        serializedName:
          "properties.labVmsStartup.properties.dailyRecurrence.time",
        type: {
          name: "String"
        }
      },
      weekdaysPropertiesLabVmsStartupPropertiesWeeklyRecurrenceWeekdays: {
        serializedName:
          "properties.labVmsStartup.properties.weeklyRecurrence.weekdays",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      timePropertiesLabVmsStartupPropertiesWeeklyRecurrenceTime: {
        serializedName:
          "properties.labVmsStartup.properties.weeklyRecurrence.time",
        type: {
          name: "String"
        }
      },
      idPropertiesLabVmsShutdownId: {
        serializedName: "properties.labVmsShutdown.id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      namePropertiesLabVmsShutdownName: {
        serializedName: "properties.labVmsShutdown.name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typePropertiesLabVmsShutdownType: {
        serializedName: "properties.labVmsShutdown.type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tagsPropertiesLabVmsShutdownTags: {
        serializedName: "properties.labVmsShutdown.tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      locationPropertiesLabVmsShutdownLocation: {
        serializedName: "properties.labVmsShutdown.location",
        type: {
          name: "String"
        }
      },
      systemDataPropertiesLabVmsShutdownSystemData: {
        serializedName: "properties.labVmsShutdown.systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      statusPropertiesLabVmsShutdownPropertiesStatus: {
        serializedName: "properties.labVmsShutdown.properties.status",
        type: {
          name: "String"
        }
      },
      taskTypePropertiesLabVmsShutdownPropertiesTaskType: {
        serializedName: "properties.labVmsShutdown.properties.taskType",
        type: {
          name: "String"
        }
      },
      timeZoneIdPropertiesLabVmsShutdownPropertiesTimeZoneId: {
        serializedName: "properties.labVmsShutdown.properties.timeZoneId",
        type: {
          name: "String"
        }
      },
      createdDatePropertiesLabVmsShutdownPropertiesCreatedDate: {
        serializedName: "properties.labVmsShutdown.properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      targetResourceIdPropertiesLabVmsShutdownPropertiesTargetResourceId: {
        serializedName: "properties.labVmsShutdown.properties.targetResourceId",
        type: {
          name: "String"
        }
      },
      provisioningStatePropertiesLabVmsShutdownPropertiesProvisioningState: {
        serializedName:
          "properties.labVmsShutdown.properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifierPropertiesLabVmsShutdownPropertiesUniqueIdentifier: {
        serializedName: "properties.labVmsShutdown.properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      statusPropertiesLabVmsShutdownPropertiesNotificationSettingsStatus: {
        serializedName:
          "properties.labVmsShutdown.properties.notificationSettings.status",
        type: {
          name: "String"
        }
      },
      timeInMinutesPropertiesLabVmsShutdownPropertiesNotificationSettingsTimeInMinutes: {
        serializedName:
          "properties.labVmsShutdown.properties.notificationSettings.timeInMinutes",
        type: {
          name: "Number"
        }
      },
      webhookUrlPropertiesLabVmsShutdownPropertiesNotificationSettingsWebhookUrl: {
        serializedName:
          "properties.labVmsShutdown.properties.notificationSettings.webhookUrl",
        type: {
          name: "String"
        }
      },
      emailRecipientPropertiesLabVmsShutdownPropertiesNotificationSettingsEmailRecipient: {
        serializedName:
          "properties.labVmsShutdown.properties.notificationSettings.emailRecipient",
        type: {
          name: "String"
        }
      },
      notificationLocalePropertiesLabVmsShutdownPropertiesNotificationSettingsNotificationLocale: {
        serializedName:
          "properties.labVmsShutdown.properties.notificationSettings.notificationLocale",
        type: {
          name: "String"
        }
      },
      minutePropertiesLabVmsShutdownPropertiesHourlyRecurrenceMinute: {
        serializedName:
          "properties.labVmsShutdown.properties.hourlyRecurrence.minute",
        type: {
          name: "Number"
        }
      },
      timePropertiesLabVmsShutdownPropertiesDailyRecurrenceTime: {
        serializedName:
          "properties.labVmsShutdown.properties.dailyRecurrence.time",
        type: {
          name: "String"
        }
      },
      weekdaysPropertiesLabVmsShutdownPropertiesWeeklyRecurrenceWeekdays: {
        serializedName:
          "properties.labVmsShutdown.properties.weeklyRecurrence.weekdays",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      timePropertiesLabVmsShutdownPropertiesWeeklyRecurrenceTime: {
        serializedName:
          "properties.labVmsShutdown.properties.weeklyRecurrence.time",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Formula: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Formula",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      author: {
        serializedName: "properties.author",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      osTypePropertiesOsType: {
        serializedName: "properties.osType",
        type: {
          name: "String"
        }
      },
      creationDate: {
        serializedName: "properties.creationDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      provisioningStatePropertiesProvisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifierPropertiesUniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      labVmId: {
        serializedName: "properties.vm.labVmId",
        type: {
          name: "String"
        }
      },
      namePropertiesFormulaContentName: {
        serializedName: "properties.formulaContent.name",
        type: {
          name: "String"
        }
      },
      locationPropertiesFormulaContentLocation: {
        serializedName: "properties.formulaContent.location",
        type: {
          name: "String"
        }
      },
      tagsPropertiesFormulaContentTags: {
        serializedName: "properties.formulaContent.tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      notes: {
        serializedName: "properties.formulaContent.properties.notes",
        type: {
          name: "String"
        }
      },
      ownerObjectId: {
        defaultValue: "dynamicValue",
        serializedName: "properties.formulaContent.properties.ownerObjectId",
        type: {
          name: "String"
        }
      },
      ownerUserPrincipalName: {
        serializedName:
          "properties.formulaContent.properties.ownerUserPrincipalName",
        type: {
          name: "String"
        }
      },
      createdByUserId: {
        serializedName: "properties.formulaContent.properties.createdByUserId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      createdByUser: {
        serializedName: "properties.formulaContent.properties.createdByUser",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      createdDatePropertiesFormulaContentPropertiesCreatedDate: {
        serializedName: "properties.formulaContent.properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      computeId: {
        serializedName: "properties.formulaContent.properties.computeId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      customImageId: {
        serializedName: "properties.formulaContent.properties.customImageId",
        type: {
          name: "String"
        }
      },
      galleryImageVersionId: {
        serializedName:
          "properties.formulaContent.properties.galleryImageVersionId",
        type: {
          name: "String"
        }
      },
      sharedImageId: {
        serializedName: "properties.formulaContent.properties.sharedImageId",
        type: {
          name: "String"
        }
      },
      sharedImageVersion: {
        serializedName:
          "properties.formulaContent.properties.sharedImageVersion",
        type: {
          name: "String"
        }
      },
      osTypePropertiesFormulaContentPropertiesOsType: {
        serializedName: "properties.formulaContent.properties.osType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "properties.formulaContent.properties.size",
        type: {
          name: "String"
        }
      },
      userName: {
        serializedName: "properties.formulaContent.properties.userName",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "properties.formulaContent.properties.password",
        type: {
          name: "String"
        }
      },
      sshKey: {
        serializedName: "properties.formulaContent.properties.sshKey",
        type: {
          name: "String"
        }
      },
      isAuthenticationWithSshKey: {
        serializedName:
          "properties.formulaContent.properties.isAuthenticationWithSshKey",
        type: {
          name: "Boolean"
        }
      },
      fqdn: {
        serializedName: "properties.formulaContent.properties.fqdn",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      labSubnetName: {
        serializedName: "properties.formulaContent.properties.labSubnetName",
        type: {
          name: "String"
        }
      },
      labVirtualNetworkId: {
        serializedName:
          "properties.formulaContent.properties.labVirtualNetworkId",
        type: {
          name: "String"
        }
      },
      disallowPublicIpAddress: {
        defaultValue: false,
        serializedName:
          "properties.formulaContent.properties.disallowPublicIpAddress",
        type: {
          name: "Boolean"
        }
      },
      artifacts: {
        serializedName: "properties.formulaContent.properties.artifacts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArtifactInstallProperties"
            }
          }
        }
      },
      planId: {
        serializedName: "properties.formulaContent.properties.planId",
        type: {
          name: "String"
        }
      },
      osDiskSizeGb: {
        serializedName: "properties.formulaContent.properties.osDiskSizeGb",
        type: {
          name: "Number"
        }
      },
      expirationDate: {
        serializedName: "properties.formulaContent.properties.expirationDate",
        type: {
          name: "DateTime"
        }
      },
      allowClaim: {
        defaultValue: false,
        serializedName: "properties.formulaContent.properties.allowClaim",
        type: {
          name: "Boolean"
        }
      },
      storageType: {
        serializedName: "properties.formulaContent.properties.storageType",
        type: {
          name: "String"
        }
      },
      virtualMachineCreationSource: {
        serializedName:
          "properties.formulaContent.properties.virtualMachineCreationSource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      environmentId: {
        serializedName: "properties.formulaContent.properties.environmentId",
        type: {
          name: "String"
        }
      },
      dataDiskParameters: {
        serializedName:
          "properties.formulaContent.properties.dataDiskParameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataDiskProperties"
            }
          }
        }
      },
      scheduleParameters: {
        serializedName:
          "properties.formulaContent.properties.scheduleParameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScheduleCreationParameter"
            }
          }
        }
      },
      lastKnownPowerState: {
        serializedName:
          "properties.formulaContent.properties.lastKnownPowerState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      canApplyArtifacts: {
        serializedName:
          "properties.formulaContent.properties.canApplyArtifacts",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      provisioningStatePropertiesFormulaContentPropertiesProvisioningState: {
        serializedName:
          "properties.formulaContent.properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifierPropertiesFormulaContentPropertiesUniqueIdentifier: {
        serializedName: "properties.formulaContent.properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      idPropertiesFormulaContentPropertiesApplicableScheduleId: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      namePropertiesFormulaContentPropertiesApplicableScheduleName: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typePropertiesFormulaContentPropertiesApplicableScheduleType: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tagsPropertiesFormulaContentPropertiesApplicableScheduleTags: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      locationPropertiesFormulaContentPropertiesApplicableScheduleLocation: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.location",
        type: {
          name: "String"
        }
      },
      systemDataPropertiesFormulaContentPropertiesApplicableScheduleSystemData: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      idPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupId: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      namePropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupName: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typePropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupType: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tagsPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupTags: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      locationPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupLocation: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.location",
        type: {
          name: "String"
        }
      },
      systemDataPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupSystemData: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      statusPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesStatus: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.properties.status",
        type: {
          name: "String"
        }
      },
      taskTypePropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesTaskType: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.properties.taskType",
        type: {
          name: "String"
        }
      },
      timeZoneIdPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesTimeZoneId: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.properties.timeZoneId",
        type: {
          name: "String"
        }
      },
      createdDatePropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesCreatedDate: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      targetResourceIdPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesTargetResourceId: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.properties.targetResourceId",
        type: {
          name: "String"
        }
      },
      provisioningStatePropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesProvisioningState: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifierPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesUniqueIdentifier: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      statusPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsStatus: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.status",
        type: {
          name: "String"
        }
      },
      timeInMinutesPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsTimeInMinutes: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.timeInMinutes",
        type: {
          name: "Number"
        }
      },
      webhookUrlPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsWebhookUrl: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.webhookUrl",
        type: {
          name: "String"
        }
      },
      emailRecipientPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsEmailRecipient: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.emailRecipient",
        type: {
          name: "String"
        }
      },
      notificationLocalePropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsNotificationLocale: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.notificationLocale",
        type: {
          name: "String"
        }
      },
      minutePropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesHourlyRecurrenceMinute: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.properties.hourlyRecurrence.minute",
        type: {
          name: "Number"
        }
      },
      timePropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesDailyRecurrenceTime: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.properties.dailyRecurrence.time",
        type: {
          name: "String"
        }
      },
      weekdaysPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesWeeklyRecurrenceWeekdays: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.properties.weeklyRecurrence.weekdays",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      timePropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesWeeklyRecurrenceTime: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsStartup.properties.weeklyRecurrence.time",
        type: {
          name: "String"
        }
      },
      idPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownId: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      namePropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownName: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typePropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownType: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tagsPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownTags: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      locationPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownLocation: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.location",
        type: {
          name: "String"
        }
      },
      systemDataPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownSystemData: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      statusPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesStatus: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.properties.status",
        type: {
          name: "String"
        }
      },
      taskTypePropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesTaskType: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.properties.taskType",
        type: {
          name: "String"
        }
      },
      timeZoneIdPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesTimeZoneId: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.properties.timeZoneId",
        type: {
          name: "String"
        }
      },
      createdDatePropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesCreatedDate: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      targetResourceIdPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesTargetResourceId: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.properties.targetResourceId",
        type: {
          name: "String"
        }
      },
      provisioningStatePropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesProvisioningState: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifierPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesUniqueIdentifier: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      statusPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsStatus: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.status",
        type: {
          name: "String"
        }
      },
      timeInMinutesPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsTimeInMinutes: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.timeInMinutes",
        type: {
          name: "Number"
        }
      },
      webhookUrlPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsWebhookUrl: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.webhookUrl",
        type: {
          name: "String"
        }
      },
      emailRecipientPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsEmailRecipient: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.emailRecipient",
        type: {
          name: "String"
        }
      },
      notificationLocalePropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsNotificationLocale: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.notificationLocale",
        type: {
          name: "String"
        }
      },
      minutePropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesHourlyRecurrenceMinute: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.properties.hourlyRecurrence.minute",
        type: {
          name: "Number"
        }
      },
      timePropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesDailyRecurrenceTime: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.properties.dailyRecurrence.time",
        type: {
          name: "String"
        }
      },
      weekdaysPropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesWeeklyRecurrenceWeekdays: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.properties.weeklyRecurrence.weekdays",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      timePropertiesFormulaContentPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesWeeklyRecurrenceTime: {
        serializedName:
          "properties.formulaContent.properties.applicableSchedule.properties.labVmsShutdown.properties.weeklyRecurrence.time",
        type: {
          name: "String"
        }
      },
      virtualNetworkId: {
        serializedName:
          "properties.formulaContent.properties.networkInterface.virtualNetworkId",
        type: {
          name: "String"
        }
      },
      subnetId: {
        serializedName:
          "properties.formulaContent.properties.networkInterface.subnetId",
        type: {
          name: "String"
        }
      },
      publicIpAddressId: {
        serializedName:
          "properties.formulaContent.properties.networkInterface.publicIpAddressId",
        type: {
          name: "String"
        }
      },
      publicIpAddress: {
        serializedName:
          "properties.formulaContent.properties.networkInterface.publicIpAddress",
        type: {
          name: "String"
        }
      },
      privateIpAddress: {
        serializedName:
          "properties.formulaContent.properties.networkInterface.privateIpAddress",
        type: {
          name: "String"
        }
      },
      dnsName: {
        serializedName:
          "properties.formulaContent.properties.networkInterface.dnsName",
        type: {
          name: "String"
        }
      },
      rdpAuthority: {
        serializedName:
          "properties.formulaContent.properties.networkInterface.rdpAuthority",
        type: {
          name: "String"
        }
      },
      sshAuthority: {
        serializedName:
          "properties.formulaContent.properties.networkInterface.sshAuthority",
        type: {
          name: "String"
        }
      },
      inboundNatRules: {
        serializedName:
          "properties.formulaContent.properties.networkInterface.sharedPublicIpAddressConfiguration.inboundNatRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InboundNatRule"
            }
          }
        }
      },
      statuses: {
        serializedName:
          "properties.formulaContent.properties.computeVm.statuses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComputeVmInstanceViewStatus"
            }
          }
        }
      },
      osTypePropertiesFormulaContentPropertiesComputeVmOsType: {
        serializedName: "properties.formulaContent.properties.computeVm.osType",
        type: {
          name: "String"
        }
      },
      vmSize: {
        serializedName: "properties.formulaContent.properties.computeVm.vmSize",
        type: {
          name: "String"
        }
      },
      networkInterfaceId: {
        serializedName:
          "properties.formulaContent.properties.computeVm.networkInterfaceId",
        type: {
          name: "String"
        }
      },
      osDiskId: {
        serializedName:
          "properties.formulaContent.properties.computeVm.osDiskId",
        type: {
          name: "String"
        }
      },
      dataDiskIds: {
        serializedName:
          "properties.formulaContent.properties.computeVm.dataDiskIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      dataDisks: {
        serializedName:
          "properties.formulaContent.properties.computeVm.dataDisks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComputeDataDisk"
            }
          }
        }
      },
      offer: {
        serializedName:
          "properties.formulaContent.properties.galleryImageReference.offer",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName:
          "properties.formulaContent.properties.galleryImageReference.publisher",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName:
          "properties.formulaContent.properties.galleryImageReference.sku",
        type: {
          name: "String"
        }
      },
      osTypePropertiesFormulaContentPropertiesGalleryImageReferenceOsType: {
        serializedName:
          "properties.formulaContent.properties.galleryImageReference.osType",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName:
          "properties.formulaContent.properties.galleryImageReference.version",
        type: {
          name: "String"
        }
      },
      deploymentStatus: {
        serializedName:
          "properties.formulaContent.properties.artifactDeploymentStatus.deploymentStatus",
        type: {
          name: "String"
        }
      },
      artifactsApplied: {
        serializedName:
          "properties.formulaContent.properties.artifactDeploymentStatus.artifactsApplied",
        type: {
          name: "Number"
        }
      },
      totalArtifacts: {
        serializedName:
          "properties.formulaContent.properties.artifactDeploymentStatus.totalArtifacts",
        type: {
          name: "Number"
        }
      },
      instanceCount: {
        serializedName:
          "properties.formulaContent.properties.bulkCreationParameters.instanceCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GalleryImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImage",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      author: {
        serializedName: "properties.author",
        type: {
          name: "String"
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      icon: {
        serializedName: "properties.icon",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      planId: {
        serializedName: "properties.planId",
        type: {
          name: "String"
        }
      },
      isPlanAuthorized: {
        serializedName: "properties.isPlanAuthorized",
        type: {
          name: "Boolean"
        }
      },
      offer: {
        serializedName: "properties.imageReference.offer",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "properties.imageReference.publisher",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "properties.imageReference.sku",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "properties.imageReference.osType",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.imageReference.version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationChannel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotificationChannel",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      webHookUrl: {
        serializedName: "properties.webHookUrl",
        type: {
          name: "String"
        }
      },
      emailRecipient: {
        serializedName: "properties.emailRecipient",
        type: {
          name: "String"
        }
      },
      notificationLocale: {
        serializedName: "properties.notificationLocale",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      events: {
        serializedName: "properties.events",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Event"
            }
          }
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicySet: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicySet",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Policy: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Policy",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      factName: {
        serializedName: "properties.factName",
        type: {
          name: "String"
        }
      },
      factData: {
        serializedName: "properties.factData",
        type: {
          name: "String"
        }
      },
      threshold: {
        serializedName: "properties.threshold",
        type: {
          name: "String"
        }
      },
      evaluatorType: {
        serializedName: "properties.evaluatorType",
        type: {
          name: "String"
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LabSecret: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LabSecret",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      value: {
        serializedName: "properties.value",
        type: {
          name: "String"
        }
      },
      keyVaultEntry: {
        serializedName: "properties.keyVaultEntry",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      enabledForArtifacts: {
        serializedName: "properties.enabledForArtifacts",
        type: {
          name: "Boolean"
        }
      },
      enabledForVmCreation: {
        serializedName: "properties.enabledForVmCreation",
        type: {
          name: "Boolean"
        }
      },
      enabledForArmEnvironments: {
        serializedName: "properties.enabledForArmEnvironments",
        type: {
          name: "Boolean"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceRunner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceRunner",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      typeIdentityType: {
        serializedName: "identity.type",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "identity.principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "identity.tenantId",
        type: {
          name: "String"
        }
      },
      clientSecretUrl: {
        serializedName: "identity.clientSecretUrl",
        type: {
          name: "String"
        }
      },
      userAssignedIdentities: {
        serializedName: "identity.userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      identityUsageType: {
        serializedName: "properties.identityUsageType",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SharedGallery: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedGallery",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      galleryId: {
        serializedName: "properties.galleryId",
        type: {
          name: "String"
        }
      },
      allowAllImages: {
        serializedName: "properties.allowAllImages",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SharedImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedImage",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      definitionName: {
        serializedName: "properties.definitionName",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "String"
        }
      },
      imageType: {
        serializedName: "properties.imageType",
        type: {
          name: "String"
        }
      },
      enableState: {
        serializedName: "properties.enableState",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      versions: {
        serializedName: "properties.versions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImageVersionProperties"
            }
          }
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const User: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "User",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      keyVaultUri: {
        serializedName: "properties.secretStore.keyVaultUri",
        type: {
          name: "String"
        }
      },
      keyVaultId: {
        serializedName: "properties.secretStore.keyVaultId",
        type: {
          name: "String"
        }
      },
      principalName: {
        serializedName: "properties.identity.principalName",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "properties.identity.principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "properties.identity.tenantId",
        type: {
          name: "String"
        }
      },
      objectId: {
        serializedName: "properties.identity.objectId",
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "properties.identity.appId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Disk: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Disk",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      diskType: {
        serializedName: "properties.diskType",
        type: {
          name: "String"
        }
      },
      diskSizeGiB: {
        serializedName: "properties.diskSizeGiB",
        type: {
          name: "Number"
        }
      },
      leasedByLabVmId: {
        serializedName: "properties.leasedByLabVmId",
        type: {
          name: "String"
        }
      },
      diskBlobName: {
        serializedName: "properties.diskBlobName",
        type: {
          name: "String"
        }
      },
      diskUri: {
        serializedName: "properties.diskUri",
        type: {
          name: "String"
        }
      },
      storageAccountId: {
        serializedName: "properties.storageAccountId",
        type: {
          name: "String"
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      hostCaching: {
        serializedName: "properties.hostCaching",
        type: {
          name: "String"
        }
      },
      managedDiskId: {
        serializedName: "properties.managedDiskId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DtlEnvironment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DtlEnvironment",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      armTemplateDisplayName: {
        serializedName: "properties.armTemplateDisplayName",
        type: {
          name: "String"
        }
      },
      resourceGroupId: {
        serializedName: "properties.resourceGroupId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      createdByUser: {
        serializedName: "properties.createdByUser",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      armTemplateId: {
        serializedName: "properties.deploymentProperties.armTemplateId",
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "properties.deploymentProperties.parameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArmTemplateParameterProperties"
            }
          }
        }
      }
    }
  }
};

export const Secret: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Secret",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      value: {
        serializedName: "properties.value",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceFabric: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceFabric",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      externalServiceFabricId: {
        serializedName: "properties.externalServiceFabricId",
        type: {
          name: "String"
        }
      },
      environmentId: {
        serializedName: "properties.environmentId",
        type: {
          name: "String"
        }
      },
      provisioningStatePropertiesProvisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifierPropertiesUniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      idPropertiesApplicableScheduleId: {
        serializedName: "properties.applicableSchedule.id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      namePropertiesApplicableScheduleName: {
        serializedName: "properties.applicableSchedule.name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typePropertiesApplicableScheduleType: {
        serializedName: "properties.applicableSchedule.type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tagsPropertiesApplicableScheduleTags: {
        serializedName: "properties.applicableSchedule.tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      locationPropertiesApplicableScheduleLocation: {
        serializedName: "properties.applicableSchedule.location",
        type: {
          name: "String"
        }
      },
      systemDataPropertiesApplicableScheduleSystemData: {
        serializedName: "properties.applicableSchedule.systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      idPropertiesApplicableSchedulePropertiesLabVmsStartupId: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      namePropertiesApplicableSchedulePropertiesLabVmsStartupName: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typePropertiesApplicableSchedulePropertiesLabVmsStartupType: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tagsPropertiesApplicableSchedulePropertiesLabVmsStartupTags: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      locationPropertiesApplicableSchedulePropertiesLabVmsStartupLocation: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.location",
        type: {
          name: "String"
        }
      },
      systemDataPropertiesApplicableSchedulePropertiesLabVmsStartupSystemData: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      statusPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesStatus: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.status",
        type: {
          name: "String"
        }
      },
      taskTypePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesTaskType: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.taskType",
        type: {
          name: "String"
        }
      },
      timeZoneIdPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesTimeZoneId: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.timeZoneId",
        type: {
          name: "String"
        }
      },
      createdDatePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesCreatedDate: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      targetResourceIdPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesTargetResourceId: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.targetResourceId",
        type: {
          name: "String"
        }
      },
      provisioningStatePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesProvisioningState: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifierPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesUniqueIdentifier: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      statusPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsStatus: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.status",
        type: {
          name: "String"
        }
      },
      timeInMinutesPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsTimeInMinutes: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.timeInMinutes",
        type: {
          name: "Number"
        }
      },
      webhookUrlPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsWebhookUrl: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.webhookUrl",
        type: {
          name: "String"
        }
      },
      emailRecipientPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsEmailRecipient: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.emailRecipient",
        type: {
          name: "String"
        }
      },
      notificationLocalePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsNotificationLocale: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.notificationLocale",
        type: {
          name: "String"
        }
      },
      minutePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesHourlyRecurrenceMinute: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.hourlyRecurrence.minute",
        type: {
          name: "Number"
        }
      },
      timePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesDailyRecurrenceTime: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.dailyRecurrence.time",
        type: {
          name: "String"
        }
      },
      weekdaysPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesWeeklyRecurrenceWeekdays: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.weeklyRecurrence.weekdays",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      timePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesWeeklyRecurrenceTime: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.weeklyRecurrence.time",
        type: {
          name: "String"
        }
      },
      idPropertiesApplicableSchedulePropertiesLabVmsShutdownId: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      namePropertiesApplicableSchedulePropertiesLabVmsShutdownName: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typePropertiesApplicableSchedulePropertiesLabVmsShutdownType: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tagsPropertiesApplicableSchedulePropertiesLabVmsShutdownTags: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      locationPropertiesApplicableSchedulePropertiesLabVmsShutdownLocation: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.location",
        type: {
          name: "String"
        }
      },
      systemDataPropertiesApplicableSchedulePropertiesLabVmsShutdownSystemData: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      statusPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesStatus: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.status",
        type: {
          name: "String"
        }
      },
      taskTypePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesTaskType: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.taskType",
        type: {
          name: "String"
        }
      },
      timeZoneIdPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesTimeZoneId: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.timeZoneId",
        type: {
          name: "String"
        }
      },
      createdDatePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesCreatedDate: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      targetResourceIdPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesTargetResourceId: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.targetResourceId",
        type: {
          name: "String"
        }
      },
      provisioningStatePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesProvisioningState: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifierPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesUniqueIdentifier: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      statusPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsStatus: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.status",
        type: {
          name: "String"
        }
      },
      timeInMinutesPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsTimeInMinutes: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.timeInMinutes",
        type: {
          name: "Number"
        }
      },
      webhookUrlPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsWebhookUrl: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.webhookUrl",
        type: {
          name: "String"
        }
      },
      emailRecipientPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsEmailRecipient: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.emailRecipient",
        type: {
          name: "String"
        }
      },
      notificationLocalePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsNotificationLocale: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.notificationLocale",
        type: {
          name: "String"
        }
      },
      minutePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesHourlyRecurrenceMinute: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.hourlyRecurrence.minute",
        type: {
          name: "Number"
        }
      },
      timePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesDailyRecurrenceTime: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.dailyRecurrence.time",
        type: {
          name: "String"
        }
      },
      weekdaysPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesWeeklyRecurrenceWeekdays: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.weeklyRecurrence.weekdays",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      timePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesWeeklyRecurrenceTime: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.weeklyRecurrence.time",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LabVirtualMachine: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LabVirtualMachine",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      notes: {
        serializedName: "properties.notes",
        type: {
          name: "String"
        }
      },
      ownerObjectId: {
        defaultValue: "dynamicValue",
        serializedName: "properties.ownerObjectId",
        type: {
          name: "String"
        }
      },
      ownerUserPrincipalName: {
        serializedName: "properties.ownerUserPrincipalName",
        type: {
          name: "String"
        }
      },
      createdByUserId: {
        serializedName: "properties.createdByUserId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      createdByUser: {
        serializedName: "properties.createdByUser",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      createdDatePropertiesCreatedDate: {
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      computeId: {
        serializedName: "properties.computeId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      customImageId: {
        serializedName: "properties.customImageId",
        type: {
          name: "String"
        }
      },
      galleryImageVersionId: {
        serializedName: "properties.galleryImageVersionId",
        type: {
          name: "String"
        }
      },
      sharedImageId: {
        serializedName: "properties.sharedImageId",
        type: {
          name: "String"
        }
      },
      sharedImageVersion: {
        serializedName: "properties.sharedImageVersion",
        type: {
          name: "String"
        }
      },
      osTypePropertiesOsType: {
        serializedName: "properties.osType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "properties.size",
        type: {
          name: "String"
        }
      },
      userName: {
        serializedName: "properties.userName",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "properties.password",
        type: {
          name: "String"
        }
      },
      sshKey: {
        serializedName: "properties.sshKey",
        type: {
          name: "String"
        }
      },
      isAuthenticationWithSshKey: {
        serializedName: "properties.isAuthenticationWithSshKey",
        type: {
          name: "Boolean"
        }
      },
      fqdn: {
        serializedName: "properties.fqdn",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      labSubnetName: {
        serializedName: "properties.labSubnetName",
        type: {
          name: "String"
        }
      },
      labVirtualNetworkId: {
        serializedName: "properties.labVirtualNetworkId",
        type: {
          name: "String"
        }
      },
      disallowPublicIpAddress: {
        defaultValue: false,
        serializedName: "properties.disallowPublicIpAddress",
        type: {
          name: "Boolean"
        }
      },
      artifacts: {
        serializedName: "properties.artifacts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArtifactInstallProperties"
            }
          }
        }
      },
      planId: {
        serializedName: "properties.planId",
        type: {
          name: "String"
        }
      },
      osDiskSizeGb: {
        serializedName: "properties.osDiskSizeGb",
        type: {
          name: "Number"
        }
      },
      expirationDate: {
        serializedName: "properties.expirationDate",
        type: {
          name: "DateTime"
        }
      },
      allowClaim: {
        defaultValue: false,
        serializedName: "properties.allowClaim",
        type: {
          name: "Boolean"
        }
      },
      storageType: {
        defaultValue: "Standard",
        serializedName: "properties.storageType",
        type: {
          name: "String"
        }
      },
      virtualMachineCreationSource: {
        serializedName: "properties.virtualMachineCreationSource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      environmentId: {
        serializedName: "properties.environmentId",
        type: {
          name: "String"
        }
      },
      dataDiskParameters: {
        serializedName: "properties.dataDiskParameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataDiskProperties"
            }
          }
        }
      },
      scheduleParameters: {
        serializedName: "properties.scheduleParameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScheduleCreationParameter"
            }
          }
        }
      },
      lastKnownPowerState: {
        serializedName: "properties.lastKnownPowerState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      canApplyArtifacts: {
        serializedName: "properties.canApplyArtifacts",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      provisioningStatePropertiesProvisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifierPropertiesUniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      idPropertiesApplicableScheduleId: {
        serializedName: "properties.applicableSchedule.id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      namePropertiesApplicableScheduleName: {
        serializedName: "properties.applicableSchedule.name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typePropertiesApplicableScheduleType: {
        serializedName: "properties.applicableSchedule.type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tagsPropertiesApplicableScheduleTags: {
        serializedName: "properties.applicableSchedule.tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      locationPropertiesApplicableScheduleLocation: {
        serializedName: "properties.applicableSchedule.location",
        type: {
          name: "String"
        }
      },
      systemDataPropertiesApplicableScheduleSystemData: {
        serializedName: "properties.applicableSchedule.systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      idPropertiesApplicableSchedulePropertiesLabVmsStartupId: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      namePropertiesApplicableSchedulePropertiesLabVmsStartupName: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typePropertiesApplicableSchedulePropertiesLabVmsStartupType: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tagsPropertiesApplicableSchedulePropertiesLabVmsStartupTags: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      locationPropertiesApplicableSchedulePropertiesLabVmsStartupLocation: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.location",
        type: {
          name: "String"
        }
      },
      systemDataPropertiesApplicableSchedulePropertiesLabVmsStartupSystemData: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      statusPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesStatus: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.status",
        type: {
          name: "String"
        }
      },
      taskTypePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesTaskType: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.taskType",
        type: {
          name: "String"
        }
      },
      timeZoneIdPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesTimeZoneId: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.timeZoneId",
        type: {
          name: "String"
        }
      },
      createdDatePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesCreatedDate: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      targetResourceIdPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesTargetResourceId: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.targetResourceId",
        type: {
          name: "String"
        }
      },
      provisioningStatePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesProvisioningState: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifierPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesUniqueIdentifier: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      statusPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsStatus: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.status",
        type: {
          name: "String"
        }
      },
      timeInMinutesPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsTimeInMinutes: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.timeInMinutes",
        type: {
          name: "Number"
        }
      },
      webhookUrlPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsWebhookUrl: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.webhookUrl",
        type: {
          name: "String"
        }
      },
      emailRecipientPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsEmailRecipient: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.emailRecipient",
        type: {
          name: "String"
        }
      },
      notificationLocalePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesNotificationSettingsNotificationLocale: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.notificationSettings.notificationLocale",
        type: {
          name: "String"
        }
      },
      minutePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesHourlyRecurrenceMinute: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.hourlyRecurrence.minute",
        type: {
          name: "Number"
        }
      },
      timePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesDailyRecurrenceTime: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.dailyRecurrence.time",
        type: {
          name: "String"
        }
      },
      weekdaysPropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesWeeklyRecurrenceWeekdays: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.weeklyRecurrence.weekdays",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      timePropertiesApplicableSchedulePropertiesLabVmsStartupPropertiesWeeklyRecurrenceTime: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsStartup.properties.weeklyRecurrence.time",
        type: {
          name: "String"
        }
      },
      idPropertiesApplicableSchedulePropertiesLabVmsShutdownId: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      namePropertiesApplicableSchedulePropertiesLabVmsShutdownName: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typePropertiesApplicableSchedulePropertiesLabVmsShutdownType: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tagsPropertiesApplicableSchedulePropertiesLabVmsShutdownTags: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      locationPropertiesApplicableSchedulePropertiesLabVmsShutdownLocation: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.location",
        type: {
          name: "String"
        }
      },
      systemDataPropertiesApplicableSchedulePropertiesLabVmsShutdownSystemData: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      statusPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesStatus: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.status",
        type: {
          name: "String"
        }
      },
      taskTypePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesTaskType: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.taskType",
        type: {
          name: "String"
        }
      },
      timeZoneIdPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesTimeZoneId: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.timeZoneId",
        type: {
          name: "String"
        }
      },
      createdDatePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesCreatedDate: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      targetResourceIdPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesTargetResourceId: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.targetResourceId",
        type: {
          name: "String"
        }
      },
      provisioningStatePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesProvisioningState: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifierPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesUniqueIdentifier: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      statusPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsStatus: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.status",
        type: {
          name: "String"
        }
      },
      timeInMinutesPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsTimeInMinutes: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.timeInMinutes",
        type: {
          name: "Number"
        }
      },
      webhookUrlPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsWebhookUrl: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.webhookUrl",
        type: {
          name: "String"
        }
      },
      emailRecipientPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsEmailRecipient: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.emailRecipient",
        type: {
          name: "String"
        }
      },
      notificationLocalePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesNotificationSettingsNotificationLocale: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.notificationSettings.notificationLocale",
        type: {
          name: "String"
        }
      },
      minutePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesHourlyRecurrenceMinute: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.hourlyRecurrence.minute",
        type: {
          name: "Number"
        }
      },
      timePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesDailyRecurrenceTime: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.dailyRecurrence.time",
        type: {
          name: "String"
        }
      },
      weekdaysPropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesWeeklyRecurrenceWeekdays: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.weeklyRecurrence.weekdays",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      timePropertiesApplicableSchedulePropertiesLabVmsShutdownPropertiesWeeklyRecurrenceTime: {
        serializedName:
          "properties.applicableSchedule.properties.labVmsShutdown.properties.weeklyRecurrence.time",
        type: {
          name: "String"
        }
      },
      virtualNetworkId: {
        serializedName: "properties.networkInterface.virtualNetworkId",
        type: {
          name: "String"
        }
      },
      subnetId: {
        serializedName: "properties.networkInterface.subnetId",
        type: {
          name: "String"
        }
      },
      publicIpAddressId: {
        serializedName: "properties.networkInterface.publicIpAddressId",
        type: {
          name: "String"
        }
      },
      publicIpAddress: {
        serializedName: "properties.networkInterface.publicIpAddress",
        type: {
          name: "String"
        }
      },
      privateIpAddress: {
        serializedName: "properties.networkInterface.privateIpAddress",
        type: {
          name: "String"
        }
      },
      dnsName: {
        serializedName: "properties.networkInterface.dnsName",
        type: {
          name: "String"
        }
      },
      rdpAuthority: {
        serializedName: "properties.networkInterface.rdpAuthority",
        type: {
          name: "String"
        }
      },
      sshAuthority: {
        serializedName: "properties.networkInterface.sshAuthority",
        type: {
          name: "String"
        }
      },
      inboundNatRules: {
        serializedName:
          "properties.networkInterface.sharedPublicIpAddressConfiguration.inboundNatRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InboundNatRule"
            }
          }
        }
      },
      statuses: {
        serializedName: "properties.computeVm.statuses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComputeVmInstanceViewStatus"
            }
          }
        }
      },
      osTypePropertiesComputeVmOsType: {
        serializedName: "properties.computeVm.osType",
        type: {
          name: "String"
        }
      },
      vmSize: {
        serializedName: "properties.computeVm.vmSize",
        type: {
          name: "String"
        }
      },
      networkInterfaceId: {
        serializedName: "properties.computeVm.networkInterfaceId",
        type: {
          name: "String"
        }
      },
      osDiskId: {
        serializedName: "properties.computeVm.osDiskId",
        type: {
          name: "String"
        }
      },
      dataDiskIds: {
        serializedName: "properties.computeVm.dataDiskIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      dataDisks: {
        serializedName: "properties.computeVm.dataDisks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComputeDataDisk"
            }
          }
        }
      },
      offer: {
        serializedName: "properties.galleryImageReference.offer",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "properties.galleryImageReference.publisher",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "properties.galleryImageReference.sku",
        type: {
          name: "String"
        }
      },
      osTypePropertiesGalleryImageReferenceOsType: {
        serializedName: "properties.galleryImageReference.osType",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.galleryImageReference.version",
        type: {
          name: "String"
        }
      },
      deploymentStatus: {
        serializedName: "properties.artifactDeploymentStatus.deploymentStatus",
        type: {
          name: "String"
        }
      },
      artifactsApplied: {
        serializedName: "properties.artifactDeploymentStatus.artifactsApplied",
        type: {
          name: "Number"
        }
      },
      totalArtifacts: {
        serializedName: "properties.artifactDeploymentStatus.totalArtifacts",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const VirtualNetwork: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualNetwork",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      allowedSubnets: {
        serializedName: "properties.allowedSubnets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Subnet"
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      externalProviderResourceId: {
        serializedName: "properties.externalProviderResourceId",
        type: {
          name: "String"
        }
      },
      externalSubnets: {
        serializedName: "properties.externalSubnets",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExternalSubnet"
            }
          }
        }
      },
      subnetOverrides: {
        serializedName: "properties.subnetOverrides",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubnetOverride"
            }
          }
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BastionHost: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BastionHost",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      externalBastionHostId: {
        serializedName: "properties.externalBastionHostId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      ipAddressId: {
        serializedName: "properties.ipAddressId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Cost: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Cost",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      labCostDetails: {
        serializedName: "properties.labCostDetails",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LabCostDetailsProperties"
            }
          }
        }
      },
      resourceCosts: {
        serializedName: "properties.resourceCosts",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LabResourceCostProperties"
            }
          }
        }
      },
      currencyCode: {
        serializedName: "properties.currencyCode",
        type: {
          name: "String"
        }
      },
      startDateTime: {
        serializedName: "properties.startDateTime",
        type: {
          name: "DateTime"
        }
      },
      endDateTime: {
        serializedName: "properties.endDateTime",
        type: {
          name: "DateTime"
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      estimatedLabCost: {
        serializedName: "properties.labCostSummary.estimatedLabCost",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "properties.targetCost.status",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "properties.targetCost.target",
        type: {
          name: "Number"
        }
      },
      costThresholds: {
        serializedName: "properties.targetCost.costThresholds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostThresholdProperties"
            }
          }
        }
      },
      cycleStartDateTime: {
        serializedName: "properties.targetCost.cycleStartDateTime",
        type: {
          name: "DateTime"
        }
      },
      cycleEndDateTime: {
        serializedName: "properties.targetCost.cycleEndDateTime",
        type: {
          name: "DateTime"
        }
      },
      cycleType: {
        serializedName: "properties.targetCost.cycleType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureEntityResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureEntityResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        serializedName: "etag",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const ArtifactSourceFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArtifactSourceFragment",
    modelProperties: {
      ...UpdateResource.type.modelProperties
    }
  }
};

export const CustomImageFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomImageFragment",
    modelProperties: {
      ...UpdateResource.type.modelProperties
    }
  }
};

export const FormulaFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FormulaFragment",
    modelProperties: {
      ...UpdateResource.type.modelProperties
    }
  }
};

export const NotificationChannelFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotificationChannelFragment",
    modelProperties: {
      ...UpdateResource.type.modelProperties
    }
  }
};

export const PolicyFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyFragment",
    modelProperties: {
      ...UpdateResource.type.modelProperties
    }
  }
};

export const ScheduleFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScheduleFragment",
    modelProperties: {
      ...UpdateResource.type.modelProperties
    }
  }
};

export const SecretFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecretFragment",
    modelProperties: {
      ...UpdateResource.type.modelProperties
    }
  }
};

export const SharedGalleryFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedGalleryFragment",
    modelProperties: {
      ...UpdateResource.type.modelProperties
    }
  }
};

export const SharedImageFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedImageFragment",
    modelProperties: {
      ...UpdateResource.type.modelProperties
    }
  }
};

export const UserFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserFragment",
    modelProperties: {
      ...UpdateResource.type.modelProperties
    }
  }
};

export const DiskFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiskFragment",
    modelProperties: {
      ...UpdateResource.type.modelProperties
    }
  }
};

export const DtlEnvironmentFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DtlEnvironmentFragment",
    modelProperties: {
      ...UpdateResource.type.modelProperties
    }
  }
};

export const ServiceFabricFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceFabricFragment",
    modelProperties: {
      ...UpdateResource.type.modelProperties
    }
  }
};

export const LabVirtualMachineFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LabVirtualMachineFragment",
    modelProperties: {
      ...UpdateResource.type.modelProperties
    }
  }
};

export const VirtualNetworkFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualNetworkFragment",
    modelProperties: {
      ...UpdateResource.type.modelProperties
    }
  }
};

export const BastionHostFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BastionHostFragment",
    modelProperties: {
      ...UpdateResource.type.modelProperties
    }
  }
};

export const LabFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LabFragment",
    modelProperties: {
      ...UpdateResource.type.modelProperties
    }
  }
};

export const LabSecretFragment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LabSecretFragment",
    modelProperties: {
      ...UpdateResource.type.modelProperties
    }
  }
};

export const ResourceModelWithAllowedPropertySetIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceModelWithAllowedPropertySetIdentity",
    modelProperties: {
      ...Identity.type.modelProperties
    }
  }
};

export const ResourceModelWithAllowedPropertySetSku: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceModelWithAllowedPropertySetSku",
    modelProperties: {
      ...Sku.type.modelProperties
    }
  }
};

export const ResourceModelWithAllowedPropertySetPlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceModelWithAllowedPropertySetPlan",
    modelProperties: {
      ...Plan.type.modelProperties
    }
  }
};
