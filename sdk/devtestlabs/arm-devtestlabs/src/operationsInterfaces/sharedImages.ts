/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SharedImage,
  SharedImagesListOptionalParams,
  SharedImagesGetOptionalParams,
  SharedImagesGetResponse,
  SharedImagesCreateOrUpdateOptionalParams,
  SharedImagesCreateOrUpdateResponse,
  SharedImagesDeleteOptionalParams,
  SharedImageFragment,
  SharedImagesUpdateOptionalParams,
  SharedImagesUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SharedImages. */
export interface SharedImages {
  /**
   * List shared images in a given shared gallery.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param sharedGalleryName The name of the shared gallery.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    labName: string,
    sharedGalleryName: string,
    options?: SharedImagesListOptionalParams
  ): PagedAsyncIterableIterator<SharedImage>;
  /**
   * Get shared image.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param sharedGalleryName The name of the shared gallery.
   * @param name The name of the shared image.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    labName: string,
    sharedGalleryName: string,
    name: string,
    options?: SharedImagesGetOptionalParams
  ): Promise<SharedImagesGetResponse>;
  /**
   * Create or replace an existing Shared Image.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param sharedGalleryName The name of the shared gallery.
   * @param name The name of the shared image.
   * @param sharedImage Properties of a shared image
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    labName: string,
    sharedGalleryName: string,
    name: string,
    sharedImage: SharedImage,
    options?: SharedImagesCreateOrUpdateOptionalParams
  ): Promise<SharedImagesCreateOrUpdateResponse>;
  /**
   * Delete shared image.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param sharedGalleryName The name of the shared gallery.
   * @param name The name of the shared image.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    labName: string,
    sharedGalleryName: string,
    name: string,
    options?: SharedImagesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Allows modifying tags of shared images. All other properties will be ignored.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param sharedGalleryName The name of the shared gallery.
   * @param name The name of the shared image.
   * @param sharedImage Allows modifying tags of shared images. All other properties will be ignored.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    labName: string,
    sharedGalleryName: string,
    name: string,
    sharedImage: SharedImageFragment,
    options?: SharedImagesUpdateOptionalParams
  ): Promise<SharedImagesUpdateResponse>;
}
