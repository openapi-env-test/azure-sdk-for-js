/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  PolicySet,
  PolicySetsListOptionalParams,
  EvaluatePoliciesRequest,
  PolicySetsEvaluatePoliciesOptionalParams,
  PolicySetsEvaluatePoliciesResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a PolicySets. */
export interface PolicySets {
  /**
   * List policy sets in a given lab.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    labName: string,
    options?: PolicySetsListOptionalParams
  ): PagedAsyncIterableIterator<PolicySet>;
  /**
   * Evaluates lab policy.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the policy set.
   * @param evaluatePoliciesRequest Request body for evaluating a policy set.
   * @param options The options parameters.
   */
  evaluatePolicies(
    resourceGroupName: string,
    labName: string,
    name: string,
    evaluatePoliciesRequest: EvaluatePoliciesRequest,
    options?: PolicySetsEvaluatePoliciesOptionalParams
  ): Promise<PolicySetsEvaluatePoliciesResponse>;
}
