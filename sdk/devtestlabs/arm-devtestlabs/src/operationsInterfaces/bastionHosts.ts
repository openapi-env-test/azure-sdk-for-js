/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  BastionHost,
  BastionHostsListOptionalParams,
  BastionHostsGetOptionalParams,
  BastionHostsGetResponse,
  BastionHostsCreateOrUpdateOptionalParams,
  BastionHostsCreateOrUpdateResponse,
  BastionHostsDeleteOptionalParams,
  BastionHostFragment,
  BastionHostsUpdateOptionalParams,
  BastionHostsUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a BastionHosts. */
export interface BastionHosts {
  /**
   * List bastionhosts in a given virtual network.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param virtualNetworkName The name of the virtual network.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    labName: string,
    virtualNetworkName: string,
    options?: BastionHostsListOptionalParams
  ): PagedAsyncIterableIterator<BastionHost>;
  /**
   * Get bastionhost.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param virtualNetworkName The name of the virtual network.
   * @param name The name of the bastionhost.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    labName: string,
    virtualNetworkName: string,
    name: string,
    options?: BastionHostsGetOptionalParams
  ): Promise<BastionHostsGetResponse>;
  /**
   * Create or replace an existing bastionHost. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param virtualNetworkName The name of the virtual network.
   * @param name The name of the bastionhost.
   * @param bastionHost Profile of a Bastion Host
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    labName: string,
    virtualNetworkName: string,
    name: string,
    bastionHost: BastionHost,
    options?: BastionHostsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<BastionHostsCreateOrUpdateResponse>,
      BastionHostsCreateOrUpdateResponse
    >
  >;
  /**
   * Create or replace an existing bastionHost. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param virtualNetworkName The name of the virtual network.
   * @param name The name of the bastionhost.
   * @param bastionHost Profile of a Bastion Host
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    labName: string,
    virtualNetworkName: string,
    name: string,
    bastionHost: BastionHost,
    options?: BastionHostsCreateOrUpdateOptionalParams
  ): Promise<BastionHostsCreateOrUpdateResponse>;
  /**
   * Delete bastionhost. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param virtualNetworkName The name of the virtual network.
   * @param name The name of the bastionhost.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    labName: string,
    virtualNetworkName: string,
    name: string,
    options?: BastionHostsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Delete bastionhost. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param virtualNetworkName The name of the virtual network.
   * @param name The name of the bastionhost.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    labName: string,
    virtualNetworkName: string,
    name: string,
    options?: BastionHostsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Allows modifying tags of bastionhosts. All other properties will be ignored.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param virtualNetworkName The name of the virtual network.
   * @param name The name of the bastionhost.
   * @param bastionHost Allows modifying tags of bastionhosts. All other properties will be ignored.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    labName: string,
    virtualNetworkName: string,
    name: string,
    bastionHost: BastionHostFragment,
    options?: BastionHostsUpdateOptionalParams
  ): Promise<BastionHostsUpdateResponse>;
}
