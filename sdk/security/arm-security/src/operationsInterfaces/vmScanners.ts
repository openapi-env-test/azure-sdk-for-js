/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  VmScannersGetOptionalParams,
  VmScannersGetResponse,
  VmScannersCreateOrUpdateOptionalParams,
  VmScannersCreateOrUpdateResponse,
  VmScannersDeleteOptionalParams,
  VmScannersListBySubscriptionOptionalParams,
  VmScannersListBySubscriptionResponse
} from "../models";

/** Interface representing a VmScanners. */
export interface VmScanners {
  /**
   * Gets the subscription's VM scanner configuration.
   * @param vmScannerName Name of the VM scanner.
   * @param options The options parameters.
   */
  get(
    vmScannerName: string,
    options?: VmScannersGetOptionalParams
  ): Promise<VmScannersGetResponse>;
  /**
   * Create a VM scanner
   * @param vmScannerName Name of the VM scanner.
   * @param options The options parameters.
   */
  createOrUpdate(
    vmScannerName: string,
    options?: VmScannersCreateOrUpdateOptionalParams
  ): Promise<VmScannersCreateOrUpdateResponse>;
  /**
   * Delete a VM scanner configuration.
   * @param vmScannerName Name of the VM scanner.
   * @param options The options parameters.
   */
  delete(
    vmScannerName: string,
    options?: VmScannersDeleteOptionalParams
  ): Promise<void>;
  /**
   * Gets the subscription's VM scanner configurations.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: VmScannersListBySubscriptionOptionalParams
  ): Promise<VmScannersListBySubscriptionResponse>;
}
