/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/usageOperationsMappers";
import * as Parameters from "../models/parameters";
import { WebSiteManagementClientContext } from "../webSiteManagementClientContext";

/** Class representing a UsageOperations. */
export class UsageOperations {
  private readonly client: WebSiteManagementClientContext;

  /**
   * Create a UsageOperations.
   * @param {WebSiteManagementClientContext} client Reference to the service client.
   */
  constructor(client: WebSiteManagementClientContext) {
    this.client = client;
  }

  /**
   * @summary Returns usage records for specified subscription and resource groups
   * @param resourceGroupName Name of resource group
   * @param environmentName Environment name
   * @param lastId Last marker that was returned from the batch
   * @param batchSize size of the batch to be returned.
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageGetUsageResponse>
   */
  getUsage(resourceGroupName: string, environmentName: string, lastId: string, batchSize: number, options?: msRest.RequestOptionsBase): Promise<Models.UsageGetUsageResponse>;
  /**
   * @param resourceGroupName Name of resource group
   * @param environmentName Environment name
   * @param lastId Last marker that was returned from the batch
   * @param batchSize size of the batch to be returned.
   * @param callback The callback
   */
  getUsage(resourceGroupName: string, environmentName: string, lastId: string, batchSize: number, callback: msRest.ServiceCallback<any>): void;
  /**
   * @param resourceGroupName Name of resource group
   * @param environmentName Environment name
   * @param lastId Last marker that was returned from the batch
   * @param batchSize size of the batch to be returned.
   * @param options The optional parameters
   * @param callback The callback
   */
  getUsage(resourceGroupName: string, environmentName: string, lastId: string, batchSize: number, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<any>): void;
  getUsage(resourceGroupName: string, environmentName: string, lastId: string, batchSize: number, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<any>, callback?: msRest.ServiceCallback<any>): Promise<Models.UsageGetUsageResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        environmentName,
        lastId,
        batchSize,
        options
      },
      getUsageOperationSpec,
      callback) as Promise<Models.UsageGetUsageResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getUsageOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web.Admin/environments/{environmentName}/usage",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.environmentName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.lastId,
    Parameters.batchSize,
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Object"
        }
      }
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
