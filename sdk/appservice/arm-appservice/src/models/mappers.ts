/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const ArmPlan: msRest.CompositeMapper = {
  serializedName: "ArmPlan",
  type: {
    name: "Composite",
    className: "ArmPlan",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      product: {
        serializedName: "product",
        type: {
          name: "String"
        }
      },
      promotionCode: {
        serializedName: "promotionCode",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const CertificateOrderCertificate: msRest.CompositeMapper = {
  serializedName: "CertificateOrderCertificate",
  type: {
    name: "Composite",
    className: "CertificateOrderCertificate",
    modelProperties: {
      ...Resource.type.modelProperties,
      keyVaultId: {
        serializedName: "properties.keyVaultId",
        type: {
          name: "String"
        }
      },
      keyVaultSecretName: {
        serializedName: "properties.keyVaultSecretName",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "Enum",
          allowedValues: [
            "Initialized",
            "WaitingOnCertificateOrder",
            "Succeeded",
            "CertificateOrderFailed",
            "OperationNotPermittedOnKeyVault",
            "AzureServiceUnauthorizedToAccessKeyVault",
            "KeyVaultDoesNotExist",
            "KeyVaultSecretDoesNotExist",
            "UnknownError",
            "Unknown"
          ]
        }
      }
    }
  }
};

export const SkuDescription: msRest.CompositeMapper = {
  serializedName: "SkuDescription",
  type: {
    name: "Composite",
    className: "SkuDescription",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "String"
        }
      },
      family: {
        serializedName: "family",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CertificateDetails: msRest.CompositeMapper = {
  serializedName: "CertificateDetails",
  type: {
    name: "Composite",
    className: "CertificateDetails",
    modelProperties: {
      ...Resource.type.modelProperties,
      version: {
        serializedName: "properties.version",
        type: {
          name: "Number"
        }
      },
      serialNumber: {
        serializedName: "properties.serialNumber",
        type: {
          name: "String"
        }
      },
      thumbprint: {
        serializedName: "properties.thumbprint",
        type: {
          name: "String"
        }
      },
      subject: {
        serializedName: "properties.subject",
        type: {
          name: "String"
        }
      },
      notBefore: {
        serializedName: "properties.notBefore",
        type: {
          name: "DateTime"
        }
      },
      notAfter: {
        serializedName: "properties.notAfter",
        type: {
          name: "DateTime"
        }
      },
      signatureAlgorithm: {
        serializedName: "properties.signatureAlgorithm",
        type: {
          name: "String"
        }
      },
      issuer: {
        serializedName: "properties.issuer",
        type: {
          name: "String"
        }
      },
      rawData: {
        serializedName: "properties.rawData",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CertificateOrder: msRest.CompositeMapper = {
  serializedName: "CertificateOrder",
  type: {
    name: "Composite",
    className: "CertificateOrder",
    modelProperties: {
      ...Resource.type.modelProperties,
      certificates: {
        serializedName: "properties.certificates",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "CertificateOrderCertificate"
            }
          }
        }
      },
      distinguishedName: {
        serializedName: "properties.distinguishedName",
        type: {
          name: "String"
        }
      },
      domainVerificationToken: {
        serializedName: "properties.domainVerificationToken",
        type: {
          name: "String"
        }
      },
      validityInYears: {
        serializedName: "properties.validityInYears",
        type: {
          name: "Number"
        }
      },
      keySize: {
        serializedName: "properties.keySize",
        type: {
          name: "Number"
        }
      },
      productType: {
        serializedName: "properties.productType",
        type: {
          name: "Enum",
          allowedValues: [
            "StandardDomainValidatedSsl",
            "StandardDomainValidatedWildCardSsl"
          ]
        }
      },
      autoRenew: {
        serializedName: "properties.autoRenew",
        type: {
          name: "Boolean"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "Enum",
          allowedValues: [
            "Succeeded",
            "Failed",
            "Canceled",
            "InProgress",
            "Deleting"
          ]
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "Enum",
          allowedValues: [
            "Pendingissuance",
            "Issued",
            "Revoked",
            "Canceled",
            "Denied",
            "Pendingrevocation",
            "PendingRekey",
            "Unused",
            "Expired",
            "NotSubmitted"
          ]
        }
      },
      signedCertificate: {
        serializedName: "properties.signedCertificate",
        type: {
          name: "Composite",
          className: "CertificateDetails"
        }
      },
      csr: {
        serializedName: "properties.csr",
        type: {
          name: "String"
        }
      },
      intermediate: {
        serializedName: "properties.intermediate",
        type: {
          name: "Composite",
          className: "CertificateDetails"
        }
      },
      root: {
        serializedName: "properties.root",
        type: {
          name: "Composite",
          className: "CertificateDetails"
        }
      },
      serialNumber: {
        serializedName: "properties.serialNumber",
        type: {
          name: "String"
        }
      },
      lastCertificateIssuanceTime: {
        serializedName: "properties.lastCertificateIssuanceTime",
        type: {
          name: "DateTime"
        }
      },
      expirationTime: {
        serializedName: "properties.expirationTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ReissueCertificateOrderRequest: msRest.CompositeMapper = {
  serializedName: "ReissueCertificateOrderRequest",
  type: {
    name: "Composite",
    className: "ReissueCertificateOrderRequest",
    modelProperties: {
      ...Resource.type.modelProperties,
      keySize: {
        serializedName: "properties.keySize",
        type: {
          name: "Number"
        }
      },
      delayExistingRevokeInHours: {
        serializedName: "properties.delayExistingRevokeInHours",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RenewCertificateOrderRequest: msRest.CompositeMapper = {
  serializedName: "RenewCertificateOrderRequest",
  type: {
    name: "Composite",
    className: "RenewCertificateOrderRequest",
    modelProperties: {
      ...Resource.type.modelProperties,
      keySize: {
        serializedName: "properties.keySize",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CertificateOrderAction: msRest.CompositeMapper = {
  serializedName: "CertificateOrderAction",
  type: {
    name: "Composite",
    className: "CertificateOrderAction",
    modelProperties: {
      ...Resource.type.modelProperties,
      certificateOrderActionType: {
        required: true,
        serializedName: "properties.type",
        type: {
          name: "Enum",
          allowedValues: [
            "CertificateIssued",
            "CertificateOrderCanceled",
            "CertificateOrderCreated",
            "CertificateRevoked",
            "DomainValidationComplete",
            "FraudDetected",
            "OrgNameChange",
            "OrgValidationComplete",
            "SanDrop"
          ]
        }
      },
      createdAt: {
        serializedName: "properties.createdAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const CertificateEmail: msRest.CompositeMapper = {
  serializedName: "CertificateEmail",
  type: {
    name: "Composite",
    className: "CertificateEmail",
    modelProperties: {
      ...Resource.type.modelProperties,
      emailId: {
        serializedName: "properties.emailId",
        type: {
          name: "String"
        }
      },
      timeStamp: {
        serializedName: "properties.timeStamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const HostingEnvironmentProfile: msRest.CompositeMapper = {
  serializedName: "HostingEnvironmentProfile",
  type: {
    name: "Composite",
    className: "HostingEnvironmentProfile",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Certificate: msRest.CompositeMapper = {
  serializedName: "Certificate",
  type: {
    name: "Composite",
    className: "Certificate",
    modelProperties: {
      ...Resource.type.modelProperties,
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      subjectName: {
        serializedName: "properties.subjectName",
        type: {
          name: "String"
        }
      },
      hostNames: {
        serializedName: "properties.hostNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      pfxBlob: {
        serializedName: "properties.pfxBlob",
        type: {
          name: "String"
        }
      },
      siteName: {
        serializedName: "properties.siteName",
        type: {
          name: "String"
        }
      },
      selfLink: {
        serializedName: "properties.selfLink",
        type: {
          name: "String"
        }
      },
      issuer: {
        serializedName: "properties.issuer",
        type: {
          name: "String"
        }
      },
      issueDate: {
        serializedName: "properties.issueDate",
        type: {
          name: "DateTime"
        }
      },
      expirationDate: {
        serializedName: "properties.expirationDate",
        type: {
          name: "DateTime"
        }
      },
      password: {
        serializedName: "properties.password",
        type: {
          name: "String"
        }
      },
      thumbprint: {
        serializedName: "properties.thumbprint",
        type: {
          name: "String"
        }
      },
      valid: {
        serializedName: "properties.valid",
        type: {
          name: "Boolean"
        }
      },
      cerBlob: {
        serializedName: "properties.cerBlob",
        type: {
          name: "String"
        }
      },
      publicKeyHash: {
        serializedName: "properties.publicKeyHash",
        type: {
          name: "String"
        }
      },
      hostingEnvironmentProfile: {
        serializedName: "properties.hostingEnvironmentProfile",
        type: {
          name: "Composite",
          className: "HostingEnvironmentProfile"
        }
      }
    }
  }
};

export const Csr: msRest.CompositeMapper = {
  serializedName: "Csr",
  type: {
    name: "Composite",
    className: "Csr",
    modelProperties: {
      ...Resource.type.modelProperties,
      csrName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      distinguishedName: {
        serializedName: "properties.distinguishedName",
        type: {
          name: "String"
        }
      },
      csrString: {
        serializedName: "properties.csrString",
        type: {
          name: "String"
        }
      },
      pfxBlob: {
        serializedName: "properties.pfxBlob",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "properties.password",
        type: {
          name: "String"
        }
      },
      publicKeyHash: {
        serializedName: "properties.publicKeyHash",
        type: {
          name: "String"
        }
      },
      hostingEnvironment: {
        serializedName: "properties.hostingEnvironment",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClassicMobileService: msRest.CompositeMapper = {
  serializedName: "ClassicMobileService",
  type: {
    name: "Composite",
    className: "ClassicMobileService",
    modelProperties: {
      ...Resource.type.modelProperties,
      classicMobileServiceName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Address: msRest.CompositeMapper = {
  serializedName: "Address",
  type: {
    name: "Composite",
    className: "Address",
    modelProperties: {
      address1: {
        serializedName: "address1",
        type: {
          name: "String"
        }
      },
      address2: {
        serializedName: "address2",
        type: {
          name: "String"
        }
      },
      city: {
        serializedName: "city",
        type: {
          name: "String"
        }
      },
      country: {
        serializedName: "country",
        type: {
          name: "String"
        }
      },
      postalCode: {
        serializedName: "postalCode",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Contact: msRest.CompositeMapper = {
  serializedName: "Contact",
  type: {
    name: "Composite",
    className: "Contact",
    modelProperties: {
      addressMailing: {
        serializedName: "addressMailing",
        type: {
          name: "Composite",
          className: "Address"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      fax: {
        serializedName: "fax",
        type: {
          name: "String"
        }
      },
      jobTitle: {
        serializedName: "jobTitle",
        type: {
          name: "String"
        }
      },
      nameFirst: {
        serializedName: "nameFirst",
        type: {
          name: "String"
        }
      },
      nameLast: {
        serializedName: "nameLast",
        type: {
          name: "String"
        }
      },
      nameMiddle: {
        serializedName: "nameMiddle",
        type: {
          name: "String"
        }
      },
      organization: {
        serializedName: "organization",
        type: {
          name: "String"
        }
      },
      phone: {
        serializedName: "phone",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HostName: msRest.CompositeMapper = {
  serializedName: "HostName",
  type: {
    name: "Composite",
    className: "HostName",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      siteNames: {
        serializedName: "siteNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      azureResourceName: {
        serializedName: "azureResourceName",
        type: {
          name: "String"
        }
      },
      azureResourceType: {
        serializedName: "azureResourceType",
        type: {
          name: "Enum",
          allowedValues: [
            "Website",
            "TrafficManager"
          ]
        }
      },
      customHostNameDnsRecordType: {
        serializedName: "customHostNameDnsRecordType",
        type: {
          name: "Enum",
          allowedValues: [
            "CName",
            "A"
          ]
        }
      },
      hostNameType: {
        serializedName: "hostNameType",
        type: {
          name: "Enum",
          allowedValues: [
            "Verified",
            "Managed"
          ]
        }
      }
    }
  }
};

export const DomainPurchaseConsent: msRest.CompositeMapper = {
  serializedName: "DomainPurchaseConsent",
  type: {
    name: "Composite",
    className: "DomainPurchaseConsent",
    modelProperties: {
      agreementKeys: {
        serializedName: "agreementKeys",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      agreedBy: {
        serializedName: "agreedBy",
        type: {
          name: "String"
        }
      },
      agreedAt: {
        serializedName: "agreedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Domain: msRest.CompositeMapper = {
  serializedName: "Domain",
  type: {
    name: "Composite",
    className: "Domain",
    modelProperties: {
      ...Resource.type.modelProperties,
      contactAdmin: {
        serializedName: "properties.contactAdmin",
        type: {
          name: "Composite",
          className: "Contact"
        }
      },
      contactBilling: {
        serializedName: "properties.contactBilling",
        type: {
          name: "Composite",
          className: "Contact"
        }
      },
      contactRegistrant: {
        serializedName: "properties.contactRegistrant",
        type: {
          name: "Composite",
          className: "Contact"
        }
      },
      contactTech: {
        serializedName: "properties.contactTech",
        type: {
          name: "Composite",
          className: "Contact"
        }
      },
      registrationStatus: {
        serializedName: "properties.registrationStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "Active",
            "Awaiting",
            "Cancelled",
            "Confiscated",
            "Disabled",
            "Excluded",
            "Expired",
            "Failed",
            "Held",
            "Locked",
            "Parked",
            "Pending",
            "Reserved",
            "Reverted",
            "Suspended",
            "Transferred",
            "Unknown",
            "Unlocked",
            "Unparked",
            "Updated",
            "JsonConverterFailed"
          ]
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "Enum",
          allowedValues: [
            "Succeeded",
            "Failed",
            "Canceled",
            "InProgress",
            "Deleting"
          ]
        }
      },
      nameServers: {
        serializedName: "properties.nameServers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      privacy: {
        serializedName: "properties.privacy",
        type: {
          name: "Boolean"
        }
      },
      createdTime: {
        serializedName: "properties.createdTime",
        type: {
          name: "DateTime"
        }
      },
      expirationTime: {
        serializedName: "properties.expirationTime",
        type: {
          name: "DateTime"
        }
      },
      lastRenewedTime: {
        serializedName: "properties.lastRenewedTime",
        type: {
          name: "DateTime"
        }
      },
      autoRenew: {
        serializedName: "properties.autoRenew",
        type: {
          name: "Boolean"
        }
      },
      readyForDnsRecordManagement: {
        serializedName: "properties.readyForDnsRecordManagement",
        type: {
          name: "Boolean"
        }
      },
      managedHostNames: {
        serializedName: "properties.managedHostNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HostName"
            }
          }
        }
      },
      consent: {
        serializedName: "properties.consent",
        type: {
          name: "Composite",
          className: "DomainPurchaseConsent"
        }
      },
      domainNotRenewableReasons: {
        serializedName: "properties.domainNotRenewableReasons",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const User: msRest.CompositeMapper = {
  serializedName: "User",
  type: {
    name: "Composite",
    className: "User",
    modelProperties: {
      ...Resource.type.modelProperties,
      userName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      publishingUserName: {
        serializedName: "properties.publishingUserName",
        type: {
          name: "String"
        }
      },
      publishingPassword: {
        serializedName: "properties.publishingPassword",
        type: {
          name: "String"
        }
      },
      scmUri: {
        serializedName: "properties.scmUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GeoRegion: msRest.CompositeMapper = {
  serializedName: "GeoRegion",
  type: {
    name: "Composite",
    className: "GeoRegion",
    modelProperties: {
      ...Resource.type.modelProperties,
      geoRegionName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerFarmWithRichSku: msRest.CompositeMapper = {
  serializedName: "ServerFarmWithRichSku",
  type: {
    name: "Composite",
    className: "ServerFarmWithRichSku",
    modelProperties: {
      ...Resource.type.modelProperties,
      serverFarmWithRichSkuName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      workerTierName: {
        serializedName: "properties.workerTierName",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "Enum",
          allowedValues: [
            "Ready",
            "Pending"
          ]
        }
      },
      subscription: {
        readOnly: true,
        serializedName: "properties.subscription",
        type: {
          name: "String"
        }
      },
      adminSiteName: {
        serializedName: "properties.adminSiteName",
        type: {
          name: "String"
        }
      },
      hostingEnvironmentProfile: {
        serializedName: "properties.hostingEnvironmentProfile",
        type: {
          name: "Composite",
          className: "HostingEnvironmentProfile"
        }
      },
      maximumNumberOfWorkers: {
        serializedName: "properties.maximumNumberOfWorkers",
        type: {
          name: "Number"
        }
      },
      geoRegion: {
        readOnly: true,
        serializedName: "properties.geoRegion",
        type: {
          name: "String"
        }
      },
      perSiteScaling: {
        serializedName: "properties.perSiteScaling",
        type: {
          name: "Boolean"
        }
      },
      numberOfSites: {
        readOnly: true,
        serializedName: "properties.numberOfSites",
        type: {
          name: "Number"
        }
      },
      resourceGroup: {
        readOnly: true,
        serializedName: "properties.resourceGroup",
        type: {
          name: "String"
        }
      },
      reserved: {
        serializedName: "properties.reserved",
        type: {
          name: "Boolean"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "SkuDescription"
        }
      }
    }
  }
};

export const HostNameSslState: msRest.CompositeMapper = {
  serializedName: "HostNameSslState",
  type: {
    name: "Composite",
    className: "HostNameSslState",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      sslState: {
        required: true,
        serializedName: "sslState",
        type: {
          name: "Enum",
          allowedValues: [
            "Disabled",
            "SniEnabled",
            "IpBasedEnabled"
          ]
        }
      },
      virtualIP: {
        serializedName: "virtualIP",
        type: {
          name: "String"
        }
      },
      thumbprint: {
        serializedName: "thumbprint",
        type: {
          name: "String"
        }
      },
      toUpdate: {
        serializedName: "toUpdate",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const NameValuePair: msRest.CompositeMapper = {
  serializedName: "NameValuePair",
  type: {
    name: "Composite",
    className: "NameValuePair",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnStringInfo: msRest.CompositeMapper = {
  serializedName: "ConnStringInfo",
  type: {
    name: "Composite",
    className: "ConnStringInfo",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      connectionString: {
        serializedName: "connectionString",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "MySql",
            "SQLServer",
            "SQLAzure",
            "Custom"
          ]
        }
      }
    }
  }
};

export const HandlerMapping: msRest.CompositeMapper = {
  serializedName: "HandlerMapping",
  type: {
    name: "Composite",
    className: "HandlerMapping",
    modelProperties: {
      extension: {
        serializedName: "extension",
        type: {
          name: "String"
        }
      },
      scriptProcessor: {
        serializedName: "scriptProcessor",
        type: {
          name: "String"
        }
      },
      argumentsProperty: {
        serializedName: "arguments",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualDirectory: msRest.CompositeMapper = {
  serializedName: "VirtualDirectory",
  type: {
    name: "Composite",
    className: "VirtualDirectory",
    modelProperties: {
      virtualPath: {
        serializedName: "virtualPath",
        type: {
          name: "String"
        }
      },
      physicalPath: {
        serializedName: "physicalPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualApplication: msRest.CompositeMapper = {
  serializedName: "VirtualApplication",
  type: {
    name: "Composite",
    className: "VirtualApplication",
    modelProperties: {
      virtualPath: {
        serializedName: "virtualPath",
        type: {
          name: "String"
        }
      },
      physicalPath: {
        serializedName: "physicalPath",
        type: {
          name: "String"
        }
      },
      preloadEnabled: {
        serializedName: "preloadEnabled",
        type: {
          name: "Boolean"
        }
      },
      virtualDirectories: {
        serializedName: "virtualDirectories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualDirectory"
            }
          }
        }
      }
    }
  }
};

export const RampUpRule: msRest.CompositeMapper = {
  serializedName: "RampUpRule",
  type: {
    name: "Composite",
    className: "RampUpRule",
    modelProperties: {
      actionHostName: {
        serializedName: "actionHostName",
        type: {
          name: "String"
        }
      },
      reroutePercentage: {
        serializedName: "reroutePercentage",
        type: {
          name: "Number"
        }
      },
      changeStep: {
        serializedName: "changeStep",
        type: {
          name: "Number"
        }
      },
      changeIntervalInMinutes: {
        serializedName: "changeIntervalInMinutes",
        type: {
          name: "Number"
        }
      },
      minReroutePercentage: {
        serializedName: "minReroutePercentage",
        type: {
          name: "Number"
        }
      },
      maxReroutePercentage: {
        serializedName: "maxReroutePercentage",
        type: {
          name: "Number"
        }
      },
      changeDecisionCallbackUrl: {
        serializedName: "changeDecisionCallbackUrl",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Experiments: msRest.CompositeMapper = {
  serializedName: "Experiments",
  type: {
    name: "Composite",
    className: "Experiments",
    modelProperties: {
      rampUpRules: {
        serializedName: "rampUpRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RampUpRule"
            }
          }
        }
      }
    }
  }
};

export const SiteLimits: msRest.CompositeMapper = {
  serializedName: "SiteLimits",
  type: {
    name: "Composite",
    className: "SiteLimits",
    modelProperties: {
      maxPercentageCpu: {
        serializedName: "maxPercentageCpu",
        type: {
          name: "Number"
        }
      },
      maxMemoryInMb: {
        serializedName: "maxMemoryInMb",
        type: {
          name: "Number"
        }
      },
      maxDiskSizeInMb: {
        serializedName: "maxDiskSizeInMb",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RequestsBasedTrigger: msRest.CompositeMapper = {
  serializedName: "RequestsBasedTrigger",
  type: {
    name: "Composite",
    className: "RequestsBasedTrigger",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      timeInterval: {
        serializedName: "timeInterval",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StatusCodesBasedTrigger: msRest.CompositeMapper = {
  serializedName: "StatusCodesBasedTrigger",
  type: {
    name: "Composite",
    className: "StatusCodesBasedTrigger",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "Number"
        }
      },
      subStatus: {
        serializedName: "subStatus",
        type: {
          name: "Number"
        }
      },
      win32Status: {
        serializedName: "win32Status",
        type: {
          name: "Number"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      timeInterval: {
        serializedName: "timeInterval",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SlowRequestsBasedTrigger: msRest.CompositeMapper = {
  serializedName: "SlowRequestsBasedTrigger",
  type: {
    name: "Composite",
    className: "SlowRequestsBasedTrigger",
    modelProperties: {
      timeTaken: {
        serializedName: "timeTaken",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      timeInterval: {
        serializedName: "timeInterval",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutoHealTriggers: msRest.CompositeMapper = {
  serializedName: "AutoHealTriggers",
  type: {
    name: "Composite",
    className: "AutoHealTriggers",
    modelProperties: {
      requests: {
        serializedName: "requests",
        type: {
          name: "Composite",
          className: "RequestsBasedTrigger"
        }
      },
      privateBytesInKB: {
        serializedName: "privateBytesInKB",
        type: {
          name: "Number"
        }
      },
      statusCodes: {
        serializedName: "statusCodes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StatusCodesBasedTrigger"
            }
          }
        }
      },
      slowRequests: {
        serializedName: "slowRequests",
        type: {
          name: "Composite",
          className: "SlowRequestsBasedTrigger"
        }
      }
    }
  }
};

export const AutoHealCustomAction: msRest.CompositeMapper = {
  serializedName: "AutoHealCustomAction",
  type: {
    name: "Composite",
    className: "AutoHealCustomAction",
    modelProperties: {
      exe: {
        serializedName: "exe",
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutoHealActions: msRest.CompositeMapper = {
  serializedName: "AutoHealActions",
  type: {
    name: "Composite",
    className: "AutoHealActions",
    modelProperties: {
      actionType: {
        required: true,
        serializedName: "actionType",
        type: {
          name: "Enum",
          allowedValues: [
            "Recycle",
            "LogEvent",
            "CustomAction"
          ]
        }
      },
      customAction: {
        serializedName: "customAction",
        type: {
          name: "Composite",
          className: "AutoHealCustomAction"
        }
      },
      minProcessExecutionTime: {
        serializedName: "minProcessExecutionTime",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutoHealRules: msRest.CompositeMapper = {
  serializedName: "AutoHealRules",
  type: {
    name: "Composite",
    className: "AutoHealRules",
    modelProperties: {
      triggers: {
        serializedName: "triggers",
        type: {
          name: "Composite",
          className: "AutoHealTriggers"
        }
      },
      actions: {
        serializedName: "actions",
        type: {
          name: "Composite",
          className: "AutoHealActions"
        }
      }
    }
  }
};

export const CorsSettings: msRest.CompositeMapper = {
  serializedName: "CorsSettings",
  type: {
    name: "Composite",
    className: "CorsSettings",
    modelProperties: {
      allowedOrigins: {
        serializedName: "allowedOrigins",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ApiDefinitionInfo: msRest.CompositeMapper = {
  serializedName: "ApiDefinitionInfo",
  type: {
    name: "Composite",
    className: "ApiDefinitionInfo",
    modelProperties: {
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IpSecurityRestriction: msRest.CompositeMapper = {
  serializedName: "IpSecurityRestriction",
  type: {
    name: "Composite",
    className: "IpSecurityRestriction",
    modelProperties: {
      ipAddress: {
        serializedName: "ipAddress",
        type: {
          name: "String"
        }
      },
      subnetMask: {
        serializedName: "subnetMask",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SiteConfig: msRest.CompositeMapper = {
  serializedName: "SiteConfig",
  type: {
    name: "Composite",
    className: "SiteConfig",
    modelProperties: {
      ...Resource.type.modelProperties,
      numberOfWorkers: {
        serializedName: "properties.numberOfWorkers",
        type: {
          name: "Number"
        }
      },
      defaultDocuments: {
        serializedName: "properties.defaultDocuments",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      netFrameworkVersion: {
        serializedName: "properties.netFrameworkVersion",
        type: {
          name: "String"
        }
      },
      phpVersion: {
        serializedName: "properties.phpVersion",
        type: {
          name: "String"
        }
      },
      pythonVersion: {
        serializedName: "properties.pythonVersion",
        type: {
          name: "String"
        }
      },
      nodeVersion: {
        serializedName: "properties.nodeVersion",
        type: {
          name: "String"
        }
      },
      requestTracingEnabled: {
        serializedName: "properties.requestTracingEnabled",
        type: {
          name: "Boolean"
        }
      },
      requestTracingExpirationTime: {
        serializedName: "properties.requestTracingExpirationTime",
        type: {
          name: "DateTime"
        }
      },
      remoteDebuggingEnabled: {
        serializedName: "properties.remoteDebuggingEnabled",
        type: {
          name: "Boolean"
        }
      },
      remoteDebuggingVersion: {
        serializedName: "properties.remoteDebuggingVersion",
        type: {
          name: "String"
        }
      },
      httpLoggingEnabled: {
        serializedName: "properties.httpLoggingEnabled",
        type: {
          name: "Boolean"
        }
      },
      logsDirectorySizeLimit: {
        serializedName: "properties.logsDirectorySizeLimit",
        type: {
          name: "Number"
        }
      },
      detailedErrorLoggingEnabled: {
        serializedName: "properties.detailedErrorLoggingEnabled",
        type: {
          name: "Boolean"
        }
      },
      publishingUsername: {
        serializedName: "properties.publishingUsername",
        type: {
          name: "String"
        }
      },
      publishingPassword: {
        serializedName: "properties.publishingPassword",
        type: {
          name: "String"
        }
      },
      appSettings: {
        serializedName: "properties.appSettings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NameValuePair"
            }
          }
        }
      },
      metadata: {
        serializedName: "properties.metadata",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NameValuePair"
            }
          }
        }
      },
      connectionStrings: {
        serializedName: "properties.connectionStrings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConnStringInfo"
            }
          }
        }
      },
      handlerMappings: {
        serializedName: "properties.handlerMappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HandlerMapping"
            }
          }
        }
      },
      documentRoot: {
        serializedName: "properties.documentRoot",
        type: {
          name: "String"
        }
      },
      scmType: {
        serializedName: "properties.scmType",
        type: {
          name: "String"
        }
      },
      use32BitWorkerProcess: {
        serializedName: "properties.use32BitWorkerProcess",
        type: {
          name: "Boolean"
        }
      },
      webSocketsEnabled: {
        serializedName: "properties.webSocketsEnabled",
        type: {
          name: "Boolean"
        }
      },
      alwaysOn: {
        serializedName: "properties.alwaysOn",
        type: {
          name: "Boolean"
        }
      },
      javaVersion: {
        serializedName: "properties.javaVersion",
        type: {
          name: "String"
        }
      },
      javaContainer: {
        serializedName: "properties.javaContainer",
        type: {
          name: "String"
        }
      },
      javaContainerVersion: {
        serializedName: "properties.javaContainerVersion",
        type: {
          name: "String"
        }
      },
      appCommandLine: {
        serializedName: "properties.appCommandLine",
        type: {
          name: "String"
        }
      },
      managedPipelineMode: {
        serializedName: "properties.managedPipelineMode",
        type: {
          name: "Enum",
          allowedValues: [
            "Integrated",
            "Classic"
          ]
        }
      },
      virtualApplications: {
        serializedName: "properties.virtualApplications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualApplication"
            }
          }
        }
      },
      loadBalancing: {
        serializedName: "properties.loadBalancing",
        type: {
          name: "Enum",
          allowedValues: [
            "WeightedRoundRobin",
            "LeastRequests",
            "LeastResponseTime",
            "WeightedTotalTraffic",
            "RequestHash"
          ]
        }
      },
      experiments: {
        serializedName: "properties.experiments",
        type: {
          name: "Composite",
          className: "Experiments"
        }
      },
      limits: {
        serializedName: "properties.limits",
        type: {
          name: "Composite",
          className: "SiteLimits"
        }
      },
      autoHealEnabled: {
        serializedName: "properties.autoHealEnabled",
        type: {
          name: "Boolean"
        }
      },
      autoHealRules: {
        serializedName: "properties.autoHealRules",
        type: {
          name: "Composite",
          className: "AutoHealRules"
        }
      },
      tracingOptions: {
        serializedName: "properties.tracingOptions",
        type: {
          name: "String"
        }
      },
      vnetName: {
        serializedName: "properties.vnetName",
        type: {
          name: "String"
        }
      },
      cors: {
        serializedName: "properties.cors",
        type: {
          name: "Composite",
          className: "CorsSettings"
        }
      },
      apiDefinition: {
        serializedName: "properties.apiDefinition",
        type: {
          name: "Composite",
          className: "ApiDefinitionInfo"
        }
      },
      autoSwapSlotName: {
        serializedName: "properties.autoSwapSlotName",
        type: {
          name: "String"
        }
      },
      localMySqlEnabled: {
        serializedName: "properties.localMySqlEnabled",
        type: {
          name: "Boolean"
        }
      },
      ipSecurityRestrictions: {
        serializedName: "properties.ipSecurityRestrictions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IpSecurityRestriction"
            }
          }
        }
      }
    }
  }
};

export const CloningInfo: msRest.CompositeMapper = {
  serializedName: "CloningInfo",
  type: {
    name: "Composite",
    className: "CloningInfo",
    modelProperties: {
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      overwrite: {
        serializedName: "overwrite",
        type: {
          name: "Boolean"
        }
      },
      cloneCustomHostNames: {
        serializedName: "cloneCustomHostNames",
        type: {
          name: "Boolean"
        }
      },
      cloneSourceControl: {
        serializedName: "cloneSourceControl",
        type: {
          name: "Boolean"
        }
      },
      sourceWebAppId: {
        serializedName: "sourceWebAppId",
        type: {
          name: "String"
        }
      },
      hostingEnvironment: {
        serializedName: "hostingEnvironment",
        type: {
          name: "String"
        }
      },
      appSettingsOverrides: {
        serializedName: "appSettingsOverrides",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      configureLoadBalancing: {
        serializedName: "configureLoadBalancing",
        type: {
          name: "Boolean"
        }
      },
      trafficManagerProfileId: {
        serializedName: "trafficManagerProfileId",
        type: {
          name: "String"
        }
      },
      trafficManagerProfileName: {
        serializedName: "trafficManagerProfileName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Site: msRest.CompositeMapper = {
  serializedName: "Site",
  type: {
    name: "Composite",
    className: "Site",
    modelProperties: {
      ...Resource.type.modelProperties,
      siteName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      hostNames: {
        readOnly: true,
        serializedName: "properties.hostNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      repositorySiteName: {
        readOnly: true,
        serializedName: "properties.repositorySiteName",
        type: {
          name: "String"
        }
      },
      usageState: {
        required: true,
        readOnly: true,
        serializedName: "properties.usageState",
        type: {
          name: "Enum",
          allowedValues: [
            "Normal",
            "Exceeded"
          ]
        }
      },
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      enabledHostNames: {
        readOnly: true,
        serializedName: "properties.enabledHostNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      availabilityState: {
        required: true,
        readOnly: true,
        serializedName: "properties.availabilityState",
        type: {
          name: "Enum",
          allowedValues: [
            "Normal",
            "Limited",
            "DisasterRecoveryMode"
          ]
        }
      },
      hostNameSslStates: {
        serializedName: "properties.hostNameSslStates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HostNameSslState"
            }
          }
        }
      },
      serverFarmId: {
        serializedName: "properties.serverFarmId",
        type: {
          name: "String"
        }
      },
      lastModifiedTimeUtc: {
        readOnly: true,
        serializedName: "properties.lastModifiedTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      siteConfig: {
        serializedName: "properties.siteConfig",
        type: {
          name: "Composite",
          className: "SiteConfig"
        }
      },
      trafficManagerHostNames: {
        readOnly: true,
        serializedName: "properties.trafficManagerHostNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      premiumAppDeployed: {
        readOnly: true,
        serializedName: "properties.premiumAppDeployed",
        type: {
          name: "Boolean"
        }
      },
      scmSiteAlsoStopped: {
        serializedName: "properties.scmSiteAlsoStopped",
        type: {
          name: "Boolean"
        }
      },
      targetSwapSlot: {
        readOnly: true,
        serializedName: "properties.targetSwapSlot",
        type: {
          name: "String"
        }
      },
      hostingEnvironmentProfile: {
        serializedName: "properties.hostingEnvironmentProfile",
        type: {
          name: "Composite",
          className: "HostingEnvironmentProfile"
        }
      },
      microService: {
        serializedName: "properties.microService",
        type: {
          name: "String"
        }
      },
      gatewaySiteName: {
        serializedName: "properties.gatewaySiteName",
        type: {
          name: "String"
        }
      },
      clientAffinityEnabled: {
        serializedName: "properties.clientAffinityEnabled",
        type: {
          name: "Boolean"
        }
      },
      clientCertEnabled: {
        serializedName: "properties.clientCertEnabled",
        type: {
          name: "Boolean"
        }
      },
      hostNamesDisabled: {
        serializedName: "properties.hostNamesDisabled",
        type: {
          name: "Boolean"
        }
      },
      outboundIpAddresses: {
        readOnly: true,
        serializedName: "properties.outboundIpAddresses",
        type: {
          name: "String"
        }
      },
      containerSize: {
        serializedName: "properties.containerSize",
        type: {
          name: "Number"
        }
      },
      maxNumberOfWorkers: {
        serializedName: "properties.maxNumberOfWorkers",
        type: {
          name: "Number"
        }
      },
      cloningInfo: {
        serializedName: "properties.cloningInfo",
        type: {
          name: "Composite",
          className: "CloningInfo"
        }
      },
      resourceGroup: {
        readOnly: true,
        serializedName: "properties.resourceGroup",
        type: {
          name: "String"
        }
      },
      isDefaultContainer: {
        readOnly: true,
        serializedName: "properties.isDefaultContainer",
        type: {
          name: "Boolean"
        }
      },
      defaultHostName: {
        readOnly: true,
        serializedName: "properties.defaultHostName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SitePropertiesModel: msRest.CompositeMapper = {
  serializedName: "SiteProperties",
  type: {
    name: "Composite",
    className: "SitePropertiesModel",
    modelProperties: {
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NameValuePair"
            }
          }
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NameValuePair"
            }
          }
        }
      },
      appSettings: {
        serializedName: "appSettings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NameValuePair"
            }
          }
        }
      }
    }
  }
};

export const RoutingRule: msRest.CompositeMapper = {
  serializedName: "RoutingRule",
  type: {
    name: "Composite",
    className: "RoutingRule",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SiteAuthSettings: msRest.CompositeMapper = {
  serializedName: "SiteAuthSettings",
  type: {
    name: "Composite",
    className: "SiteAuthSettings",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      httpApiPrefixPath: {
        serializedName: "httpApiPrefixPath",
        type: {
          name: "String"
        }
      },
      unauthenticatedClientAction: {
        serializedName: "unauthenticatedClientAction",
        type: {
          name: "Enum",
          allowedValues: [
            "RedirectToLoginPage",
            "AllowAnonymous"
          ]
        }
      },
      tokenStoreEnabled: {
        serializedName: "tokenStoreEnabled",
        type: {
          name: "Boolean"
        }
      },
      allowedExternalRedirectUrls: {
        serializedName: "allowedExternalRedirectUrls",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      defaultProvider: {
        serializedName: "defaultProvider",
        type: {
          name: "Enum",
          allowedValues: [
            "AzureActiveDirectory",
            "Facebook",
            "Google",
            "MicrosoftAccount",
            "Twitter"
          ]
        }
      },
      tokenRefreshExtensionHours: {
        serializedName: "tokenRefreshExtensionHours",
        type: {
          name: "Number"
        }
      },
      clientId: {
        serializedName: "clientId",
        type: {
          name: "String"
        }
      },
      clientSecret: {
        serializedName: "clientSecret",
        type: {
          name: "String"
        }
      },
      issuer: {
        serializedName: "issuer",
        type: {
          name: "String"
        }
      },
      allowedAudiences: {
        serializedName: "allowedAudiences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      additionalLoginParams: {
        serializedName: "additionalLoginParams",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      aadClientId: {
        serializedName: "aadClientId",
        type: {
          name: "String"
        }
      },
      openIdIssuer: {
        serializedName: "openIdIssuer",
        type: {
          name: "String"
        }
      },
      googleClientId: {
        serializedName: "googleClientId",
        type: {
          name: "String"
        }
      },
      googleClientSecret: {
        serializedName: "googleClientSecret",
        type: {
          name: "String"
        }
      },
      googleOAuthScopes: {
        serializedName: "googleOAuthScopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      facebookAppId: {
        serializedName: "facebookAppId",
        type: {
          name: "String"
        }
      },
      facebookAppSecret: {
        serializedName: "facebookAppSecret",
        type: {
          name: "String"
        }
      },
      facebookOAuthScopes: {
        serializedName: "facebookOAuthScopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      twitterConsumerKey: {
        serializedName: "twitterConsumerKey",
        type: {
          name: "String"
        }
      },
      twitterConsumerSecret: {
        serializedName: "twitterConsumerSecret",
        type: {
          name: "String"
        }
      },
      microsoftAccountClientId: {
        serializedName: "microsoftAccountClientId",
        type: {
          name: "String"
        }
      },
      microsoftAccountClientSecret: {
        serializedName: "microsoftAccountClientSecret",
        type: {
          name: "String"
        }
      },
      microsoftAccountOAuthScopes: {
        serializedName: "microsoftAccountOAuthScopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VirtualNetworkProfile: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkProfile",
  type: {
    name: "Composite",
    className: "VirtualNetworkProfile",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      subnet: {
        serializedName: "subnet",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkerPool: msRest.CompositeMapper = {
  serializedName: "WorkerPool",
  type: {
    name: "Composite",
    className: "WorkerPool",
    modelProperties: {
      ...Resource.type.modelProperties,
      workerSizeId: {
        serializedName: "properties.workerSizeId",
        type: {
          name: "Number"
        }
      },
      computeMode: {
        serializedName: "properties.computeMode",
        type: {
          name: "Enum",
          allowedValues: [
            "Shared",
            "Dedicated",
            "Dynamic"
          ]
        }
      },
      workerSize: {
        serializedName: "properties.workerSize",
        type: {
          name: "String"
        }
      },
      workerCount: {
        serializedName: "properties.workerCount",
        type: {
          name: "Number"
        }
      },
      instanceNames: {
        serializedName: "properties.instanceNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "SkuDescription"
        }
      }
    }
  }
};

export const VirtualIPMapping: msRest.CompositeMapper = {
  serializedName: "VirtualIPMapping",
  type: {
    name: "Composite",
    className: "VirtualIPMapping",
    modelProperties: {
      virtualIP: {
        serializedName: "virtualIP",
        type: {
          name: "String"
        }
      },
      internalHttpPort: {
        serializedName: "internalHttpPort",
        type: {
          name: "Number"
        }
      },
      internalHttpsPort: {
        serializedName: "internalHttpsPort",
        type: {
          name: "Number"
        }
      },
      inUse: {
        serializedName: "inUse",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const StampCapacity: msRest.CompositeMapper = {
  serializedName: "StampCapacity",
  type: {
    name: "Composite",
    className: "StampCapacity",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      availableCapacity: {
        serializedName: "availableCapacity",
        type: {
          name: "Number"
        }
      },
      totalCapacity: {
        serializedName: "totalCapacity",
        type: {
          name: "Number"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      computeMode: {
        serializedName: "computeMode",
        type: {
          name: "Enum",
          allowedValues: [
            "Shared",
            "Dedicated",
            "Dynamic"
          ]
        }
      },
      workerSize: {
        serializedName: "workerSize",
        type: {
          name: "Enum",
          allowedValues: [
            "Default",
            "Small",
            "Medium",
            "Large"
          ]
        }
      },
      workerSizeId: {
        serializedName: "workerSizeId",
        type: {
          name: "Number"
        }
      },
      excludeFromCapacityAllocation: {
        serializedName: "excludeFromCapacityAllocation",
        type: {
          name: "Boolean"
        }
      },
      isApplicableForAllComputeModes: {
        serializedName: "isApplicableForAllComputeModes",
        type: {
          name: "Boolean"
        }
      },
      siteMode: {
        serializedName: "siteMode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkAccessControlEntry: msRest.CompositeMapper = {
  serializedName: "NetworkAccessControlEntry",
  type: {
    name: "Composite",
    className: "NetworkAccessControlEntry",
    modelProperties: {
      action: {
        serializedName: "action",
        type: {
          name: "Enum",
          allowedValues: [
            "Permit",
            "Deny"
          ]
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      order: {
        serializedName: "order",
        type: {
          name: "Number"
        }
      },
      remoteSubnet: {
        serializedName: "remoteSubnet",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HostingEnvironment: msRest.CompositeMapper = {
  serializedName: "HostingEnvironment",
  type: {
    name: "Composite",
    className: "HostingEnvironment",
    modelProperties: {
      ...Resource.type.modelProperties,
      hostingEnvironmentName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      hostingEnvironmentLocation: {
        serializedName: "properties.location",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "Enum",
          allowedValues: [
            "Succeeded",
            "Failed",
            "Canceled",
            "InProgress",
            "Deleting"
          ]
        }
      },
      status: {
        required: true,
        serializedName: "properties.status",
        type: {
          name: "Enum",
          allowedValues: [
            "Preparing",
            "Ready",
            "Scaling",
            "Deleting"
          ]
        }
      },
      vnetName: {
        serializedName: "properties.vnetName",
        type: {
          name: "String"
        }
      },
      vnetResourceGroupName: {
        serializedName: "properties.vnetResourceGroupName",
        type: {
          name: "String"
        }
      },
      vnetSubnetName: {
        serializedName: "properties.vnetSubnetName",
        type: {
          name: "String"
        }
      },
      virtualNetwork: {
        serializedName: "properties.virtualNetwork",
        type: {
          name: "Composite",
          className: "VirtualNetworkProfile"
        }
      },
      internalLoadBalancingMode: {
        serializedName: "properties.internalLoadBalancingMode",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "Web",
            "Publishing"
          ]
        }
      },
      multiSize: {
        serializedName: "properties.multiSize",
        type: {
          name: "String"
        }
      },
      multiRoleCount: {
        serializedName: "properties.multiRoleCount",
        type: {
          name: "Number"
        }
      },
      workerPools: {
        serializedName: "properties.workerPools",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkerPool"
            }
          }
        }
      },
      ipsslAddressCount: {
        serializedName: "properties.ipsslAddressCount",
        type: {
          name: "Number"
        }
      },
      databaseEdition: {
        serializedName: "properties.databaseEdition",
        type: {
          name: "String"
        }
      },
      databaseServiceObjective: {
        serializedName: "properties.databaseServiceObjective",
        type: {
          name: "String"
        }
      },
      upgradeDomains: {
        serializedName: "properties.upgradeDomains",
        type: {
          name: "Number"
        }
      },
      subscriptionId: {
        serializedName: "properties.subscriptionId",
        type: {
          name: "String"
        }
      },
      dnsSuffix: {
        serializedName: "properties.dnsSuffix",
        type: {
          name: "String"
        }
      },
      lastAction: {
        serializedName: "properties.lastAction",
        type: {
          name: "String"
        }
      },
      lastActionResult: {
        serializedName: "properties.lastActionResult",
        type: {
          name: "String"
        }
      },
      allowedMultiSizes: {
        serializedName: "properties.allowedMultiSizes",
        type: {
          name: "String"
        }
      },
      allowedWorkerSizes: {
        serializedName: "properties.allowedWorkerSizes",
        type: {
          name: "String"
        }
      },
      maximumNumberOfMachines: {
        serializedName: "properties.maximumNumberOfMachines",
        type: {
          name: "Number"
        }
      },
      vipMappings: {
        serializedName: "properties.vipMappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualIPMapping"
            }
          }
        }
      },
      environmentCapacities: {
        serializedName: "properties.environmentCapacities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StampCapacity"
            }
          }
        }
      },
      networkAccessControlList: {
        serializedName: "properties.networkAccessControlList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkAccessControlEntry"
            }
          }
        }
      },
      environmentIsHealthy: {
        serializedName: "properties.environmentIsHealthy",
        type: {
          name: "Boolean"
        }
      },
      environmentStatus: {
        serializedName: "properties.environmentStatus",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "properties.resourceGroup",
        type: {
          name: "String"
        }
      },
      apiManagementAccountId: {
        serializedName: "properties.apiManagementAccountId",
        type: {
          name: "String"
        }
      },
      suspended: {
        serializedName: "properties.suspended",
        type: {
          name: "Boolean"
        }
      },
      clusterSettings: {
        serializedName: "properties.clusterSettings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NameValuePair"
            }
          }
        }
      }
    }
  }
};

export const ManagedHostingEnvironment: msRest.CompositeMapper = {
  serializedName: "ManagedHostingEnvironment",
  type: {
    name: "Composite",
    className: "ManagedHostingEnvironment",
    modelProperties: {
      ...Resource.type.modelProperties,
      managedHostingEnvironmentName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      managedHostingEnvironmentLocation: {
        serializedName: "properties.location",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "properties.status",
        type: {
          name: "Enum",
          allowedValues: [
            "Preparing",
            "Ready",
            "Deleting"
          ]
        }
      },
      virtualNetwork: {
        serializedName: "properties.virtualNetwork",
        type: {
          name: "Composite",
          className: "VirtualNetworkProfile"
        }
      },
      ipsslAddressCount: {
        serializedName: "properties.ipsslAddressCount",
        type: {
          name: "Number"
        }
      },
      dnsSuffix: {
        serializedName: "properties.dnsSuffix",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "properties.subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "properties.resourceGroup",
        type: {
          name: "String"
        }
      },
      environmentIsHealthy: {
        serializedName: "properties.environmentIsHealthy",
        type: {
          name: "Boolean"
        }
      },
      environmentStatus: {
        serializedName: "properties.environmentStatus",
        type: {
          name: "String"
        }
      },
      suspended: {
        serializedName: "properties.suspended",
        type: {
          name: "Boolean"
        }
      },
      apiManagementAccount: {
        serializedName: "properties.apiManagementAccount",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceNameAvailabilityRequest: msRest.CompositeMapper = {
  serializedName: "ResourceNameAvailabilityRequest",
  type: {
    name: "Composite",
    className: "ResourceNameAvailabilityRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      isFqdn: {
        serializedName: "isFqdn",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ResourceNameAvailability: msRest.CompositeMapper = {
  serializedName: "ResourceNameAvailability",
  type: {
    name: "Composite",
    className: "ResourceNameAvailability",
    modelProperties: {
      nameAvailable: {
        serializedName: "nameAvailable",
        type: {
          name: "Boolean"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DomainControlCenterSsoRequest: msRest.CompositeMapper = {
  serializedName: "DomainControlCenterSsoRequest",
  type: {
    name: "Composite",
    className: "DomainControlCenterSsoRequest",
    modelProperties: {
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      postParameterKey: {
        serializedName: "postParameterKey",
        type: {
          name: "String"
        }
      },
      postParameterValue: {
        serializedName: "postParameterValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DomainRegistrationInput: msRest.CompositeMapper = {
  serializedName: "DomainRegistrationInput",
  type: {
    name: "Composite",
    className: "DomainRegistrationInput",
    modelProperties: {
      ...Resource.type.modelProperties,
      domainRegistrationInputName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      contactAdmin: {
        serializedName: "properties.contactAdmin",
        type: {
          name: "Composite",
          className: "Contact"
        }
      },
      contactBilling: {
        serializedName: "properties.contactBilling",
        type: {
          name: "Composite",
          className: "Contact"
        }
      },
      contactRegistrant: {
        serializedName: "properties.contactRegistrant",
        type: {
          name: "Composite",
          className: "Contact"
        }
      },
      contactTech: {
        serializedName: "properties.contactTech",
        type: {
          name: "Composite",
          className: "Contact"
        }
      },
      registrationStatus: {
        serializedName: "properties.registrationStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "Active",
            "Awaiting",
            "Cancelled",
            "Confiscated",
            "Disabled",
            "Excluded",
            "Expired",
            "Failed",
            "Held",
            "Locked",
            "Parked",
            "Pending",
            "Reserved",
            "Reverted",
            "Suspended",
            "Transferred",
            "Unknown",
            "Unlocked",
            "Unparked",
            "Updated",
            "JsonConverterFailed"
          ]
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "Enum",
          allowedValues: [
            "Succeeded",
            "Failed",
            "Canceled",
            "InProgress",
            "Deleting"
          ]
        }
      },
      nameServers: {
        serializedName: "properties.nameServers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      privacy: {
        serializedName: "properties.privacy",
        type: {
          name: "Boolean"
        }
      },
      createdTime: {
        serializedName: "properties.createdTime",
        type: {
          name: "DateTime"
        }
      },
      expirationTime: {
        serializedName: "properties.expirationTime",
        type: {
          name: "DateTime"
        }
      },
      lastRenewedTime: {
        serializedName: "properties.lastRenewedTime",
        type: {
          name: "DateTime"
        }
      },
      autoRenew: {
        serializedName: "properties.autoRenew",
        type: {
          name: "Boolean"
        }
      },
      readyForDnsRecordManagement: {
        serializedName: "properties.readyForDnsRecordManagement",
        type: {
          name: "Boolean"
        }
      },
      managedHostNames: {
        serializedName: "properties.managedHostNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HostName"
            }
          }
        }
      },
      consent: {
        serializedName: "properties.consent",
        type: {
          name: "Composite",
          className: "DomainPurchaseConsent"
        }
      },
      domainNotRenewableReasons: {
        serializedName: "properties.domainNotRenewableReasons",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const NameIdentifier: msRest.CompositeMapper = {
  serializedName: "NameIdentifier",
  type: {
    name: "Composite",
    className: "NameIdentifier",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DomainAvailablilityCheckResult: msRest.CompositeMapper = {
  serializedName: "DomainAvailablilityCheckResult",
  type: {
    name: "Composite",
    className: "DomainAvailablilityCheckResult",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      available: {
        serializedName: "available",
        type: {
          name: "Boolean"
        }
      },
      domainType: {
        serializedName: "domainType",
        type: {
          name: "Enum",
          allowedValues: [
            "Regular",
            "SoftDeleted"
          ]
        }
      }
    }
  }
};

export const DomainRecommendationSearchParameters: msRest.CompositeMapper = {
  serializedName: "DomainRecommendationSearchParameters",
  type: {
    name: "Composite",
    className: "DomainRecommendationSearchParameters",
    modelProperties: {
      keywords: {
        serializedName: "keywords",
        type: {
          name: "String"
        }
      },
      maxDomainRecommendations: {
        serializedName: "maxDomainRecommendations",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CsmMoveResourceEnvelope: msRest.CompositeMapper = {
  serializedName: "CsmMoveResourceEnvelope",
  type: {
    name: "Composite",
    className: "CsmMoveResourceEnvelope",
    modelProperties: {
      targetResourceGroup: {
        serializedName: "targetResourceGroup",
        type: {
          name: "String"
        }
      },
      resources: {
        serializedName: "resources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const HostingEnvironmentDiagnostics: msRest.CompositeMapper = {
  serializedName: "HostingEnvironmentDiagnostics",
  type: {
    name: "Composite",
    className: "HostingEnvironmentDiagnostics",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      diagnosicsOutput: {
        serializedName: "diagnosicsOutput",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddressResponse: msRest.CompositeMapper = {
  serializedName: "AddressResponse",
  type: {
    name: "Composite",
    className: "AddressResponse",
    modelProperties: {
      serviceIpAddress: {
        serializedName: "serviceIpAddress",
        type: {
          name: "String"
        }
      },
      internalIpAddress: {
        serializedName: "internalIpAddress",
        type: {
          name: "String"
        }
      },
      outboundIpAddresses: {
        serializedName: "outboundIpAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      vipMappings: {
        serializedName: "vipMappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualIPMapping"
            }
          }
        }
      }
    }
  }
};

export const ResourceMetricName: msRest.CompositeMapper = {
  serializedName: "ResourceMetricName",
  type: {
    name: "Composite",
    className: "ResourceMetricName",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      localizedValue: {
        serializedName: "localizedValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceMetricValue: msRest.CompositeMapper = {
  serializedName: "ResourceMetricValue",
  type: {
    name: "Composite",
    className: "ResourceMetricValue",
    modelProperties: {
      timeStamp: {
        serializedName: "timeStamp",
        type: {
          name: "String"
        }
      },
      average: {
        serializedName: "average",
        type: {
          name: "Number"
        }
      },
      minimum: {
        serializedName: "minimum",
        type: {
          name: "Number"
        }
      },
      maximum: {
        serializedName: "maximum",
        type: {
          name: "Number"
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyValuePairStringString: msRest.CompositeMapper = {
  serializedName: "KeyValuePair_String,String_",
  type: {
    name: "Composite",
    className: "KeyValuePairStringString",
    modelProperties: {
      key: {
        readOnly: true,
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceMetric: msRest.CompositeMapper = {
  serializedName: "ResourceMetric",
  type: {
    name: "Composite",
    className: "ResourceMetric",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "ResourceMetricName"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      timeGrain: {
        serializedName: "timeGrain",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      metricValues: {
        serializedName: "metricValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceMetricValue"
            }
          }
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KeyValuePairStringString"
            }
          }
        }
      }
    }
  }
};

export const MetricAvailabilily: msRest.CompositeMapper = {
  serializedName: "MetricAvailabilily",
  type: {
    name: "Composite",
    className: "MetricAvailabilily",
    modelProperties: {
      timeGrain: {
        serializedName: "timeGrain",
        type: {
          name: "String"
        }
      },
      retention: {
        serializedName: "retention",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricDefinition: msRest.CompositeMapper = {
  serializedName: "MetricDefinition",
  type: {
    name: "Composite",
    className: "MetricDefinition",
    modelProperties: {
      ...Resource.type.modelProperties,
      metricDefinitionName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "properties.unit",
        type: {
          name: "String"
        }
      },
      primaryAggregationType: {
        serializedName: "properties.primaryAggregationType",
        type: {
          name: "String"
        }
      },
      metricAvailabilities: {
        serializedName: "properties.metricAvailabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetricAvailabilily"
            }
          }
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LocalizableString: msRest.CompositeMapper = {
  serializedName: "LocalizableString",
  type: {
    name: "Composite",
    className: "LocalizableString",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      localizedValue: {
        serializedName: "localizedValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CsmUsageQuota: msRest.CompositeMapper = {
  serializedName: "CsmUsageQuota",
  type: {
    name: "Composite",
    className: "CsmUsageQuota",
    modelProperties: {
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      nextResetTime: {
        serializedName: "nextResetTime",
        type: {
          name: "DateTime"
        }
      },
      currentValue: {
        serializedName: "currentValue",
        type: {
          name: "Number"
        }
      },
      limit: {
        serializedName: "limit",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "LocalizableString"
        }
      }
    }
  }
};

export const Usage: msRest.CompositeMapper = {
  serializedName: "Usage",
  type: {
    name: "Composite",
    className: "Usage",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      usageName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      resourceName: {
        serializedName: "properties.resourceName",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "properties.unit",
        type: {
          name: "String"
        }
      },
      currentValue: {
        serializedName: "properties.currentValue",
        type: {
          name: "Number"
        }
      },
      limit: {
        serializedName: "properties.limit",
        type: {
          name: "Number"
        }
      },
      nextResetTime: {
        serializedName: "properties.nextResetTime",
        type: {
          name: "DateTime"
        }
      },
      computeMode: {
        serializedName: "properties.computeMode",
        type: {
          name: "Enum",
          allowedValues: [
            "Shared",
            "Dedicated",
            "Dynamic"
          ]
        }
      },
      siteMode: {
        serializedName: "properties.siteMode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SkuCapacity: msRest.CompositeMapper = {
  serializedName: "SkuCapacity",
  type: {
    name: "Composite",
    className: "SkuCapacity",
    modelProperties: {
      minimum: {
        serializedName: "minimum",
        type: {
          name: "Number"
        }
      },
      maximum: {
        serializedName: "maximum",
        type: {
          name: "Number"
        }
      },
      default: {
        serializedName: "default",
        type: {
          name: "Number"
        }
      },
      scaleType: {
        serializedName: "scaleType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SkuInfo: msRest.CompositeMapper = {
  serializedName: "SkuInfo",
  type: {
    name: "Composite",
    className: "SkuInfo",
    modelProperties: {
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "SkuDescription"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Composite",
          className: "SkuCapacity"
        }
      }
    }
  }
};

export const SourceControl: msRest.CompositeMapper = {
  serializedName: "SourceControl",
  type: {
    name: "Composite",
    className: "SourceControl",
    modelProperties: {
      ...Resource.type.modelProperties,
      sourceControlName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      token: {
        serializedName: "properties.token",
        type: {
          name: "String"
        }
      },
      tokenSecret: {
        serializedName: "properties.tokenSecret",
        type: {
          name: "String"
        }
      },
      refreshToken: {
        serializedName: "properties.refreshToken",
        type: {
          name: "String"
        }
      },
      expirationTime: {
        serializedName: "properties.expirationTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Recommendation: msRest.CompositeMapper = {
  serializedName: "Recommendation",
  type: {
    name: "Composite",
    className: "Recommendation",
    modelProperties: {
      creationTime: {
        serializedName: "creationTime",
        type: {
          name: "DateTime"
        }
      },
      recommendationId: {
        serializedName: "recommendationId",
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      resourceScope: {
        serializedName: "resourceScope",
        type: {
          name: "String"
        }
      },
      ruleName: {
        serializedName: "ruleName",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      level: {
        required: true,
        serializedName: "level",
        type: {
          name: "Enum",
          allowedValues: [
            "Critical",
            "Warning",
            "Information",
            "NonUrgentSuggestion"
          ]
        }
      },
      channels: {
        required: true,
        serializedName: "channels",
        type: {
          name: "Enum",
          allowedValues: [
            "Notification",
            "Api",
            "Email",
            "All"
          ]
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      actionName: {
        serializedName: "actionName",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Number"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      nextNotificationTime: {
        serializedName: "nextNotificationTime",
        type: {
          name: "DateTime"
        }
      },
      notificationExpirationTime: {
        serializedName: "notificationExpirationTime",
        type: {
          name: "DateTime"
        }
      },
      notifiedTime: {
        serializedName: "notifiedTime",
        type: {
          name: "DateTime"
        }
      },
      score: {
        serializedName: "score",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RecommendationRule: msRest.CompositeMapper = {
  serializedName: "RecommendationRule",
  type: {
    name: "Composite",
    className: "RecommendationRule",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      recommendationId: {
        serializedName: "recommendationId",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      actionName: {
        serializedName: "actionName",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Number"
        }
      },
      level: {
        required: true,
        serializedName: "level",
        type: {
          name: "Enum",
          allowedValues: [
            "Critical",
            "Warning",
            "Information",
            "NonUrgentSuggestion"
          ]
        }
      },
      channels: {
        required: true,
        serializedName: "channels",
        type: {
          name: "Enum",
          allowedValues: [
            "Notification",
            "Api",
            "Email",
            "All"
          ]
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VnetRoute: msRest.CompositeMapper = {
  serializedName: "VnetRoute",
  type: {
    name: "Composite",
    className: "VnetRoute",
    modelProperties: {
      ...Resource.type.modelProperties,
      vnetRouteName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      startAddress: {
        serializedName: "properties.startAddress",
        type: {
          name: "String"
        }
      },
      endAddress: {
        serializedName: "properties.endAddress",
        type: {
          name: "String"
        }
      },
      routeType: {
        serializedName: "properties.routeType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VnetInfo: msRest.CompositeMapper = {
  serializedName: "VnetInfo",
  type: {
    name: "Composite",
    className: "VnetInfo",
    modelProperties: {
      ...Resource.type.modelProperties,
      vnetResourceId: {
        serializedName: "properties.vnetResourceId",
        type: {
          name: "String"
        }
      },
      certThumbprint: {
        serializedName: "properties.certThumbprint",
        type: {
          name: "String"
        }
      },
      certBlob: {
        serializedName: "properties.certBlob",
        type: {
          name: "String"
        }
      },
      routes: {
        serializedName: "properties.routes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VnetRoute"
            }
          }
        }
      },
      resyncRequired: {
        serializedName: "properties.resyncRequired",
        type: {
          name: "Boolean"
        }
      },
      dnsServers: {
        serializedName: "properties.dnsServers",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VnetGateway: msRest.CompositeMapper = {
  serializedName: "VnetGateway",
  type: {
    name: "Composite",
    className: "VnetGateway",
    modelProperties: {
      ...Resource.type.modelProperties,
      vnetName: {
        serializedName: "properties.vnetName",
        type: {
          name: "String"
        }
      },
      vpnPackageUri: {
        serializedName: "properties.vpnPackageUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RelayServiceConnectionEntity: msRest.CompositeMapper = {
  serializedName: "RelayServiceConnectionEntity",
  type: {
    name: "Composite",
    className: "RelayServiceConnectionEntity",
    modelProperties: {
      ...Resource.type.modelProperties,
      entityName: {
        serializedName: "properties.entityName",
        type: {
          name: "String"
        }
      },
      entityConnectionString: {
        serializedName: "properties.entityConnectionString",
        type: {
          name: "String"
        }
      },
      resourceType: {
        serializedName: "properties.resourceType",
        type: {
          name: "String"
        }
      },
      resourceConnectionString: {
        serializedName: "properties.resourceConnectionString",
        type: {
          name: "String"
        }
      },
      hostname: {
        serializedName: "properties.hostname",
        type: {
          name: "String"
        }
      },
      port: {
        serializedName: "properties.port",
        type: {
          name: "Number"
        }
      },
      biztalkUri: {
        serializedName: "properties.biztalkUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkFeatures: msRest.CompositeMapper = {
  serializedName: "NetworkFeatures",
  type: {
    name: "Composite",
    className: "NetworkFeatures",
    modelProperties: {
      ...Resource.type.modelProperties,
      virtualNetworkName: {
        serializedName: "properties.virtualNetworkName",
        type: {
          name: "String"
        }
      },
      virtualNetworkConnection: {
        serializedName: "properties.virtualNetworkConnection",
        type: {
          name: "Composite",
          className: "VnetInfo"
        }
      },
      hybridConnections: {
        serializedName: "properties.hybridConnections",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RelayServiceConnectionEntity"
            }
          }
        }
      }
    }
  }
};

export const CsmSlotEntity: msRest.CompositeMapper = {
  serializedName: "CsmSlotEntity",
  type: {
    name: "Composite",
    className: "CsmSlotEntity",
    modelProperties: {
      targetSlot: {
        serializedName: "targetSlot",
        type: {
          name: "String"
        }
      },
      preserveVnet: {
        serializedName: "preserveVnet",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SlotDifference: msRest.CompositeMapper = {
  serializedName: "SlotDifference",
  type: {
    name: "Composite",
    className: "SlotDifference",
    modelProperties: {
      ...Resource.type.modelProperties,
      slotDifferenceType: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      settingType: {
        serializedName: "properties.settingType",
        type: {
          name: "String"
        }
      },
      diffRule: {
        serializedName: "properties.diffRule",
        type: {
          name: "String"
        }
      },
      settingName: {
        serializedName: "properties.settingName",
        type: {
          name: "String"
        }
      },
      valueInCurrentSlot: {
        serializedName: "properties.valueInCurrentSlot",
        type: {
          name: "String"
        }
      },
      valueInTargetSlot: {
        serializedName: "properties.valueInTargetSlot",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SlotConfigNamesResource: msRest.CompositeMapper = {
  serializedName: "SlotConfigNamesResource",
  type: {
    name: "Composite",
    className: "SlotConfigNamesResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      connectionStringNames: {
        serializedName: "properties.connectionStringNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      appSettingNames: {
        serializedName: "properties.appSettingNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SlotConfigNames: msRest.CompositeMapper = {
  serializedName: "SlotConfigNames",
  type: {
    name: "Composite",
    className: "SlotConfigNames",
    modelProperties: {
      connectionStringNames: {
        serializedName: "connectionStringNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      appSettingNames: {
        serializedName: "appSettingNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SiteCloneabilityCriterion: msRest.CompositeMapper = {
  serializedName: "SiteCloneabilityCriterion",
  type: {
    name: "Composite",
    className: "SiteCloneabilityCriterion",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SiteCloneability: msRest.CompositeMapper = {
  serializedName: "SiteCloneability",
  type: {
    name: "Composite",
    className: "SiteCloneability",
    modelProperties: {
      result: {
        required: true,
        serializedName: "result",
        type: {
          name: "Enum",
          allowedValues: [
            "Cloneable",
            "PartiallyCloneable",
            "NotCloneable"
          ]
        }
      },
      blockingFeatures: {
        serializedName: "blockingFeatures",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SiteCloneabilityCriterion"
            }
          }
        }
      },
      unsupportedFeatures: {
        serializedName: "unsupportedFeatures",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SiteCloneabilityCriterion"
            }
          }
        }
      },
      blockingCharacteristics: {
        serializedName: "blockingCharacteristics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SiteCloneabilityCriterion"
            }
          }
        }
      }
    }
  }
};

export const CsmSiteRecoveryEntity: msRest.CompositeMapper = {
  serializedName: "CsmSiteRecoveryEntity",
  type: {
    name: "Composite",
    className: "CsmSiteRecoveryEntity",
    modelProperties: {
      snapshotTime: {
        serializedName: "snapshotTime",
        type: {
          name: "DateTime"
        }
      },
      recoverConfig: {
        serializedName: "recoverConfig",
        type: {
          name: "Boolean"
        }
      },
      siteName: {
        serializedName: "siteName",
        type: {
          name: "String"
        }
      },
      slotName: {
        serializedName: "slotName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeletedSite: msRest.CompositeMapper = {
  serializedName: "DeletedSite",
  type: {
    name: "Composite",
    className: "DeletedSite",
    modelProperties: {
      ...Resource.type.modelProperties,
      deletedTimestamp: {
        serializedName: "properties.deletedTimestamp",
        type: {
          name: "DateTime"
        }
      },
      deletedSiteName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      hostNames: {
        readOnly: true,
        serializedName: "properties.hostNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      repositorySiteName: {
        readOnly: true,
        serializedName: "properties.repositorySiteName",
        type: {
          name: "String"
        }
      },
      usageState: {
        required: true,
        readOnly: true,
        serializedName: "properties.usageState",
        type: {
          name: "Enum",
          allowedValues: [
            "Normal",
            "Exceeded"
          ]
        }
      },
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      enabledHostNames: {
        readOnly: true,
        serializedName: "properties.enabledHostNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      availabilityState: {
        required: true,
        readOnly: true,
        serializedName: "properties.availabilityState",
        type: {
          name: "Enum",
          allowedValues: [
            "Normal",
            "Limited",
            "DisasterRecoveryMode"
          ]
        }
      },
      hostNameSslStates: {
        serializedName: "properties.hostNameSslStates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HostNameSslState"
            }
          }
        }
      },
      serverFarmId: {
        serializedName: "properties.serverFarmId",
        type: {
          name: "String"
        }
      },
      lastModifiedTimeUtc: {
        readOnly: true,
        serializedName: "properties.lastModifiedTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      siteConfig: {
        serializedName: "properties.siteConfig",
        type: {
          name: "Composite",
          className: "SiteConfig"
        }
      },
      trafficManagerHostNames: {
        readOnly: true,
        serializedName: "properties.trafficManagerHostNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      premiumAppDeployed: {
        readOnly: true,
        serializedName: "properties.premiumAppDeployed",
        type: {
          name: "Boolean"
        }
      },
      scmSiteAlsoStopped: {
        serializedName: "properties.scmSiteAlsoStopped",
        type: {
          name: "Boolean"
        }
      },
      targetSwapSlot: {
        readOnly: true,
        serializedName: "properties.targetSwapSlot",
        type: {
          name: "String"
        }
      },
      hostingEnvironmentProfile: {
        serializedName: "properties.hostingEnvironmentProfile",
        type: {
          name: "Composite",
          className: "HostingEnvironmentProfile"
        }
      },
      microService: {
        serializedName: "properties.microService",
        type: {
          name: "String"
        }
      },
      gatewaySiteName: {
        serializedName: "properties.gatewaySiteName",
        type: {
          name: "String"
        }
      },
      clientAffinityEnabled: {
        serializedName: "properties.clientAffinityEnabled",
        type: {
          name: "Boolean"
        }
      },
      clientCertEnabled: {
        serializedName: "properties.clientCertEnabled",
        type: {
          name: "Boolean"
        }
      },
      hostNamesDisabled: {
        serializedName: "properties.hostNamesDisabled",
        type: {
          name: "Boolean"
        }
      },
      outboundIpAddresses: {
        readOnly: true,
        serializedName: "properties.outboundIpAddresses",
        type: {
          name: "String"
        }
      },
      containerSize: {
        serializedName: "properties.containerSize",
        type: {
          name: "Number"
        }
      },
      maxNumberOfWorkers: {
        serializedName: "properties.maxNumberOfWorkers",
        type: {
          name: "Number"
        }
      },
      cloningInfo: {
        serializedName: "properties.cloningInfo",
        type: {
          name: "Composite",
          className: "CloningInfo"
        }
      },
      resourceGroup: {
        readOnly: true,
        serializedName: "properties.resourceGroup",
        type: {
          name: "String"
        }
      },
      isDefaultContainer: {
        readOnly: true,
        serializedName: "properties.isDefaultContainer",
        type: {
          name: "Boolean"
        }
      },
      defaultHostName: {
        readOnly: true,
        serializedName: "properties.defaultHostName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Deployment: msRest.CompositeMapper = {
  serializedName: "Deployment",
  type: {
    name: "Composite",
    className: "Deployment",
    modelProperties: {
      ...Resource.type.modelProperties,
      deploymentId: {
        serializedName: "properties.id",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "properties.message",
        type: {
          name: "String"
        }
      },
      author: {
        serializedName: "properties.author",
        type: {
          name: "String"
        }
      },
      deployer: {
        serializedName: "properties.deployer",
        type: {
          name: "String"
        }
      },
      authorEmail: {
        serializedName: "properties.author_email",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "properties.start_time",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "properties.end_time",
        type: {
          name: "DateTime"
        }
      },
      active: {
        serializedName: "properties.active",
        type: {
          name: "Boolean"
        }
      },
      details: {
        serializedName: "properties.details",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SiteInstance: msRest.CompositeMapper = {
  serializedName: "SiteInstance",
  type: {
    name: "Composite",
    className: "SiteInstance",
    modelProperties: {
      ...Resource.type.modelProperties,
      siteInstanceName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HostNameBinding: msRest.CompositeMapper = {
  serializedName: "HostNameBinding",
  type: {
    name: "Composite",
    className: "HostNameBinding",
    modelProperties: {
      ...Resource.type.modelProperties,
      hostNameBindingName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      siteName: {
        serializedName: "properties.siteName",
        type: {
          name: "String"
        }
      },
      domainId: {
        serializedName: "properties.domainId",
        type: {
          name: "String"
        }
      },
      azureResourceName: {
        serializedName: "properties.azureResourceName",
        type: {
          name: "String"
        }
      },
      azureResourceType: {
        serializedName: "properties.azureResourceType",
        type: {
          name: "Enum",
          allowedValues: [
            "Website",
            "TrafficManager"
          ]
        }
      },
      customHostNameDnsRecordType: {
        serializedName: "properties.customHostNameDnsRecordType",
        type: {
          name: "Enum",
          allowedValues: [
            "CName",
            "A"
          ]
        }
      },
      hostNameType: {
        serializedName: "properties.hostNameType",
        type: {
          name: "Enum",
          allowedValues: [
            "Verified",
            "Managed"
          ]
        }
      }
    }
  }
};

export const SiteSourceControl: msRest.CompositeMapper = {
  serializedName: "SiteSourceControl",
  type: {
    name: "Composite",
    className: "SiteSourceControl",
    modelProperties: {
      ...Resource.type.modelProperties,
      repoUrl: {
        serializedName: "properties.repoUrl",
        type: {
          name: "String"
        }
      },
      branch: {
        serializedName: "properties.branch",
        type: {
          name: "String"
        }
      },
      isManualIntegration: {
        serializedName: "properties.isManualIntegration",
        type: {
          name: "Boolean"
        }
      },
      deploymentRollbackEnabled: {
        serializedName: "properties.deploymentRollbackEnabled",
        type: {
          name: "Boolean"
        }
      },
      isMercurial: {
        serializedName: "properties.isMercurial",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const StringDictionary: msRest.CompositeMapper = {
  serializedName: "StringDictionary",
  type: {
    name: "Composite",
    className: "StringDictionary",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ConnStringValueTypePair: msRest.CompositeMapper = {
  serializedName: "ConnStringValueTypePair",
  type: {
    name: "Composite",
    className: "ConnStringValueTypePair",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "MySql",
            "SQLServer",
            "SQLAzure",
            "Custom"
          ]
        }
      }
    }
  }
};

export const ConnectionStringDictionary: msRest.CompositeMapper = {
  serializedName: "ConnectionStringDictionary",
  type: {
    name: "Composite",
    className: "ConnectionStringDictionary",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "ConnStringValueTypePair"
            }
          }
        }
      }
    }
  }
};

export const FileSystemApplicationLogsConfig: msRest.CompositeMapper = {
  serializedName: "FileSystemApplicationLogsConfig",
  type: {
    name: "Composite",
    className: "FileSystemApplicationLogsConfig",
    modelProperties: {
      level: {
        serializedName: "level",
        type: {
          name: "Enum",
          allowedValues: [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ]
        }
      }
    }
  }
};

export const AzureTableStorageApplicationLogsConfig: msRest.CompositeMapper = {
  serializedName: "AzureTableStorageApplicationLogsConfig",
  type: {
    name: "Composite",
    className: "AzureTableStorageApplicationLogsConfig",
    modelProperties: {
      level: {
        serializedName: "level",
        type: {
          name: "Enum",
          allowedValues: [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ]
        }
      },
      sasUrl: {
        serializedName: "sasUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureBlobStorageApplicationLogsConfig: msRest.CompositeMapper = {
  serializedName: "AzureBlobStorageApplicationLogsConfig",
  type: {
    name: "Composite",
    className: "AzureBlobStorageApplicationLogsConfig",
    modelProperties: {
      level: {
        serializedName: "level",
        type: {
          name: "Enum",
          allowedValues: [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ]
        }
      },
      sasUrl: {
        serializedName: "sasUrl",
        type: {
          name: "String"
        }
      },
      retentionInDays: {
        serializedName: "retentionInDays",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ApplicationLogsConfig: msRest.CompositeMapper = {
  serializedName: "ApplicationLogsConfig",
  type: {
    name: "Composite",
    className: "ApplicationLogsConfig",
    modelProperties: {
      fileSystem: {
        serializedName: "fileSystem",
        type: {
          name: "Composite",
          className: "FileSystemApplicationLogsConfig"
        }
      },
      azureTableStorage: {
        serializedName: "azureTableStorage",
        type: {
          name: "Composite",
          className: "AzureTableStorageApplicationLogsConfig"
        }
      },
      azureBlobStorage: {
        serializedName: "azureBlobStorage",
        type: {
          name: "Composite",
          className: "AzureBlobStorageApplicationLogsConfig"
        }
      }
    }
  }
};

export const FileSystemHttpLogsConfig: msRest.CompositeMapper = {
  serializedName: "FileSystemHttpLogsConfig",
  type: {
    name: "Composite",
    className: "FileSystemHttpLogsConfig",
    modelProperties: {
      retentionInMb: {
        serializedName: "retentionInMb",
        type: {
          name: "Number"
        }
      },
      retentionInDays: {
        serializedName: "retentionInDays",
        type: {
          name: "Number"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AzureBlobStorageHttpLogsConfig: msRest.CompositeMapper = {
  serializedName: "AzureBlobStorageHttpLogsConfig",
  type: {
    name: "Composite",
    className: "AzureBlobStorageHttpLogsConfig",
    modelProperties: {
      sasUrl: {
        serializedName: "sasUrl",
        type: {
          name: "String"
        }
      },
      retentionInDays: {
        serializedName: "retentionInDays",
        type: {
          name: "Number"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const HttpLogsConfig: msRest.CompositeMapper = {
  serializedName: "HttpLogsConfig",
  type: {
    name: "Composite",
    className: "HttpLogsConfig",
    modelProperties: {
      fileSystem: {
        serializedName: "fileSystem",
        type: {
          name: "Composite",
          className: "FileSystemHttpLogsConfig"
        }
      },
      azureBlobStorage: {
        serializedName: "azureBlobStorage",
        type: {
          name: "Composite",
          className: "AzureBlobStorageHttpLogsConfig"
        }
      }
    }
  }
};

export const EnabledConfig: msRest.CompositeMapper = {
  serializedName: "EnabledConfig",
  type: {
    name: "Composite",
    className: "EnabledConfig",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SiteLogsConfig: msRest.CompositeMapper = {
  serializedName: "SiteLogsConfig",
  type: {
    name: "Composite",
    className: "SiteLogsConfig",
    modelProperties: {
      ...Resource.type.modelProperties,
      applicationLogs: {
        serializedName: "properties.applicationLogs",
        type: {
          name: "Composite",
          className: "ApplicationLogsConfig"
        }
      },
      httpLogs: {
        serializedName: "properties.httpLogs",
        type: {
          name: "Composite",
          className: "HttpLogsConfig"
        }
      },
      failedRequestsTracing: {
        serializedName: "properties.failedRequestsTracing",
        type: {
          name: "Composite",
          className: "EnabledConfig"
        }
      },
      detailedErrorMessages: {
        serializedName: "properties.detailedErrorMessages",
        type: {
          name: "Composite",
          className: "EnabledConfig"
        }
      }
    }
  }
};

export const PremierAddOnRequest: msRest.CompositeMapper = {
  serializedName: "PremierAddOnRequest",
  type: {
    name: "Composite",
    className: "PremierAddOnRequest",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "ArmPlan"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "SkuDescription"
        }
      }
    }
  }
};

export const BackupSchedule: msRest.CompositeMapper = {
  serializedName: "BackupSchedule",
  type: {
    name: "Composite",
    className: "BackupSchedule",
    modelProperties: {
      frequencyInterval: {
        serializedName: "frequencyInterval",
        type: {
          name: "Number"
        }
      },
      frequencyUnit: {
        required: true,
        serializedName: "frequencyUnit",
        type: {
          name: "Enum",
          allowedValues: [
            "Day",
            "Hour"
          ]
        }
      },
      keepAtLeastOneBackup: {
        serializedName: "keepAtLeastOneBackup",
        type: {
          name: "Boolean"
        }
      },
      retentionPeriodInDays: {
        serializedName: "retentionPeriodInDays",
        type: {
          name: "Number"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      lastExecutionTime: {
        serializedName: "lastExecutionTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const DatabaseBackupSetting: msRest.CompositeMapper = {
  serializedName: "DatabaseBackupSetting",
  type: {
    name: "Composite",
    className: "DatabaseBackupSetting",
    modelProperties: {
      databaseType: {
        serializedName: "databaseType",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      connectionStringName: {
        serializedName: "connectionStringName",
        type: {
          name: "String"
        }
      },
      connectionString: {
        serializedName: "connectionString",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BackupRequest: msRest.CompositeMapper = {
  serializedName: "BackupRequest",
  type: {
    name: "Composite",
    className: "BackupRequest",
    modelProperties: {
      ...Resource.type.modelProperties,
      backupRequestName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      storageAccountUrl: {
        serializedName: "properties.storageAccountUrl",
        type: {
          name: "String"
        }
      },
      backupSchedule: {
        serializedName: "properties.backupSchedule",
        type: {
          name: "Composite",
          className: "BackupSchedule"
        }
      },
      databases: {
        serializedName: "properties.databases",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatabaseBackupSetting"
            }
          }
        }
      },
      backupRequestType: {
        required: true,
        serializedName: "properties.type",
        type: {
          name: "Enum",
          allowedValues: [
            "Default",
            "Clone",
            "Relocation"
          ]
        }
      }
    }
  }
};

export const BackupItem: msRest.CompositeMapper = {
  serializedName: "BackupItem",
  type: {
    name: "Composite",
    className: "BackupItem",
    modelProperties: {
      ...Resource.type.modelProperties,
      backupItemId: {
        serializedName: "properties.id",
        type: {
          name: "Number"
        }
      },
      storageAccountUrl: {
        serializedName: "properties.storageAccountUrl",
        type: {
          name: "String"
        }
      },
      blobName: {
        serializedName: "properties.blobName",
        type: {
          name: "String"
        }
      },
      backupItemName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "properties.status",
        type: {
          name: "Enum",
          allowedValues: [
            "InProgress",
            "Failed",
            "Succeeded",
            "TimedOut",
            "Created",
            "Skipped",
            "PartiallySucceeded",
            "DeleteInProgress",
            "DeleteFailed",
            "Deleted"
          ]
        }
      },
      sizeInBytes: {
        serializedName: "properties.sizeInBytes",
        type: {
          name: "Number"
        }
      },
      created: {
        serializedName: "properties.created",
        type: {
          name: "DateTime"
        }
      },
      log: {
        serializedName: "properties.log",
        type: {
          name: "String"
        }
      },
      databases: {
        serializedName: "properties.databases",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatabaseBackupSetting"
            }
          }
        }
      },
      scheduled: {
        serializedName: "properties.scheduled",
        type: {
          name: "Boolean"
        }
      },
      lastRestoreTimeStamp: {
        serializedName: "properties.lastRestoreTimeStamp",
        type: {
          name: "DateTime"
        }
      },
      finishedTimeStamp: {
        serializedName: "properties.finishedTimeStamp",
        type: {
          name: "DateTime"
        }
      },
      correlationId: {
        serializedName: "properties.correlationId",
        type: {
          name: "String"
        }
      },
      websiteSizeInBytes: {
        serializedName: "properties.websiteSizeInBytes",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RestoreRequest: msRest.CompositeMapper = {
  serializedName: "RestoreRequest",
  type: {
    name: "Composite",
    className: "RestoreRequest",
    modelProperties: {
      ...Resource.type.modelProperties,
      storageAccountUrl: {
        serializedName: "properties.storageAccountUrl",
        type: {
          name: "String"
        }
      },
      blobName: {
        serializedName: "properties.blobName",
        type: {
          name: "String"
        }
      },
      overwrite: {
        serializedName: "properties.overwrite",
        type: {
          name: "Boolean"
        }
      },
      siteName: {
        serializedName: "properties.siteName",
        type: {
          name: "String"
        }
      },
      databases: {
        serializedName: "properties.databases",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatabaseBackupSetting"
            }
          }
        }
      },
      ignoreConflictingHostNames: {
        serializedName: "properties.ignoreConflictingHostNames",
        type: {
          name: "Boolean"
        }
      },
      operationType: {
        required: true,
        serializedName: "properties.operationType",
        type: {
          name: "Enum",
          allowedValues: [
            "Default",
            "Clone",
            "Relocation"
          ]
        }
      },
      adjustConnectionStrings: {
        serializedName: "properties.adjustConnectionStrings",
        type: {
          name: "Boolean"
        }
      },
      hostingEnvironment: {
        serializedName: "properties.hostingEnvironment",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RestoreResponse: msRest.CompositeMapper = {
  serializedName: "RestoreResponse",
  type: {
    name: "Composite",
    className: "RestoreResponse",
    modelProperties: {
      ...Resource.type.modelProperties,
      operationId: {
        serializedName: "properties.operationId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CsmPublishingProfileOptions: msRest.CompositeMapper = {
  serializedName: "CsmPublishingProfileOptions",
  type: {
    name: "Composite",
    className: "CsmPublishingProfileOptions",
    modelProperties: {
      format: {
        serializedName: "format",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TopLevelDomain: msRest.CompositeMapper = {
  serializedName: "TopLevelDomain",
  type: {
    name: "Composite",
    className: "TopLevelDomain",
    modelProperties: {
      ...Resource.type.modelProperties,
      topLevelDomainName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      privacy: {
        serializedName: "properties.privacy",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const TopLevelDomainAgreementOption: msRest.CompositeMapper = {
  serializedName: "TopLevelDomainAgreementOption",
  type: {
    name: "Composite",
    className: "TopLevelDomainAgreementOption",
    modelProperties: {
      includePrivacy: {
        serializedName: "includePrivacy",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const TldLegalAgreement: msRest.CompositeMapper = {
  serializedName: "TldLegalAgreement",
  type: {
    name: "Composite",
    className: "TldLegalAgreement",
    modelProperties: {
      agreementKey: {
        serializedName: "agreementKey",
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      content: {
        serializedName: "content",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GeneralApiInformation: msRest.CompositeMapper = {
  serializedName: "GeneralApiInformation",
  type: {
    name: "Composite",
    className: "GeneralApiInformation",
    modelProperties: {
      ...Resource.type.modelProperties,
      iconUrl: {
        serializedName: "properties.iconUrl",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      termsOfUseUrl: {
        serializedName: "properties.termsOfUseUrl",
        type: {
          name: "String"
        }
      },
      connectionDisplayName: {
        serializedName: "properties.connectionDisplayName",
        type: {
          name: "String"
        }
      },
      connectionPortalUrl: {
        serializedName: "properties.connectionPortalUrl",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ApiPolicies: msRest.CompositeMapper = {
  serializedName: "ApiPolicies",
  type: {
    name: "Composite",
    className: "ApiPolicies",
    modelProperties: {
      ...Resource.type.modelProperties,
      content: {
        serializedName: "properties.content",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HostingEnvironmentServiceDescriptions: msRest.CompositeMapper = {
  serializedName: "HostingEnvironmentServiceDescriptions",
  type: {
    name: "Composite",
    className: "HostingEnvironmentServiceDescriptions",
    modelProperties: {
      hostingEnvironmentId: {
        serializedName: "hostingEnvironmentId",
        type: {
          name: "String"
        }
      },
      hostId: {
        serializedName: "hostId",
        type: {
          name: "String"
        }
      },
      serviceUrl: {
        serializedName: "serviceUrl",
        type: {
          name: "String"
        }
      },
      useInternalRouting: {
        serializedName: "useInternalRouting",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const BackendServiceDefinition: msRest.CompositeMapper = {
  serializedName: "BackendServiceDefinition",
  type: {
    name: "Composite",
    className: "BackendServiceDefinition",
    modelProperties: {
      ...Resource.type.modelProperties,
      serviceUrl: {
        serializedName: "properties.serviceUrl",
        type: {
          name: "String"
        }
      },
      hostingEnvironmentServiceUrls: {
        serializedName: "properties.hostingEnvironmentServiceUrls",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HostingEnvironmentServiceDescriptions"
            }
          }
        }
      }
    }
  }
};

export const ApiOAuthSettingsParameter: msRest.CompositeMapper = {
  serializedName: "ApiOAuthSettingsParameter",
  type: {
    name: "Composite",
    className: "ApiOAuthSettingsParameter",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      options: {
        serializedName: "options",
        type: {
          name: "Object"
        }
      },
      uiDefinition: {
        serializedName: "uiDefinition",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ApiOAuthSettings: msRest.CompositeMapper = {
  serializedName: "ApiOAuthSettings",
  type: {
    name: "Composite",
    className: "ApiOAuthSettings",
    modelProperties: {
      identityProvider: {
        serializedName: "identityProvider",
        type: {
          name: "String"
        }
      },
      clientId: {
        serializedName: "clientId",
        type: {
          name: "String"
        }
      },
      clientSecret: {
        serializedName: "clientSecret",
        type: {
          name: "String"
        }
      },
      scopes: {
        serializedName: "scopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      redirectUrl: {
        serializedName: "redirectUrl",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      },
      customParameters: {
        serializedName: "customParameters",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "ApiOAuthSettingsParameter"
            }
          }
        }
      }
    }
  }
};

export const ConnectionParameter: msRest.CompositeMapper = {
  serializedName: "ConnectionParameter",
  type: {
    name: "Composite",
    className: "ConnectionParameter",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "string",
            "securestring",
            "secureobject",
            "int",
            "bool",
            "object",
            "array",
            "oauthSetting",
            "connection"
          ]
        }
      },
      defaultValue: {
        serializedName: "defaultValue",
        type: {
          name: "Object"
        }
      },
      oAuthSettings: {
        serializedName: "oAuthSettings",
        type: {
          name: "Composite",
          className: "ApiOAuthSettings"
        }
      },
      uiDefinition: {
        serializedName: "uiDefinition",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ApiEntity: msRest.CompositeMapper = {
  serializedName: "ApiEntity",
  type: {
    name: "Composite",
    className: "ApiEntity",
    modelProperties: {
      ...Resource.type.modelProperties,
      apiEntityName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      generalInformation: {
        serializedName: "properties.generalInformation",
        type: {
          name: "Composite",
          className: "GeneralApiInformation"
        }
      },
      path: {
        serializedName: "properties.path",
        type: {
          name: "String"
        }
      },
      runtimeUrls: {
        serializedName: "properties.runtimeUrls",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      protocols: {
        serializedName: "properties.protocols",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      policies: {
        serializedName: "properties.policies",
        type: {
          name: "Composite",
          className: "ApiPolicies"
        }
      },
      backendService: {
        serializedName: "properties.backendService",
        type: {
          name: "Composite",
          className: "BackendServiceDefinition"
        }
      },
      apiDefinitionUrl: {
        serializedName: "properties.apiDefinitionUrl",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "properties.metadata",
        type: {
          name: "Object"
        }
      },
      capabilities: {
        serializedName: "properties.capabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      connectionParameters: {
        serializedName: "properties.connectionParameters",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "ConnectionParameter"
            }
          }
        }
      },
      createdTime: {
        serializedName: "properties.createdTime",
        type: {
          name: "DateTime"
        }
      },
      changedTime: {
        serializedName: "properties.changedTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ConnectionError: msRest.CompositeMapper = {
  serializedName: "ConnectionError",
  type: {
    name: "Composite",
    className: "ConnectionError",
    modelProperties: {
      ...Resource.type.modelProperties,
      code: {
        serializedName: "properties.code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "properties.message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectionStatus: msRest.CompositeMapper = {
  serializedName: "ConnectionStatus",
  type: {
    name: "Composite",
    className: "ConnectionStatus",
    modelProperties: {
      ...Resource.type.modelProperties,
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "properties.target",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "properties.error",
        type: {
          name: "Composite",
          className: "ConnectionError"
        }
      }
    }
  }
};

export const CustomLoginSettingValue: msRest.CompositeMapper = {
  serializedName: "CustomLoginSettingValue",
  type: {
    name: "Composite",
    className: "CustomLoginSettingValue",
    modelProperties: {
      ...Resource.type.modelProperties,
      option: {
        serializedName: "properties.option",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ParameterCustomLoginSettingValues: msRest.CompositeMapper = {
  serializedName: "ParameterCustomLoginSettingValues",
  type: {
    name: "Composite",
    className: "ParameterCustomLoginSettingValues",
    modelProperties: {
      ...Resource.type.modelProperties,
      customParameters: {
        serializedName: "properties.customParameters",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "CustomLoginSettingValue"
            }
          }
        }
      }
    }
  }
};

export const ResponseMessageEnvelopeApiEntity: msRest.CompositeMapper = {
  serializedName: "ResponseMessageEnvelope_ApiEntity_",
  type: {
    name: "Composite",
    className: "ResponseMessageEnvelopeApiEntity",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "ArmPlan"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ApiEntity"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "SkuDescription"
        }
      }
    }
  }
};

export const ExpandedParentApiEntity: msRest.CompositeMapper = {
  serializedName: "ExpandedParent_ApiEntity_",
  type: {
    name: "Composite",
    className: "ExpandedParentApiEntity",
    modelProperties: {
      ...Resource.type.modelProperties,
      expandedParentApiEntityId: {
        serializedName: "properties.id",
        type: {
          name: "String"
        }
      },
      entity: {
        serializedName: "properties.entity",
        type: {
          name: "Composite",
          className: "ResponseMessageEnvelopeApiEntity"
        }
      }
    }
  }
};

export const Connection: msRest.CompositeMapper = {
  serializedName: "Connection",
  type: {
    name: "Composite",
    className: "Connection",
    modelProperties: {
      ...Resource.type.modelProperties,
      connectionName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      statuses: {
        serializedName: "properties.statuses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConnectionStatus"
            }
          }
        }
      },
      customParameterValues: {
        serializedName: "properties.customParameterValues",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "ParameterCustomLoginSettingValues"
            }
          }
        }
      },
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      parameterValues: {
        serializedName: "properties.parameterValues",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      },
      nonSecretParameterValues: {
        serializedName: "properties.nonSecretParameterValues",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      },
      metadata: {
        serializedName: "properties.metadata",
        type: {
          name: "Object"
        }
      },
      firstExpirationTime: {
        serializedName: "properties.firstExpirationTime",
        type: {
          name: "DateTime"
        }
      },
      keywords: {
        serializedName: "properties.keywords",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      createdTime: {
        serializedName: "properties.createdTime",
        type: {
          name: "DateTime"
        }
      },
      changedTime: {
        serializedName: "properties.changedTime",
        type: {
          name: "DateTime"
        }
      },
      api: {
        serializedName: "properties.api",
        type: {
          name: "Composite",
          className: "ExpandedParentApiEntity"
        }
      }
    }
  }
};

export const ConsentLinkInputParameter: msRest.CompositeMapper = {
  serializedName: "ConsentLinkInputParameter",
  type: {
    name: "Composite",
    className: "ConsentLinkInputParameter",
    modelProperties: {
      principalType: {
        serializedName: "principalType",
        type: {
          name: "Enum",
          allowedValues: [
            "ActiveDirectory",
            "Connection",
            "MicrosoftAccount"
          ]
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      objectId: {
        serializedName: "objectId",
        type: {
          name: "String"
        }
      },
      parameterName: {
        serializedName: "parameterName",
        type: {
          name: "String"
        }
      },
      redirectUrl: {
        serializedName: "redirectUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConsentLinkInput: msRest.CompositeMapper = {
  serializedName: "ConsentLinkInput",
  type: {
    name: "Composite",
    className: "ConsentLinkInput",
    modelProperties: {
      ...Resource.type.modelProperties,
      parameters: {
        serializedName: "properties.parameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConsentLinkInputParameter"
            }
          }
        }
      }
    }
  }
};

export const ConsentLink: msRest.CompositeMapper = {
  serializedName: "ConsentLink",
  type: {
    name: "Composite",
    className: "ConsentLink",
    modelProperties: {
      link: {
        serializedName: "link",
        type: {
          name: "String"
        }
      },
      firstPartyLoginUri: {
        serializedName: "firstPartyLoginUri",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Enum",
          allowedValues: [
            "Unauthenticated",
            "Authenticated",
            "Error"
          ]
        }
      }
    }
  }
};

export const ConsentLinkPayload: msRest.CompositeMapper = {
  serializedName: "ConsentLinkPayload",
  type: {
    name: "Composite",
    className: "ConsentLinkPayload",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConsentLink"
            }
          }
        }
      }
    }
  }
};

export const ListConnectionKeysInput: msRest.CompositeMapper = {
  serializedName: "ListConnectionKeysInput",
  type: {
    name: "Composite",
    className: "ListConnectionKeysInput",
    modelProperties: {
      ...Resource.type.modelProperties,
      validityTimeSpan: {
        serializedName: "properties.validityTimeSpan",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectionSecrets: msRest.CompositeMapper = {
  serializedName: "ConnectionSecrets",
  type: {
    name: "Composite",
    className: "ConnectionSecrets",
    modelProperties: {
      parameterValues: {
        serializedName: "parameterValues",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      },
      connectionKey: {
        serializedName: "connectionKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConfirmConsentCodeInput: msRest.CompositeMapper = {
  serializedName: "ConfirmConsentCodeInput",
  type: {
    name: "Composite",
    className: "ConfirmConsentCodeInput",
    modelProperties: {
      ...Resource.type.modelProperties,
      principalType: {
        serializedName: "properties.principalType",
        type: {
          name: "Enum",
          allowedValues: [
            "ActiveDirectory",
            "Connection",
            "MicrosoftAccount"
          ]
        }
      },
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      objectId: {
        serializedName: "properties.objectId",
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "properties.code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CertificateOrderCollection: msRest.CompositeMapper = {
  serializedName: "CertificateOrderCollection",
  type: {
    name: "Composite",
    className: "CertificateOrderCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CertificateOrder"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CertificateOrderCertificateCollection: msRest.CompositeMapper = {
  serializedName: "CertificateOrderCertificateCollection",
  type: {
    name: "Composite",
    className: "CertificateOrderCertificateCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CertificateOrderCertificate"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CertificateCollection: msRest.CompositeMapper = {
  serializedName: "CertificateCollection",
  type: {
    name: "Composite",
    className: "CertificateCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Certificate"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClassicMobileServiceCollection: msRest.CompositeMapper = {
  serializedName: "ClassicMobileServiceCollection",
  type: {
    name: "Composite",
    className: "ClassicMobileServiceCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ClassicMobileService"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DomainCollection: msRest.CompositeMapper = {
  serializedName: "DomainCollection",
  type: {
    name: "Composite",
    className: "DomainCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Domain"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GeoRegionCollection: msRest.CompositeMapper = {
  serializedName: "GeoRegionCollection",
  type: {
    name: "Composite",
    className: "GeoRegionCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GeoRegion"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerFarmCollection: msRest.CompositeMapper = {
  serializedName: "ServerFarmCollection",
  type: {
    name: "Composite",
    className: "ServerFarmCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerFarmWithRichSku"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SiteCollection: msRest.CompositeMapper = {
  serializedName: "SiteCollection",
  type: {
    name: "Composite",
    className: "SiteCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Site"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HostingEnvironmentCollection: msRest.CompositeMapper = {
  serializedName: "HostingEnvironmentCollection",
  type: {
    name: "Composite",
    className: "HostingEnvironmentCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HostingEnvironment"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedHostingEnvironmentCollection: msRest.CompositeMapper = {
  serializedName: "ManagedHostingEnvironmentCollection",
  type: {
    name: "Composite",
    className: "ManagedHostingEnvironmentCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedHostingEnvironment"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NameIdentifierCollection: msRest.CompositeMapper = {
  serializedName: "NameIdentifierCollection",
  type: {
    name: "Composite",
    className: "NameIdentifierCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NameIdentifier"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StampCapacityCollection: msRest.CompositeMapper = {
  serializedName: "StampCapacityCollection",
  type: {
    name: "Composite",
    className: "StampCapacityCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StampCapacity"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceMetricCollection: msRest.CompositeMapper = {
  serializedName: "ResourceMetricCollection",
  type: {
    name: "Composite",
    className: "ResourceMetricCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceMetric"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CsmUsageQuotaCollection: msRest.CompositeMapper = {
  serializedName: "CsmUsageQuotaCollection",
  type: {
    name: "Composite",
    className: "CsmUsageQuotaCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CsmUsageQuota"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricDefinitionCollection: msRest.CompositeMapper = {
  serializedName: "MetricDefinitionCollection",
  type: {
    name: "Composite",
    className: "MetricDefinitionCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetricDefinition"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UsageCollection: msRest.CompositeMapper = {
  serializedName: "UsageCollection",
  type: {
    name: "Composite",
    className: "UsageCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Usage"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkerPoolCollection: msRest.CompositeMapper = {
  serializedName: "WorkerPoolCollection",
  type: {
    name: "Composite",
    className: "WorkerPoolCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkerPool"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SkuInfoCollection: msRest.CompositeMapper = {
  serializedName: "SkuInfoCollection",
  type: {
    name: "Composite",
    className: "SkuInfoCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SkuInfo"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SourceControlCollection: msRest.CompositeMapper = {
  serializedName: "SourceControlCollection",
  type: {
    name: "Composite",
    className: "SourceControlCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SourceControl"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SlotDifferenceCollection: msRest.CompositeMapper = {
  serializedName: "SlotDifferenceCollection",
  type: {
    name: "Composite",
    className: "SlotDifferenceCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SlotDifference"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeletedSiteCollection: msRest.CompositeMapper = {
  serializedName: "DeletedSiteCollection",
  type: {
    name: "Composite",
    className: "DeletedSiteCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeletedSite"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeploymentCollection: msRest.CompositeMapper = {
  serializedName: "DeploymentCollection",
  type: {
    name: "Composite",
    className: "DeploymentCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Deployment"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SiteInstanceCollection: msRest.CompositeMapper = {
  serializedName: "SiteInstanceCollection",
  type: {
    name: "Composite",
    className: "SiteInstanceCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SiteInstance"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HostNameBindingCollection: msRest.CompositeMapper = {
  serializedName: "HostNameBindingCollection",
  type: {
    name: "Composite",
    className: "HostNameBindingCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HostNameBinding"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BackupItemCollection: msRest.CompositeMapper = {
  serializedName: "BackupItemCollection",
  type: {
    name: "Composite",
    className: "BackupItemCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BackupItem"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TopLevelDomainCollection: msRest.CompositeMapper = {
  serializedName: "TopLevelDomainCollection",
  type: {
    name: "Composite",
    className: "TopLevelDomainCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TopLevelDomain"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TldLegalAgreementCollection: msRest.CompositeMapper = {
  serializedName: "TldLegalAgreementCollection",
  type: {
    name: "Composite",
    className: "TldLegalAgreementCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TldLegalAgreement"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApisCollection: msRest.CompositeMapper = {
  serializedName: "ApisCollection",
  type: {
    name: "Composite",
    className: "ApisCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApiEntity"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectionCollection: msRest.CompositeMapper = {
  serializedName: "ConnectionCollection",
  type: {
    name: "Composite",
    className: "ConnectionCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Connection"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
