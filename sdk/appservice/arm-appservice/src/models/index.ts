/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * The plan object in an ARM, represents a marketplace plan
 */
export interface ArmPlan {
  /**
   * The name
   */
  name?: string;
  /**
   * The publisher
   */
  publisher?: string;
  /**
   * The product
   */
  product?: string;
  /**
   * The promotion code
   */
  promotionCode?: string;
  /**
   * Version of product
   */
  version?: string;
}

/**
 * An interface representing Resource.
 */
export interface Resource extends BaseResource {
  /**
   * Resource Id
   */
  id?: string;
  /**
   * Resource Name
   */
  name?: string;
  /**
   * Kind of resource
   */
  kind?: string;
  /**
   * Resource Location
   */
  location: string;
  /**
   * Resource type
   */
  type?: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Class representing the Key Vault container for certificate purchased through Azure
 */
export interface CertificateOrderCertificate extends Resource {
  /**
   * Key Vault Csm resource Id
   */
  keyVaultId?: string;
  /**
   * Key Vault secret name
   */
  keyVaultSecretName?: string;
  /**
   * Status of the Key Vault secret. Possible values include: 'Initialized',
   * 'WaitingOnCertificateOrder', 'Succeeded', 'CertificateOrderFailed',
   * 'OperationNotPermittedOnKeyVault', 'AzureServiceUnauthorizedToAccessKeyVault',
   * 'KeyVaultDoesNotExist', 'KeyVaultSecretDoesNotExist', 'UnknownError', 'Unknown'
   */
  provisioningState?: KeyVaultSecretStatus;
}

/**
 * Describes a sku for a scalable resource
 */
export interface SkuDescription {
  /**
   * Name of the resource sku
   */
  name?: string;
  /**
   * Service Tier of the resource sku
   */
  tier?: string;
  /**
   * Size specifier of the resource sku
   */
  size?: string;
  /**
   * Family code of the resource sku
   */
  family?: string;
  /**
   * Current number of instances assigned to the resource
   */
  capacity?: number;
}

/**
 * Certificate Details
 */
export interface CertificateDetails extends Resource {
  /**
   * Version
   */
  version?: number;
  /**
   * Serial Number
   */
  serialNumber?: string;
  /**
   * Thumbprint
   */
  thumbprint?: string;
  /**
   * Subject
   */
  subject?: string;
  /**
   * Valid from
   */
  notBefore?: Date;
  /**
   * Valid to
   */
  notAfter?: Date;
  /**
   * Signature Algorithm
   */
  signatureAlgorithm?: string;
  /**
   * Issuer
   */
  issuer?: string;
  /**
   * Raw certificate data
   */
  rawData?: string;
}

/**
 * Certificate purchase order
 */
export interface CertificateOrder extends Resource {
  /**
   * State of the Key Vault secret
   */
  certificates?: { [propertyName: string]: CertificateOrderCertificate };
  /**
   * Certificate distinguished name
   */
  distinguishedName?: string;
  /**
   * Domain Verification Token
   */
  domainVerificationToken?: string;
  /**
   * Duration in years (must be between 1 and 3)
   */
  validityInYears?: number;
  /**
   * Certificate Key Size
   */
  keySize?: number;
  /**
   * Certificate product type. Possible values include: 'StandardDomainValidatedSsl',
   * 'StandardDomainValidatedWildCardSsl'
   */
  productType?: CertificateProductType;
  /**
   * Auto renew
   */
  autoRenew?: boolean;
  /**
   * Status of certificate order. Possible values include: 'Succeeded', 'Failed', 'Canceled',
   * 'InProgress', 'Deleting'
   */
  provisioningState?: ProvisioningState;
  /**
   * Current order status. Possible values include: 'Pendingissuance', 'Issued', 'Revoked',
   * 'Canceled', 'Denied', 'Pendingrevocation', 'PendingRekey', 'Unused', 'Expired', 'NotSubmitted'
   */
  status?: CertificateOrderStatus;
  /**
   * Signed certificate
   */
  signedCertificate?: CertificateDetails;
  /**
   * Last CSR that was created for this order
   */
  csr?: string;
  /**
   * Intermediate certificate
   */
  intermediate?: CertificateDetails;
  /**
   * Root certificate
   */
  root?: CertificateDetails;
  /**
   * Current serial number of the certificate
   */
  serialNumber?: string;
  /**
   * Certificate last issuance time
   */
  lastCertificateIssuanceTime?: Date;
  /**
   * Certificate expiration time
   */
  expirationTime?: Date;
}

/**
 * Class representing certificate reissue request
 */
export interface ReissueCertificateOrderRequest extends Resource {
  /**
   * Certificate Key Size
   */
  keySize?: number;
  /**
   * Delay in hours to revoke existing certificate after the new certificate is issued
   */
  delayExistingRevokeInHours?: number;
}

/**
 * Class representing certificate renew request
 */
export interface RenewCertificateOrderRequest extends Resource {
  /**
   * Certificate Key Size
   */
  keySize?: number;
}

/**
 * Represents a certificate action
 */
export interface CertificateOrderAction extends Resource {
  /**
   * Type. Possible values include: 'CertificateIssued', 'CertificateOrderCanceled',
   * 'CertificateOrderCreated', 'CertificateRevoked', 'DomainValidationComplete', 'FraudDetected',
   * 'OrgNameChange', 'OrgValidationComplete', 'SanDrop'
   */
  certificateOrderActionType: CertificateOrderActionType;
  /**
   * Time at which the certificate action was performed
   */
  createdAt?: Date;
}

/**
 * Certificate Email
 */
export interface CertificateEmail extends Resource {
  /**
   * Email id
   */
  emailId?: string;
  /**
   * Time stamp
   */
  timeStamp?: Date;
}

/**
 * Specification for a hostingEnvironment (App Service Environment) to use for this resource
 */
export interface HostingEnvironmentProfile {
  /**
   * Resource id of the hostingEnvironment (App Service Environment)
   */
  id?: string;
  /**
   * Name of the hostingEnvironment (App Service Environment) (read only)
   */
  name?: string;
  /**
   * Resource type of the hostingEnvironment (App Service Environment) (read only)
   */
  type?: string;
}

/**
 * App certificate
 */
export interface Certificate extends Resource {
  /**
   * Friendly name of the certificate
   */
  friendlyName?: string;
  /**
   * Subject name of the certificate
   */
  subjectName?: string;
  /**
   * Host names the certificate applies to
   */
  hostNames?: string[];
  /**
   * Pfx blob
   */
  pfxBlob?: string;
  /**
   * App name
   */
  siteName?: string;
  /**
   * Self link
   */
  selfLink?: string;
  /**
   * Certificate issuer
   */
  issuer?: string;
  /**
   * Certificate issue Date
   */
  issueDate?: Date;
  /**
   * Certificate expiration date
   */
  expirationDate?: Date;
  /**
   * Certificate password
   */
  password?: string;
  /**
   * Certificate thumbprint
   */
  thumbprint?: string;
  /**
   * Is the certificate valid?
   */
  valid?: boolean;
  /**
   * Raw bytes of .cer file
   */
  cerBlob?: string;
  /**
   * Public key hash
   */
  publicKeyHash?: string;
  /**
   * Specification for the hosting environment (App Service Environment) to use for the certificate
   */
  hostingEnvironmentProfile?: HostingEnvironmentProfile;
}

/**
 * Certificate signing request object
 */
export interface Csr extends Resource {
  /**
   * Name used to locate CSR object
   */
  csrName?: string;
  /**
   * Distinguished name of certificate to be created
   */
  distinguishedName?: string;
  /**
   * Actual CSR string created
   */
  csrString?: string;
  /**
   * PFX certificate of created certificate
   */
  pfxBlob?: string;
  /**
   * PFX password
   */
  password?: string;
  /**
   * Hash of the certificates public key
   */
  publicKeyHash?: string;
  /**
   * Hosting environment
   */
  hostingEnvironment?: string;
}

/**
 * A mobile service
 */
export interface ClassicMobileService extends Resource {
  /**
   * Name of the mobile service
   */
  classicMobileServiceName?: string;
}

/**
 * Address information for domain registration
 */
export interface Address {
  /**
   * Address 1
   */
  address1?: string;
  /**
   * Address 2
   */
  address2?: string;
  /**
   * City
   */
  city?: string;
  /**
   * Country
   */
  country?: string;
  /**
   * Postal code
   */
  postalCode?: string;
  /**
   * State
   */
  state?: string;
}

/**
 * Contact information for domain registration. If 'Domain Privacy' option is not selected then the
 * contact information will be made publicly available through the Whois directories as per ICANN
 * requirements.
 */
export interface Contact {
  /**
   * Mailing address
   */
  addressMailing?: Address;
  /**
   * Email address
   */
  email?: string;
  /**
   * Fax number
   */
  fax?: string;
  /**
   * Job title
   */
  jobTitle?: string;
  /**
   * First name
   */
  nameFirst?: string;
  /**
   * Last name
   */
  nameLast?: string;
  /**
   * Middle name
   */
  nameMiddle?: string;
  /**
   * Organization
   */
  organization?: string;
  /**
   * Phone number
   */
  phone?: string;
}

/**
 * Details of a hostname derived from a domain
 */
export interface HostName {
  /**
   * Name of the hostname
   */
  name?: string;
  /**
   * List of sites the hostname is assigned to. This list will have more than one site only if the
   * hostname is pointing to a Traffic Manager
   */
  siteNames?: string[];
  /**
   * Name of the Azure resource the hostname is assigned to. If it is assigned to a traffic manager
   * then it will be the traffic manager name otherwise it will be the website name
   */
  azureResourceName?: string;
  /**
   * Type of the Azure resource the hostname is assigned to. Possible values include: 'Website',
   * 'TrafficManager'
   */
  azureResourceType?: AzureResourceType;
  /**
   * Type of the Dns record. Possible values include: 'CName', 'A'
   */
  customHostNameDnsRecordType?: CustomHostNameDnsRecordType;
  /**
   * Type of the hostname. Possible values include: 'Verified', 'Managed'
   */
  hostNameType?: HostNameType;
}

/**
 * Domain purchase consent object representing acceptance of applicable legal agreements
 */
export interface DomainPurchaseConsent {
  /**
   * List of applicable legal agreement keys. This list can be retrieved using ListLegalAgreements
   * Api under TopLevelDomain resource
   */
  agreementKeys?: string[];
  /**
   * Client IP address
   */
  agreedBy?: string;
  /**
   * Timestamp when the agreements were accepted
   */
  agreedAt?: Date;
}

/**
 * Represents a domain
 */
export interface Domain extends Resource {
  /**
   * Admin contact information
   */
  contactAdmin?: Contact;
  /**
   * Billing contact information
   */
  contactBilling?: Contact;
  /**
   * Registrant contact information
   */
  contactRegistrant?: Contact;
  /**
   * Technical contact information
   */
  contactTech?: Contact;
  /**
   * Domain registration status. Possible values include: 'Active', 'Awaiting', 'Cancelled',
   * 'Confiscated', 'Disabled', 'Excluded', 'Expired', 'Failed', 'Held', 'Locked', 'Parked',
   * 'Pending', 'Reserved', 'Reverted', 'Suspended', 'Transferred', 'Unknown', 'Unlocked',
   * 'Unparked', 'Updated', 'JsonConverterFailed'
   */
  registrationStatus?: DomainStatus;
  /**
   * Domain provisioning state. Possible values include: 'Succeeded', 'Failed', 'Canceled',
   * 'InProgress', 'Deleting'
   */
  provisioningState?: ProvisioningState;
  /**
   * Name servers
   */
  nameServers?: string[];
  /**
   * If true then domain privacy is enabled for this domain
   */
  privacy?: boolean;
  /**
   * Domain creation timestamp
   */
  createdTime?: Date;
  /**
   * Domain expiration timestamp
   */
  expirationTime?: Date;
  /**
   * Timestamp when the domain was renewed last time
   */
  lastRenewedTime?: Date;
  /**
   * If true then domain will renewed automatically
   */
  autoRenew?: boolean;
  /**
   * If true then Azure can assign this domain to Web Apps. This value will be true if domain
   * registration status is active and it is hosted on name servers Azure has programmatic access
   * to
   */
  readyForDnsRecordManagement?: boolean;
  /**
   * All hostnames derived from the domain and assigned to Azure resources
   */
  managedHostNames?: HostName[];
  /**
   * Legal agreement consent
   */
  consent?: DomainPurchaseConsent;
  /**
   * Reasons why domain is not renewable
   */
  domainNotRenewableReasons?: string[];
}

/**
 * Represents user credentials used for publishing activity
 */
export interface User extends Resource {
  /**
   * Username (internal)
   */
  userName?: string;
  /**
   * Username used for publishing
   */
  publishingUserName?: string;
  /**
   * Password used for publishing
   */
  publishingPassword?: string;
  /**
   * Service Control Manager URI, including username and password
   */
  scmUri?: string;
}

/**
 * Geographical region
 */
export interface GeoRegion extends Resource {
  /**
   * Region name
   */
  geoRegionName?: string;
  /**
   * Region description
   */
  description?: string;
  /**
   * Display name for region
   */
  displayName?: string;
}

/**
 * App Service Plan Model
 */
export interface ServerFarmWithRichSku extends Resource {
  /**
   * Name for the App Service Plan
   */
  serverFarmWithRichSkuName?: string;
  /**
   * Target worker tier assigned to the App Service Plan
   */
  workerTierName?: string;
  /**
   * App Service Plan Status. Possible values include: 'Ready', 'Pending'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status: StatusOptions;
  /**
   * App Service Plan Subscription
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscription?: string;
  /**
   * App Service Plan administration site
   */
  adminSiteName?: string;
  /**
   * Specification for the hosting environment (App Service Environment) to use for the App Service
   * Plan
   */
  hostingEnvironmentProfile?: HostingEnvironmentProfile;
  /**
   * Maximum number of instances that can be assigned to this App Service Plan
   */
  maximumNumberOfWorkers?: number;
  /**
   * Geographical location for the App Service Plan
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly geoRegion?: string;
  /**
   * If True apps assigned to this App Service Plan can be scaled independently
   * If False apps assigned to this App Service Plan will scale to all instances of the plan
   */
  perSiteScaling?: boolean;
  /**
   * Number of web apps assigned to this App Service Plan
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly numberOfSites?: number;
  /**
   * Resource group of the server farm
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceGroup?: string;
  /**
   * Enables creation of a Linux App Service Plan
   */
  reserved?: boolean;
  sku?: SkuDescription;
}

/**
 * Object that represents a SSL-enabled host name.
 */
export interface HostNameSslState {
  /**
   * Host name
   */
  name?: string;
  /**
   * SSL type. Possible values include: 'Disabled', 'SniEnabled', 'IpBasedEnabled'
   */
  sslState: SslState;
  /**
   * Virtual IP address assigned to the host name if IP based SSL is enabled
   */
  virtualIP?: string;
  /**
   * SSL cert thumbprint
   */
  thumbprint?: string;
  /**
   * Set this flag to update existing host name
   */
  toUpdate?: boolean;
}

/**
 * Name value pair
 */
export interface NameValuePair {
  /**
   * Pair name
   */
  name?: string;
  /**
   * Pair value
   */
  value?: string;
}

/**
 * Represents database connection string information
 */
export interface ConnStringInfo {
  /**
   * Name of connection string
   */
  name?: string;
  /**
   * Connection string value
   */
  connectionString?: string;
  /**
   * Type of database. Possible values include: 'MySql', 'SQLServer', 'SQLAzure', 'Custom'
   */
  type: DatabaseServerType;
}

/**
 * The IIS handler mappings used to define which handler processes HTTP requests with certain
 * extension.
 * For example it is used to configure php-cgi.exe process to handle all HTTP requests with *.php
 * extension.
 */
export interface HandlerMapping {
  /**
   * Requests with this extension will be handled using the specified FastCGI application.
   */
  extension?: string;
  /**
   * The absolute path to the FastCGI application.
   */
  scriptProcessor?: string;
  /**
   * Command-line arguments to be passed to the script processor.
   */
  argumentsProperty?: string;
}

/**
 * An interface representing VirtualDirectory.
 */
export interface VirtualDirectory {
  virtualPath?: string;
  physicalPath?: string;
}

/**
 * An interface representing VirtualApplication.
 */
export interface VirtualApplication {
  virtualPath?: string;
  physicalPath?: string;
  preloadEnabled?: boolean;
  virtualDirectories?: VirtualDirectory[];
}

/**
 * Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to
 * gradually change routing % based on performance
 */
export interface RampUpRule {
  /**
   * Hostname of a slot to which the traffic will be redirected if decided to. E.g.
   * mysite-stage.azurewebsites.net
   */
  actionHostName?: string;
  /**
   * Percentage of the traffic which will be redirected to
   * {Microsoft.Web.Hosting.Administration.RampUpRule.ActionHostName}
   */
  reroutePercentage?: number;
  /**
   * [Optional] In auto ramp up scenario this is the step to add/remove from
   * {Microsoft.Web.Hosting.Administration.RampUpRule.ReroutePercentage} until it reaches
   * {Microsoft.Web.Hosting.Administration.RampUpRule.MinReroutePercentage} or
   * {Microsoft.Web.Hosting.Administration.RampUpRule.MaxReroutePercentage}. Site metrics are
   * checked every N minutes specified in
   * {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeIntervalInMinutes}.
   * Custom decision algorithm can be provided in TiPCallback site extension which Url can be
   * specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeDecisionCallbackUrl}
   */
  changeStep?: number;
  /**
   * [Optional] Specifies interval in minutes to reevaluate ReroutePercentage
   */
  changeIntervalInMinutes?: number;
  /**
   * [Optional] Specifies lower boundary above which ReroutePercentage will stay.
   */
  minReroutePercentage?: number;
  /**
   * [Optional] Specifies upper boundary below which ReroutePercentage will stay.
   */
  maxReroutePercentage?: number;
  /**
   * Custom decision algorithm can be provided in TiPCallback site extension which Url can be
   * specified. See TiPCallback site extension for the scaffold and contracts.
   * https://www.siteextensions.net/packages/TiPCallback/
   */
  changeDecisionCallbackUrl?: string;
  /**
   * Name of the routing rule. The recommended name would be to point to the slot which will
   * receive the traffic in the experiment.
   */
  name?: string;
}

/**
 * Class containing Routing in production experiments
 */
export interface Experiments {
  /**
   * List of {Microsoft.Web.Hosting.Administration.RampUpRule} objects.
   */
  rampUpRules?: RampUpRule[];
}

/**
 * Represents metric limits set on a web app.
 */
export interface SiteLimits {
  /**
   * Maximum allowed CPU usage percentage
   */
  maxPercentageCpu?: number;
  /**
   * Maximum allowed memory usage in MB
   */
  maxMemoryInMb?: number;
  /**
   * Maximum allowed disk size usage in MB
   */
  maxDiskSizeInMb?: number;
}

/**
 * RequestsBasedTrigger
 */
export interface RequestsBasedTrigger {
  /**
   * Count
   */
  count?: number;
  /**
   * TimeInterval
   */
  timeInterval?: string;
}

/**
 * StatusCodeBasedTrigger
 */
export interface StatusCodesBasedTrigger {
  /**
   * HTTP status code
   */
  status?: number;
  /**
   * SubStatus
   */
  subStatus?: number;
  /**
   * Win32 error code
   */
  win32Status?: number;
  /**
   * Count
   */
  count?: number;
  /**
   * TimeInterval
   */
  timeInterval?: string;
}

/**
 * SlowRequestsBasedTrigger
 */
export interface SlowRequestsBasedTrigger {
  /**
   * TimeTaken
   */
  timeTaken?: string;
  /**
   * Count
   */
  count?: number;
  /**
   * TimeInterval
   */
  timeInterval?: string;
}

/**
 * AutoHealTriggers - describes the triggers for auto-heal.
 */
export interface AutoHealTriggers {
  /**
   * Requests - Defines a rule based on total requests
   */
  requests?: RequestsBasedTrigger;
  /**
   * PrivateBytesInKB - Defines a rule based on private bytes
   */
  privateBytesInKB?: number;
  /**
   * StatusCodes - Defines a rule based on status codes
   */
  statusCodes?: StatusCodesBasedTrigger[];
  /**
   * SlowRequests - Defines a rule based on request execution time
   */
  slowRequests?: SlowRequestsBasedTrigger;
}

/**
 * AutoHealCustomAction - Describes the custom action to be executed
 * when an auto heal rule is triggered.
 */
export interface AutoHealCustomAction {
  /**
   * Executable to be run
   */
  exe?: string;
  /**
   * Parameters for the executable
   */
  parameters?: string;
}

/**
 * AutoHealActions - Describes the actions which can be
 * taken by the auto-heal module when a rule is triggered.
 */
export interface AutoHealActions {
  /**
   * ActionType - predefined action to be taken. Possible values include: 'Recycle', 'LogEvent',
   * 'CustomAction'
   */
  actionType: AutoHealActionType;
  /**
   * CustomAction - custom action to be taken
   */
  customAction?: AutoHealCustomAction;
  /**
   * MinProcessExecutionTime - minimum time the process must execute
   * before taking the action
   */
  minProcessExecutionTime?: string;
}

/**
 * AutoHealRules - describes the rules which can be defined for auto-heal
 */
export interface AutoHealRules {
  /**
   * Triggers - Conditions that describe when to execute the auto-heal actions
   */
  triggers?: AutoHealTriggers;
  /**
   * Actions - Actions to be executed when a rule is triggered
   */
  actions?: AutoHealActions;
}

/**
 * Cross-Origin Resource Sharing (CORS) settings for the web app.
 */
export interface CorsSettings {
  /**
   * Gets or sets the list of origins that should be allowed to make cross-origin
   * calls (for example: http://example.com:12345). Use "*" to allow all.
   */
  allowedOrigins?: string[];
}

/**
 * Information about the formal API definition for the web app.
 */
export interface ApiDefinitionInfo {
  /**
   * The URL of the API definition.
   */
  url?: string;
}

/**
 * Represents an ip security restriction on a web app.
 */
export interface IpSecurityRestriction {
  /**
   * IP address the security restriction is valid for
   */
  ipAddress?: string;
  /**
   * Subnet mask for the range of IP addresses the restriction is valid for
   */
  subnetMask?: string;
}

/**
 * Configuration of Azure web site
 */
export interface SiteConfig extends Resource {
  /**
   * Number of workers
   */
  numberOfWorkers?: number;
  /**
   * Default documents
   */
  defaultDocuments?: string[];
  /**
   * Net Framework Version
   */
  netFrameworkVersion?: string;
  /**
   * Version of PHP
   */
  phpVersion?: string;
  /**
   * Version of Python
   */
  pythonVersion?: string;
  /**
   * Version of Node
   */
  nodeVersion?: string;
  /**
   * Enable request tracing
   */
  requestTracingEnabled?: boolean;
  /**
   * Request tracing expiration time
   */
  requestTracingExpirationTime?: Date;
  /**
   * Remote Debugging Enabled
   */
  remoteDebuggingEnabled?: boolean;
  /**
   * Remote Debugging Version
   */
  remoteDebuggingVersion?: string;
  /**
   * HTTP logging Enabled
   */
  httpLoggingEnabled?: boolean;
  /**
   * HTTP Logs Directory size limit
   */
  logsDirectorySizeLimit?: number;
  /**
   * Detailed error logging enabled
   */
  detailedErrorLoggingEnabled?: boolean;
  /**
   * Publishing user name
   */
  publishingUsername?: string;
  /**
   * Publishing password
   */
  publishingPassword?: string;
  /**
   * Application Settings
   */
  appSettings?: NameValuePair[];
  /**
   * Site Metadata
   */
  metadata?: NameValuePair[];
  /**
   * Connection strings
   */
  connectionStrings?: ConnStringInfo[];
  /**
   * Handler mappings
   */
  handlerMappings?: HandlerMapping[];
  /**
   * Document root
   */
  documentRoot?: string;
  /**
   * SCM type
   */
  scmType?: string;
  /**
   * Use 32 bit worker process
   */
  use32BitWorkerProcess?: boolean;
  /**
   * Web socket enabled.
   */
  webSocketsEnabled?: boolean;
  /**
   * Always On
   */
  alwaysOn?: boolean;
  /**
   * Java version
   */
  javaVersion?: string;
  /**
   * Java container
   */
  javaContainer?: string;
  /**
   * Java container version
   */
  javaContainerVersion?: string;
  /**
   * App Command Line to launch
   */
  appCommandLine?: string;
  /**
   * Managed pipeline mode. Possible values include: 'Integrated', 'Classic'
   */
  managedPipelineMode?: ManagedPipelineMode;
  /**
   * Virtual applications
   */
  virtualApplications?: VirtualApplication[];
  /**
   * Site load balancing. Possible values include: 'WeightedRoundRobin', 'LeastRequests',
   * 'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'
   */
  loadBalancing?: SiteLoadBalancing;
  /**
   * This is work around for polymorphic types
   */
  experiments?: Experiments;
  /**
   * Site limits
   */
  limits?: SiteLimits;
  /**
   * Auto heal enabled
   */
  autoHealEnabled?: boolean;
  /**
   * Auto heal rules
   */
  autoHealRules?: AutoHealRules;
  /**
   * Tracing options
   */
  tracingOptions?: string;
  /**
   * Vnet name
   */
  vnetName?: string;
  /**
   * Cross-Origin Resource Sharing (CORS) settings.
   */
  cors?: CorsSettings;
  /**
   * Information about the formal API definition for the web app.
   */
  apiDefinition?: ApiDefinitionInfo;
  /**
   * Auto swap slot name
   */
  autoSwapSlotName?: string;
  /**
   * Local mysql enabled
   */
  localMySqlEnabled?: boolean;
  /**
   * Ip Security restrictions
   */
  ipSecurityRestrictions?: IpSecurityRestriction[];
}

/**
 * Represents information needed for cloning operation
 */
export interface CloningInfo {
  /**
   * Correlation Id of cloning operation. This id ties multiple cloning operations
   * together to use the same snapshot
   */
  correlationId?: string;
  /**
   * Overwrite destination web app
   */
  overwrite?: boolean;
  /**
   * If true, clone custom hostnames from source web app
   */
  cloneCustomHostNames?: boolean;
  /**
   * Clone source control from source web app
   */
  cloneSourceControl?: boolean;
  /**
   * ARM resource id of the source web app. Web app resource id is of the form
   * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}
   * for production slots and
   * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}
   * for other slots
   */
  sourceWebAppId?: string;
  /**
   * Hosting environment
   */
  hostingEnvironment?: string;
  /**
   * Application settings overrides for cloned web app. If specified these settings will override
   * the settings cloned
   * from source web app. If not specified, application settings from source web app are retained.
   */
  appSettingsOverrides?: { [propertyName: string]: string };
  /**
   * If specified configure load balancing for source and clone site
   */
  configureLoadBalancing?: boolean;
  /**
   * ARM resource id of the traffic manager profile to use if it exists. Traffic manager resource
   * id is of the form
   * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}
   */
  trafficManagerProfileId?: string;
  /**
   * Name of traffic manager profile to create. This is only needed if traffic manager profile does
   * not already exist
   */
  trafficManagerProfileName?: string;
}

/**
 * Represents a web app
 */
export interface Site extends Resource {
  /**
   * Name of web app
   */
  siteName?: string;
  /**
   * State of the web app
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: string;
  /**
   * Hostnames associated with web app
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostNames?: string[];
  /**
   * Name of repository site
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly repositorySiteName?: string;
  /**
   * State indicating whether web app has exceeded its quota usage. Possible values include:
   * 'Normal', 'Exceeded'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly usageState: UsageState;
  /**
   * True if the site is enabled; otherwise, false. Setting this  value to false disables the site
   * (takes the site off line).
   */
  enabled?: boolean;
  /**
   * Hostnames for the web app that are enabled. Hostnames need to be assigned and enabled. If some
   * hostnames are assigned but not enabled
   * the app is not served on those hostnames
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly enabledHostNames?: string[];
  /**
   * Management information availability state for the web app. Possible values are Normal or
   * Limited.
   * Normal means that the site is running correctly and that management information for the site
   * is available.
   * Limited means that only partial management information for the site is available and that
   * detailed site information is unavailable. Possible values include: 'Normal', 'Limited',
   * 'DisasterRecoveryMode'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly availabilityState: SiteAvailabilityState;
  /**
   * Hostname SSL states are  used to manage the SSL bindings for site's hostnames.
   */
  hostNameSslStates?: HostNameSslState[];
  serverFarmId?: string;
  /**
   * Last time web app was modified in UTC
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModifiedTimeUtc?: Date;
  /**
   * Configuration of web app
   */
  siteConfig?: SiteConfig;
  /**
   * Read-only list of Azure Traffic manager hostnames associated with web app
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly trafficManagerHostNames?: string[];
  /**
   * If set indicates whether web app is deployed as a premium app
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly premiumAppDeployed?: boolean;
  /**
   * If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is
   * false.
   */
  scmSiteAlsoStopped?: boolean;
  /**
   * Read-only property that specifies which slot this app will swap into
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetSwapSlot?: string;
  /**
   * Specification for the hosting environment (App Service Environment) to use for the web app
   */
  hostingEnvironmentProfile?: HostingEnvironmentProfile;
  microService?: string;
  /**
   * Name of gateway app associated with web app
   */
  gatewaySiteName?: string;
  /**
   * Specifies if the client affinity is enabled when load balancing http request for multiple
   * instances of the web app
   */
  clientAffinityEnabled?: boolean;
  /**
   * Specifies if the client certificate is enabled for the web app
   */
  clientCertEnabled?: boolean;
  /**
   * Specifies if the public hostnames are disabled the web app.
   * If set to true the app is only accessible via API Management process
   */
  hostNamesDisabled?: boolean;
  /**
   * List of comma separated IP addresses that this web app uses for outbound connections. Those
   * can be used when configuring firewall rules for databases accessed by this web app.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly outboundIpAddresses?: string;
  /**
   * Size of a function container
   */
  containerSize?: number;
  /**
   * Maximum number of workers
   * This only applies to function container
   */
  maxNumberOfWorkers?: number;
  /**
   * This is only valid for web app creation. If specified, web app is cloned from
   * a source web app
   */
  cloningInfo?: CloningInfo;
  /**
   * Resource group web app belongs to
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceGroup?: string;
  /**
   * Site is a default container
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isDefaultContainer?: boolean;
  /**
   * Default hostname of the web app
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultHostName?: string;
}

/**
 * An interface representing SitePropertiesModel.
 */
export interface SitePropertiesModel {
  metadata?: NameValuePair[];
  properties?: NameValuePair[];
  appSettings?: NameValuePair[];
}

/**
 * Routing rules for TiP
 */
export interface RoutingRule {
  /**
   * Name of the routing rule. The recommended name would be to point to the slot which will
   * receive the traffic in the experiment.
   */
  name?: string;
}

/**
 * Configuration settings for the Azure App Service Authentication / Authorization feature.
 */
export interface SiteAuthSettings {
  /**
   * Gets or sets a value indicating whether the Authentication / Authorization feature is enabled
   * for the current app.
   */
  enabled?: boolean;
  /**
   * Gets or sets the relative path prefix used by platform HTTP APIs.
   * Changing this value is not recommended except for compatibility reasons.
   */
  httpApiPrefixPath?: string;
  /**
   * Gets or sets the action to take when an unauthenticated client attempts to access the app.
   * Possible values include: 'RedirectToLoginPage', 'AllowAnonymous'
   */
  unauthenticatedClientAction?: UnauthenticatedClientAction;
  /**
   * Gets or sets a value indicating whether to durably store platform-specific security tokens
   * obtained during login flows. This capability is disabled by default.
   */
  tokenStoreEnabled?: boolean;
  /**
   * Gets or sets a collection of external URLs that can be redirected to as part of logging in
   * or logging out of the web app. Note that the query string part of the URL is ignored.
   * This is an advanced setting typically only needed by Windows Store application backends.
   * Note that URLs within the current domain are always implicitly allowed.
   */
  allowedExternalRedirectUrls?: string[];
  /**
   * Gets or sets the default authentication provider to use when multiple providers are
   * configured.
   * This setting is only needed if multiple providers are configured and the unauthenticated
   * client
   * action is set to "RedirectToLoginPage". Possible values include: 'AzureActiveDirectory',
   * 'Facebook', 'Google', 'MicrosoftAccount', 'Twitter'
   */
  defaultProvider?: BuiltInAuthenticationProvider;
  /**
   * Gets or sets the number of hours after session token expiration that a session token can be
   * used to
   * call the token refresh API. The default is 72 hours.
   */
  tokenRefreshExtensionHours?: number;
  /**
   * Gets or sets the Client ID of this relying party application, known as the client_id.
   * This setting is required for enabling OpenID Connection authentication with Azure Active
   * Directory or
   * other 3rd party OpenID Connect providers.
   * More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
   */
  clientId?: string;
  /**
   * Gets or sets the Client Secret of this relying party application (in Azure Active Directory,
   * this is also referred to as the Key).
   * This setting is optional. If no client secret is configured, the OpenID Connect implicit auth
   * flow is used to authenticate end users.
   * Otherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.
   * More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
   */
  clientSecret?: string;
  /**
   * Gets or sets the OpenID Connect Issuer URI that represents the entity which issues access
   * tokens for this application.
   * When using Azure Active Directory, this value is the URI of the directory tenant, e.g.
   * https://sts.windows.net/{tenant-guid}/.
   * This URI is a case-sensitive identifier for the token issuer.
   * More information on OpenID Connect Discovery:
   * http://openid.net/specs/openid-connect-discovery-1_0.html
   */
  issuer?: string;
  /**
   * Gets or sets a list of allowed audience values to consider when validating JWTs issued by
   * Azure Active Directory. Note that the
   * {Microsoft.Web.Hosting.Administration.SiteAuthSettings.ClientId} value is always considered an
   * allowed audience, regardless of this setting.
   */
  allowedAudiences?: string[];
  /**
   * Gets or sets a list of login parameters to send to the OpenID Connect authorization endpoint
   * when
   * a user logs in. Each parameter must be in the form "key=value".
   */
  additionalLoginParams?: string[];
  aadClientId?: string;
  openIdIssuer?: string;
  /**
   * Gets or sets the OpenID Connect Client ID for the Google web application.
   * This setting is required for enabling Google Sign-In.
   * Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
   */
  googleClientId?: string;
  /**
   * Gets or sets the client secret associated with the Google web application.
   * This setting is required for enabling Google Sign-In.
   * Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
   */
  googleClientSecret?: string;
  /**
   * Gets or sets the OAuth 2.0 scopes that will be requested as part of Google Sign-In
   * authentication.
   * This setting is optional. If not specified, "openid", "profile", and "email" are used as
   * default scopes.
   * Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
   */
  googleOAuthScopes?: string[];
  /**
   * Gets or sets the App ID of the Facebook app used for login.
   * This setting is required for enabling Facebook Login.
   * Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
   */
  facebookAppId?: string;
  /**
   * Gets or sets the App Secret of the Facebook app used for Facebook Login.
   * This setting is required for enabling Facebook Login.
   * Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
   */
  facebookAppSecret?: string;
  /**
   * Gets or sets the OAuth 2.0 scopes that will be requested as part of Facebook Login
   * authentication.
   * This setting is optional.
   * Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
   */
  facebookOAuthScopes?: string[];
  /**
   * Gets or sets the OAuth 1.0a consumer key of the Twitter application used for sign-in.
   * This setting is required for enabling Twitter Sign-In.
   * Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
   */
  twitterConsumerKey?: string;
  /**
   * Gets or sets the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
   * This setting is required for enabling Twitter Sign-In.
   * Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
   */
  twitterConsumerSecret?: string;
  /**
   * Gets or sets the OAuth 2.0 client ID that was created for the app used for authentication.
   * This setting is required for enabling Microsoft Account authentication.
   * Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
   */
  microsoftAccountClientId?: string;
  /**
   * Gets or sets the OAuth 2.0 client secret that was created for the app used for authentication.
   * This setting is required for enabling Microsoft Account authentication.
   * Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
   */
  microsoftAccountClientSecret?: string;
  /**
   * Gets or sets the OAuth 2.0 scopes that will be requested as part of Microsoft Account
   * authentication.
   * This setting is optional. If not specified, "wl.basic" is used as the default scope.
   * Microsoft Account Scopes and permissions documentation:
   * https://msdn.microsoft.com/en-us/library/dn631845.aspx
   */
  microsoftAccountOAuthScopes?: string[];
}

/**
 * Specification for using a virtual network
 */
export interface VirtualNetworkProfile {
  /**
   * Resource id of the virtual network
   */
  id?: string;
  /**
   * Name of the virtual network (read-only)
   */
  name?: string;
  /**
   * Resource type of the virtual network (read-only)
   */
  type?: string;
  /**
   * Subnet within the virtual network
   */
  subnet?: string;
}

/**
 * Worker pool of a hostingEnvironment (App Service Environment)
 */
export interface WorkerPool extends Resource {
  /**
   * Worker size id for referencing this worker pool
   */
  workerSizeId?: number;
  /**
   * Shared or dedicated web app hosting. Possible values include: 'Shared', 'Dedicated', 'Dynamic'
   */
  computeMode?: ComputeModeOptions;
  /**
   * VM size of the worker pool instances
   */
  workerSize?: string;
  /**
   * Number of instances in the worker pool
   */
  workerCount?: number;
  /**
   * Names of all instances in the worker pool (read only)
   */
  instanceNames?: string[];
  sku?: SkuDescription;
}

/**
 * Class that represents a VIP mapping
 */
export interface VirtualIPMapping {
  /**
   * Virtual IP address
   */
  virtualIP?: string;
  /**
   * Internal HTTP port
   */
  internalHttpPort?: number;
  /**
   * Internal HTTPS port
   */
  internalHttpsPort?: number;
  /**
   * Is VIP mapping in use
   */
  inUse?: boolean;
}

/**
 * Class containing stamp capacity information
 */
export interface StampCapacity {
  /**
   * Name of the stamp
   */
  name?: string;
  /**
   * Available capacity (# of machines, bytes of storage etc...)
   */
  availableCapacity?: number;
  /**
   * Total capacity (# of machines, bytes of storage etc...)
   */
  totalCapacity?: number;
  /**
   * Name of the unit
   */
  unit?: string;
  /**
   * Shared/Dedicated workers. Possible values include: 'Shared', 'Dedicated', 'Dynamic'
   */
  computeMode?: ComputeModeOptions;
  /**
   * Size of the machines. Possible values include: 'Default', 'Small', 'Medium', 'Large'
   */
  workerSize?: WorkerSizeOptions;
  /**
   * Size Id of machines:
   * 0 - Small
   * 1 - Medium
   * 2 - Large
   */
  workerSizeId?: number;
  /**
   * If true it includes basic sites
   * Basic sites are not used for capacity allocation.
   */
  excludeFromCapacityAllocation?: boolean;
  /**
   * Is capacity applicable for all sites?
   */
  isApplicableForAllComputeModes?: boolean;
  /**
   * Shared or Dedicated
   */
  siteMode?: string;
}

/**
 * An interface representing NetworkAccessControlEntry.
 */
export interface NetworkAccessControlEntry {
  /**
   * Possible values include: 'Permit', 'Deny'
   */
  action?: AccessControlEntryAction;
  description?: string;
  order?: number;
  remoteSubnet?: string;
}

/**
 * Description of an hostingEnvironment (App Service Environment)
 */
export interface HostingEnvironment extends Resource {
  /**
   * Name of the hostingEnvironment (App Service Environment)
   */
  hostingEnvironmentName?: string;
  /**
   * Location of the hostingEnvironment (App Service Environment), e.g. "West US"
   */
  hostingEnvironmentLocation?: string;
  /**
   * Provisioning state of the hostingEnvironment (App Service Environment). Possible values
   * include: 'Succeeded', 'Failed', 'Canceled', 'InProgress', 'Deleting'
   */
  provisioningState?: ProvisioningState;
  /**
   * Current status of the hostingEnvironment (App Service Environment). Possible values include:
   * 'Preparing', 'Ready', 'Scaling', 'Deleting'
   */
  status: HostingEnvironmentStatus;
  /**
   * Name of the hostingEnvironment's (App Service Environment) virtual network
   */
  vnetName?: string;
  /**
   * Resource group of the hostingEnvironment's (App Service Environment) virtual network
   */
  vnetResourceGroupName?: string;
  /**
   * Subnet of the hostingEnvironment's (App Service Environment) virtual network
   */
  vnetSubnetName?: string;
  /**
   * Description of the hostingEnvironment's (App Service Environment) virtual network
   */
  virtualNetwork?: VirtualNetworkProfile;
  /**
   * Specifies which endpoints to serve internally in the hostingEnvironment's (App Service
   * Environment) VNET. Possible values include: 'None', 'Web', 'Publishing'
   */
  internalLoadBalancingMode?: InternalLoadBalancingMode;
  /**
   * Front-end VM size, e.g. "Medium", "Large"
   */
  multiSize?: string;
  /**
   * Number of front-end instances
   */
  multiRoleCount?: number;
  /**
   * Description of worker pools with worker size ids, VM sizes, and number of workers in each pool
   */
  workerPools?: WorkerPool[];
  /**
   * Number of IP SSL addresses reserved for this hostingEnvironment (App Service Environment)
   */
  ipsslAddressCount?: number;
  /**
   * Edition of the metadata database for the hostingEnvironment (App Service Environment) e.g.
   * "Standard"
   */
  databaseEdition?: string;
  /**
   * Service objective of the metadata database for the hostingEnvironment (App Service
   * Environment) e.g. "S0"
   */
  databaseServiceObjective?: string;
  /**
   * Number of upgrade domains of this hostingEnvironment (App Service Environment)
   */
  upgradeDomains?: number;
  /**
   * Subscription of the hostingEnvironment (App Service Environment)
   */
  subscriptionId?: string;
  /**
   * DNS suffix of the hostingEnvironment (App Service Environment)
   */
  dnsSuffix?: string;
  /**
   * Last deployment action on this hostingEnvironment (App Service Environment)
   */
  lastAction?: string;
  /**
   * Result of the last deployment action on this hostingEnvironment (App Service Environment)
   */
  lastActionResult?: string;
  /**
   * List of comma separated strings describing which VM sizes are allowed for front-ends
   */
  allowedMultiSizes?: string;
  /**
   * List of comma separated strings describing which VM sizes are allowed for workers
   */
  allowedWorkerSizes?: string;
  /**
   * Maximum number of VMs in this hostingEnvironment (App Service Environment)
   */
  maximumNumberOfMachines?: number;
  /**
   * Description of IP SSL mapping for this hostingEnvironment (App Service Environment)
   */
  vipMappings?: VirtualIPMapping[];
  /**
   * Current total, used, and available worker capacities
   */
  environmentCapacities?: StampCapacity[];
  /**
   * Access control list for controlling traffic to the hostingEnvironment (App Service
   * Environment)
   */
  networkAccessControlList?: NetworkAccessControlEntry[];
  /**
   * True/false indicating whether the hostingEnvironment (App Service Environment) is healthy
   */
  environmentIsHealthy?: boolean;
  /**
   * Detailed message about with results of the last check of the hostingEnvironment (App Service
   * Environment)
   */
  environmentStatus?: string;
  /**
   * Resource group of the hostingEnvironment (App Service Environment)
   */
  resourceGroup?: string;
  /**
   * Api Management Account associated with this Hosting Environment
   */
  apiManagementAccountId?: string;
  /**
   * True/false indicating whether the hostingEnvironment is suspended. The environment can be
   * suspended e.g. when the management endpoint is no longer available
   * (most likely because NSG blocked the incoming traffic)
   */
  suspended?: boolean;
  /**
   * Custom settings for changing the behavior of the hosting environment
   */
  clusterSettings?: NameValuePair[];
}

/**
 * Description of a managed hosting environment
 */
export interface ManagedHostingEnvironment extends Resource {
  /**
   * Name of the managed hosting environment
   */
  managedHostingEnvironmentName?: string;
  /**
   * Location of the managed hosting environment e.g. "West US"
   */
  managedHostingEnvironmentLocation?: string;
  /**
   * Current status of the managed hosting environment. Possible values include: 'Preparing',
   * 'Ready', 'Deleting'
   */
  status: ManagedHostingEnvironmentStatus;
  /**
   * Description of the managed hosting environment's virtual network
   */
  virtualNetwork?: VirtualNetworkProfile;
  /**
   * Number of ip ssl addresses reserved for the managed hosting environment
   */
  ipsslAddressCount?: number;
  /**
   * DNS suffix of the managed hosting environment
   */
  dnsSuffix?: string;
  /**
   * Subscription of the managed hosting environment (read only)
   */
  subscriptionId?: string;
  /**
   * Resource group of the managed hosting environment (read only)
   */
  resourceGroup?: string;
  /**
   * True/false indicating whether the managed hosting environment is healthy
   */
  environmentIsHealthy?: boolean;
  /**
   * Detailed message about with results of the last check of the managed hosting environment
   */
  environmentStatus?: string;
  /**
   * True/false indicating whether the managed hosting environment is suspended. The environment
   * can be suspended e.g. when the management endpoint is no longer available
   * (most likely because NSG blocked the incoming traffic)
   */
  suspended?: boolean;
  /**
   * Resource id of the api management account associated with this managed hosting environment
   * (read only)
   */
  apiManagementAccount?: string;
}

/**
 * Resource name availability request content
 */
export interface ResourceNameAvailabilityRequest {
  /**
   * Resource name to verify
   */
  name?: string;
  /**
   * Resource type used for verification
   */
  type?: string;
  /**
   * Is fully qualified domain name
   */
  isFqdn?: boolean;
}

/**
 * Describes if a resource name is available
 */
export interface ResourceNameAvailability {
  /**
   * True indicates name is valid and available.  False indicates the name is invalid, unavailable,
   * or both.
   */
  nameAvailable?: boolean;
  /**
   * Required if nameAvailable is false. 'Invalid' indicates the name provided does not match Azure
   * WebApp service’s naming requirements. 'AlreadyExists' indicates that the name is already in
   * use and is therefore unavailable.
   */
  reason?: string;
  message?: string;
}

/**
 * Single sign on request information for domain management
 */
export interface DomainControlCenterSsoRequest {
  /**
   * Url where the single sign on request is to be made
   */
  url?: string;
  /**
   * Post parameter key
   */
  postParameterKey?: string;
  /**
   * Post parameter value. Client should use 'application/x-www-form-urlencoded' encoding for this
   * value.
   */
  postParameterValue?: string;
}

/**
 * Domain registration input for validation Api
 */
export interface DomainRegistrationInput extends Resource {
  /**
   * Name of the domain
   */
  domainRegistrationInputName?: string;
  /**
   * Admin contact information
   */
  contactAdmin?: Contact;
  /**
   * Billing contact information
   */
  contactBilling?: Contact;
  /**
   * Registrant contact information
   */
  contactRegistrant?: Contact;
  /**
   * Technical contact information
   */
  contactTech?: Contact;
  /**
   * Domain registration status. Possible values include: 'Active', 'Awaiting', 'Cancelled',
   * 'Confiscated', 'Disabled', 'Excluded', 'Expired', 'Failed', 'Held', 'Locked', 'Parked',
   * 'Pending', 'Reserved', 'Reverted', 'Suspended', 'Transferred', 'Unknown', 'Unlocked',
   * 'Unparked', 'Updated', 'JsonConverterFailed'
   */
  registrationStatus?: DomainStatus;
  /**
   * Domain provisioning state. Possible values include: 'Succeeded', 'Failed', 'Canceled',
   * 'InProgress', 'Deleting'
   */
  provisioningState?: ProvisioningState;
  /**
   * Name servers
   */
  nameServers?: string[];
  /**
   * If true then domain privacy is enabled for this domain
   */
  privacy?: boolean;
  /**
   * Domain creation timestamp
   */
  createdTime?: Date;
  /**
   * Domain expiration timestamp
   */
  expirationTime?: Date;
  /**
   * Timestamp when the domain was renewed last time
   */
  lastRenewedTime?: Date;
  /**
   * If true then domain will renewed automatically
   */
  autoRenew?: boolean;
  /**
   * If true then Azure can assign this domain to Web Apps. This value will be true if domain
   * registration status is active and it is hosted on name servers Azure has programmatic access
   * to
   */
  readyForDnsRecordManagement?: boolean;
  /**
   * All hostnames derived from the domain and assigned to Azure resources
   */
  managedHostNames?: HostName[];
  /**
   * Legal agreement consent
   */
  consent?: DomainPurchaseConsent;
  /**
   * Reasons why domain is not renewable
   */
  domainNotRenewableReasons?: string[];
}

/**
 * Identifies an object
 */
export interface NameIdentifier {
  /**
   * Name of the object
   */
  name?: string;
}

/**
 * Domain availablility check result
 */
export interface DomainAvailablilityCheckResult {
  /**
   * Name of the domain
   */
  name?: string;
  /**
   * If true then domain can be purchased using CreateDomain Api
   */
  available?: boolean;
  /**
   * Domain type. Possible values include: 'Regular', 'SoftDeleted'
   */
  domainType?: DomainType;
}

/**
 * Domain recommendation search parameters
 */
export interface DomainRecommendationSearchParameters {
  /**
   * Keywords to be used for generating domain recommendations
   */
  keywords?: string;
  /**
   * Maximum number of recommendations
   */
  maxDomainRecommendations?: number;
}

/**
 * Class containing a list of the resources that need to be moved and the resource group they
 * should be moved to
 */
export interface CsmMoveResourceEnvelope {
  targetResourceGroup?: string;
  resources?: string[];
}

/**
 * Diagnostics for a hosting environment (App Service Environment)
 */
export interface HostingEnvironmentDiagnostics {
  /**
   * Name/identifier of the diagnostics
   */
  name?: string;
  /**
   * Diagnostics output
   */
  diagnosicsOutput?: string;
}

/**
 * Describes main public ip address and any extra vips
 */
export interface AddressResponse {
  /**
   * Main public vip
   */
  serviceIpAddress?: string;
  /**
   * VNET internal ip address of the hostingEnvironment (App Service Environment) if it is in
   * internal load-balancing mode
   */
  internalIpAddress?: string;
  /**
   * IP addresses appearing on outbound connections
   */
  outboundIpAddresses?: string[];
  /**
   * Additional vips
   */
  vipMappings?: VirtualIPMapping[];
}

/**
 * Name of a metric for any resource
 */
export interface ResourceMetricName {
  /**
   * metric name value
   */
  value?: string;
  /**
   * Localized metric name value
   */
  localizedValue?: string;
}

/**
 * Value of resource metric
 */
export interface ResourceMetricValue {
  /**
   * Value timestamp
   */
  timeStamp?: string;
  /**
   * Value average
   */
  average?: number;
  /**
   * Value minimum
   */
  minimum?: number;
  /**
   * Value maximum
   */
  maximum?: number;
  /**
   * Value total
   */
  total?: number;
  /**
   * Value count
   */
  count?: number;
}

/**
 * An interface representing KeyValuePairStringString.
 */
export interface KeyValuePairStringString {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly key?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
}

/**
 * Object representing a metric for any resource
 */
export interface ResourceMetric {
  /**
   * Name of metric
   */
  name?: ResourceMetricName;
  /**
   * Metric unit
   */
  unit?: string;
  /**
   * Metric granularity. E.g PT1H, PT5M, P1D
   */
  timeGrain?: string;
  /**
   * Metric start time
   */
  startTime?: Date;
  /**
   * Metric end time
   */
  endTime?: Date;
  /**
   * Metric resource Id
   */
  resourceId?: string;
  /**
   * Metric values
   */
  metricValues?: ResourceMetricValue[];
  /**
   * Properties
   */
  properties?: KeyValuePairStringString[];
}

/**
 * Class representing metrics availability and retention
 */
export interface MetricAvailabilily {
  /**
   * Time grain
   */
  timeGrain?: string;
  /**
   * Retention period for the current
   * {Microsoft.Web.Hosting.Administration.MetricAvailabilily.TimeGrain}
   */
  retention?: string;
}

/**
 * Class representing metadata for the metrics
 */
export interface MetricDefinition extends Resource {
  /**
   * Name of the metric
   */
  metricDefinitionName?: string;
  /**
   * Unit of the metric
   */
  unit?: string;
  /**
   * Primary aggregation type
   */
  primaryAggregationType?: string;
  /**
   * List of time grains supported for the metric together with retention period
   */
  metricAvailabilities?: MetricAvailabilily[];
  /**
   * Friendly name shown in the UI
   */
  displayName?: string;
}

/**
 * LocalizableString object containing the name and a localized value.
 */
export interface LocalizableString {
  /**
   * Non localized name
   */
  value?: string;
  /**
   * Localized name
   */
  localizedValue?: string;
}

/**
 * Usage of the quota resource
 */
export interface CsmUsageQuota {
  /**
   * Units of measurement for the quota resource
   */
  unit?: string;
  /**
   * Next reset time for the resource counter
   */
  nextResetTime?: Date;
  /**
   * The current value of the resource counter
   */
  currentValue?: number;
  /**
   * The resource limit
   */
  limit?: number;
  /**
   * Quota name
   */
  name?: LocalizableString;
}

/**
 * Class that represents usage of the quota resource.
 */
export interface Usage extends Resource {
  /**
   * Friendly name shown in the UI
   */
  displayName?: string;
  /**
   * Name of the quota
   */
  usageName?: string;
  /**
   * Name of the quota resource
   */
  resourceName?: string;
  /**
   * Units of measurement for the quota resource
   */
  unit?: string;
  /**
   * The current value of the resource counter
   */
  currentValue?: number;
  /**
   * The resource limit
   */
  limit?: number;
  /**
   * Next reset time for the resource counter
   */
  nextResetTime?: Date;
  /**
   * ComputeMode used for this usage. Possible values include: 'Shared', 'Dedicated', 'Dynamic'
   */
  computeMode?: ComputeModeOptions;
  /**
   * SiteMode used for this usage
   */
  siteMode?: string;
}

/**
 * Description of the App Service Plan scale options
 */
export interface SkuCapacity {
  /**
   * Minimum number of Workers for this App Service Plan SKU
   */
  minimum?: number;
  /**
   * Maximum number of Workers for this App Service Plan SKU
   */
  maximum?: number;
  /**
   * Default number of Workers for this App Service Plan SKU
   */
  default?: number;
  /**
   * Available scale configurations for an App Service Plan
   */
  scaleType?: string;
}

/**
 * Sku discovery information
 */
export interface SkuInfo {
  /**
   * Resource type that this sku applies to
   */
  resourceType?: string;
  /**
   * Name and tier of the sku
   */
  sku?: SkuDescription;
  /**
   * Min, max, and default scale values of the sku
   */
  capacity?: SkuCapacity;
}

/**
 * Describes the Source Control OAuth Token
 */
export interface SourceControl extends Resource {
  /**
   * Name or Source Control Type
   */
  sourceControlName?: string;
  /**
   * OAuth Access Token
   */
  token?: string;
  /**
   * OAuth Access Token Secret
   */
  tokenSecret?: string;
  /**
   * OAuth Refresh Token
   */
  refreshToken?: string;
  /**
   * OAuth Token Expiration
   */
  expirationTime?: Date;
}

/**
 * Represents a recommendation result generated by the recommendation engine
 */
export interface Recommendation {
  /**
   * Timestamp when this instance was created.
   */
  creationTime?: Date;
  /**
   * A GUID value that each recommendation object is associated with.
   */
  recommendationId?: string;
  /**
   * Full ARM resource ID string that this recommendation object is associated with.
   */
  resourceId?: string;
  /**
   * Name of a resource type this recommendation applies, e.g. Subscription, ServerFarm, Site.
   */
  resourceScope?: string;
  /**
   * Unique name of the rule
   */
  ruleName?: string;
  /**
   * UI friendly name of the rule (may not be unique)
   */
  displayName?: string;
  /**
   * Localized text of recommendation, good for UI.
   */
  message?: string;
  /**
   * Level indicating how critical this recommendation can impact. Possible values include:
   * 'Critical', 'Warning', 'Information', 'NonUrgentSuggestion'
   */
  level: NotificationLevel;
  /**
   * List of channels that this recommendation can apply. Possible values include: 'Notification',
   * 'Api', 'Email', 'All'
   */
  channels: Channels;
  /**
   * The list of category tags that this recommendation belongs to.
   */
  tags?: string[];
  /**
   * Name of action recommended by this object.
   */
  actionName?: string;
  /**
   * On/off flag indicating the rule is currently enabled or disabled.
   */
  enabled?: number;
  /**
   * The beginning time of a range that the recommendation refers to.
   */
  startTime?: Date;
  /**
   * The end time of a range that the recommendation refers to.
   */
  endTime?: Date;
  /**
   * When to notify this recommendation next. Null means that this will never be notified anymore.
   */
  nextNotificationTime?: Date;
  /**
   * Date and time when this notification expires.
   */
  notificationExpirationTime?: Date;
  /**
   * Last timestamp this instance was actually notified. Null means that this recommendation hasn't
   * been notified yet.
   */
  notifiedTime?: Date;
  /**
   * A metric value measured by the rule.
   */
  score?: number;
}

/**
 * Represents a recommendation rule that the recommendation engine can perform
 */
export interface RecommendationRule {
  /**
   * Unique name of the rule
   */
  name?: string;
  /**
   * UI friendly name of the rule
   */
  displayName?: string;
  /**
   * Localized name of the rule (Good for UI)
   */
  message?: string;
  /**
   * Recommendation ID of an associated recommendation object tied to the rule, if exists.
   * If such an object doesn't exist, it is set to null.
   */
  recommendationId?: string;
  /**
   * Localized detailed description of the rule
   */
  description?: string;
  /**
   * Name of action that is recommended by this rule in string
   */
  actionName?: string;
  /**
   * On/off flag indicating the rule is currently enabled or disabled.
   */
  enabled?: number;
  /**
   * Level of impact indicating how critical this rule is. Possible values include: 'Critical',
   * 'Warning', 'Information', 'NonUrgentSuggestion'
   */
  level: NotificationLevel;
  /**
   * List of available channels that this rule applies. Possible values include: 'Notification',
   * 'Api', 'Email', 'All'
   */
  channels: Channels;
  /**
   * An array of category tags that the rule contains.
   */
  tags?: string[];
}

/**
 * VnetRoute contract used to pass routing information for a vnet.
 */
export interface VnetRoute extends Resource {
  /**
   * The name of this route. This is only returned by the server and does not need to be set by the
   * client.
   */
  vnetRouteName?: string;
  /**
   * The starting address for this route. This may also include a CIDR notation, in which case the
   * end address must not be specified.
   */
  startAddress?: string;
  /**
   * The ending address for this route. If the start address is specified in CIDR notation, this
   * must be omitted.
   */
  endAddress?: string;
  /**
   * The type of route this is:
   * DEFAULT - By default, every web app has routes to the local address ranges specified by
   * RFC1918
   * INHERITED - Routes inherited from the real Virtual Network routes
   * STATIC - Static route set on the web app only
   *
   * These values will be used for syncing a Web App's routes with those from a Virtual Network.
   * This operation will clear all DEFAULT and INHERITED routes and replace them
   * with new INHERITED routes.
   */
  routeType?: string;
}

/**
 * VNETInfo contract. This contract is public and is a stripped down version of VNETInfoInternal
 */
export interface VnetInfo extends Resource {
  /**
   * The vnet resource id
   */
  vnetResourceId?: string;
  /**
   * The client certificate thumbprint
   */
  certThumbprint?: string;
  /**
   * A certificate file (.cer) blob containing the public key of the private key used to
   * authenticate a
   * Point-To-Site VPN connection.
   */
  certBlob?: string;
  /**
   * The routes that this virtual network connection uses.
   */
  routes?: VnetRoute[];
  /**
   * Flag to determine if a resync is required
   */
  resyncRequired?: boolean;
  /**
   * Dns servers to be used by this VNET. This should be a comma-separated list of IP addresses.
   */
  dnsServers?: string;
}

/**
 * The VnetGateway contract. This is used to give the vnet gateway access to the VPN package.
 */
export interface VnetGateway extends Resource {
  /**
   * The VNET name.
   */
  vnetName?: string;
  /**
   * The URI where the Vpn package can be downloaded
   */
  vpnPackageUri?: string;
}

/**
 * Class that represents a BizTalk Hybrid Connection
 */
export interface RelayServiceConnectionEntity extends Resource {
  entityName?: string;
  entityConnectionString?: string;
  resourceType?: string;
  resourceConnectionString?: string;
  hostname?: string;
  port?: number;
  biztalkUri?: string;
}

/**
 * This is an object used to store a full view of network features (presently VNET integration and
 * Hybrid Connections)
 * for a web app.
 */
export interface NetworkFeatures extends Resource {
  /**
   * The Vnet Name
   */
  virtualNetworkName?: string;
  /**
   * The Vnet Summary view
   */
  virtualNetworkConnection?: VnetInfo;
  /**
   * The Hybrid Connections Summary view
   */
  hybridConnections?: RelayServiceConnectionEntity[];
}

/**
 * Class containing deployment slot parameters
 */
export interface CsmSlotEntity {
  /**
   * Set the destination deployment slot during swap operation
   */
  targetSlot?: string;
  /**
   * Get or set the flag indicating it should preserve VNet to the slot during swap
   */
  preserveVnet?: boolean;
}

/**
 * An object describing the difference in setting values between two web app slots
 */
export interface SlotDifference extends Resource {
  /**
   * Indicates the type of the difference: Information, Warning or Error.
   */
  slotDifferenceType?: string;
  /**
   * The type of the settings: General, AppSetting or ConnectionString
   */
  settingType?: string;
  /**
   * Rule that describes how to process the difference in settings during web app slot swap.
   */
  diffRule?: string;
  /**
   * Name of the setting
   */
  settingName?: string;
  /**
   * Value of the setting in the current web app slot
   */
  valueInCurrentSlot?: string;
  /**
   * Value of the setting in the target web app slot
   */
  valueInTargetSlot?: string;
  /**
   * Description of the difference
   */
  description?: string;
}

/**
 * Slot Config names azure resource
 */
export interface SlotConfigNamesResource extends Resource {
  /**
   * List of connection string names
   */
  connectionStringNames?: string[];
  /**
   * List of application settings names
   */
  appSettingNames?: string[];
}

/**
 * Class containing names for connection strings and application settings to be marked as sticky to
 * the slot
 * and not moved during swap operation
 * This is valid for all deployment slots under the site
 */
export interface SlotConfigNames {
  /**
   * List of connection string names
   */
  connectionStringNames?: string[];
  /**
   * List of application settings names
   */
  appSettingNames?: string[];
}

/**
 * Represents a site cloneability criterion
 */
export interface SiteCloneabilityCriterion {
  /**
   * Name of criterion
   */
  name?: string;
  /**
   * Description of criterion
   */
  description?: string;
}

/**
 * Represents whether or not a web app is cloneable
 */
export interface SiteCloneability {
  /**
   * Name of web app. Possible values include: 'Cloneable', 'PartiallyCloneable', 'NotCloneable'
   */
  result: CloneAbilityResult;
  /**
   * List of features enabled on web app that prevent cloning
   */
  blockingFeatures?: SiteCloneabilityCriterion[];
  /**
   * List of features enabled on web app that are non-blocking but cannot be cloned. The web app
   * can still be cloned
   * but the features in this list will not be set up on cloned web app.
   */
  unsupportedFeatures?: SiteCloneabilityCriterion[];
  /**
   * List of blocking application characteristics
   */
  blockingCharacteristics?: SiteCloneabilityCriterion[];
}

/**
 * Class containing details about site recovery operation.
 */
export interface CsmSiteRecoveryEntity {
  /**
   * Point in time in which the site recover should be attempted.
   */
  snapshotTime?: Date;
  /**
   * If true, then the website's configuration will be reverted to its state at SnapshotTime
   */
  recoverConfig?: boolean;
  /**
   * [Optional] Destination web app name into which web app should be recovered. This is case when
   * new web app should be created instead.
   */
  siteName?: string;
  /**
   * [Optional] Destination web app slot name into which web app should be recovered
   */
  slotName?: string;
}

/**
 * Reports deleted site including the timestamp of operation
 */
export interface DeletedSite extends Resource {
  /**
   * Time when the site was deleted
   */
  deletedTimestamp?: Date;
  /**
   * Name of web app
   */
  deletedSiteName?: string;
  /**
   * State of the web app
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: string;
  /**
   * Hostnames associated with web app
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostNames?: string[];
  /**
   * Name of repository site
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly repositorySiteName?: string;
  /**
   * State indicating whether web app has exceeded its quota usage. Possible values include:
   * 'Normal', 'Exceeded'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly usageState: UsageState;
  /**
   * True if the site is enabled; otherwise, false. Setting this  value to false disables the site
   * (takes the site off line).
   */
  enabled?: boolean;
  /**
   * Hostnames for the web app that are enabled. Hostnames need to be assigned and enabled. If some
   * hostnames are assigned but not enabled
   * the app is not served on those hostnames
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly enabledHostNames?: string[];
  /**
   * Management information availability state for the web app. Possible values are Normal or
   * Limited.
   * Normal means that the site is running correctly and that management information for the site
   * is available.
   * Limited means that only partial management information for the site is available and that
   * detailed site information is unavailable. Possible values include: 'Normal', 'Limited',
   * 'DisasterRecoveryMode'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly availabilityState: SiteAvailabilityState;
  /**
   * Hostname SSL states are  used to manage the SSL bindings for site's hostnames.
   */
  hostNameSslStates?: HostNameSslState[];
  serverFarmId?: string;
  /**
   * Last time web app was modified in UTC
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModifiedTimeUtc?: Date;
  /**
   * Configuration of web app
   */
  siteConfig?: SiteConfig;
  /**
   * Read-only list of Azure Traffic manager hostnames associated with web app
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly trafficManagerHostNames?: string[];
  /**
   * If set indicates whether web app is deployed as a premium app
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly premiumAppDeployed?: boolean;
  /**
   * If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is
   * false.
   */
  scmSiteAlsoStopped?: boolean;
  /**
   * Read-only property that specifies which slot this app will swap into
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetSwapSlot?: string;
  /**
   * Specification for the hosting environment (App Service Environment) to use for the web app
   */
  hostingEnvironmentProfile?: HostingEnvironmentProfile;
  microService?: string;
  /**
   * Name of gateway app associated with web app
   */
  gatewaySiteName?: string;
  /**
   * Specifies if the client affinity is enabled when load balancing http request for multiple
   * instances of the web app
   */
  clientAffinityEnabled?: boolean;
  /**
   * Specifies if the client certificate is enabled for the web app
   */
  clientCertEnabled?: boolean;
  /**
   * Specifies if the public hostnames are disabled the web app.
   * If set to true the app is only accessible via API Management process
   */
  hostNamesDisabled?: boolean;
  /**
   * List of comma separated IP addresses that this web app uses for outbound connections. Those
   * can be used when configuring firewall rules for databases accessed by this web app.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly outboundIpAddresses?: string;
  /**
   * Size of a function container
   */
  containerSize?: number;
  /**
   * Maximum number of workers
   * This only applies to function container
   */
  maxNumberOfWorkers?: number;
  /**
   * This is only valid for web app creation. If specified, web app is cloned from
   * a source web app
   */
  cloningInfo?: CloningInfo;
  /**
   * Resource group web app belongs to
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceGroup?: string;
  /**
   * Site is a default container
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isDefaultContainer?: boolean;
  /**
   * Default hostname of the web app
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultHostName?: string;
}

/**
 * Represents user credentials used for publishing activity
 */
export interface Deployment extends Resource {
  /**
   * Id
   */
  deploymentId?: string;
  /**
   * Status
   */
  status?: number;
  /**
   * Message
   */
  message?: string;
  /**
   * Author
   */
  author?: string;
  /**
   * Deployer
   */
  deployer?: string;
  /**
   * AuthorEmail
   */
  authorEmail?: string;
  /**
   * StartTime
   */
  startTime?: Date;
  /**
   * EndTime
   */
  endTime?: Date;
  /**
   * Active
   */
  active?: boolean;
  /**
   * Detail
   */
  details?: string;
}

/**
 * Instance of a web app
 */
export interface SiteInstance extends Resource {
  /**
   * Name of instance
   */
  siteInstanceName?: string;
}

/**
 * A host name binding object
 */
export interface HostNameBinding extends Resource {
  /**
   * Hostname
   */
  hostNameBindingName?: string;
  /**
   * Web app name
   */
  siteName?: string;
  /**
   * Fully qualified ARM domain resource URI
   */
  domainId?: string;
  /**
   * Azure resource name
   */
  azureResourceName?: string;
  /**
   * Azure resource type. Possible values include: 'Website', 'TrafficManager'
   */
  azureResourceType?: AzureResourceType;
  /**
   * Custom DNS record type. Possible values include: 'CName', 'A'
   */
  customHostNameDnsRecordType?: CustomHostNameDnsRecordType;
  /**
   * Host name type. Possible values include: 'Verified', 'Managed'
   */
  hostNameType?: HostNameType;
}

/**
 * Describes the source control configuration for web app
 */
export interface SiteSourceControl extends Resource {
  /**
   * Repository or source control url
   */
  repoUrl?: string;
  /**
   * Name of branch to use for deployment
   */
  branch?: string;
  /**
   * Whether to manual or continuous integration
   */
  isManualIntegration?: boolean;
  /**
   * Whether to manual or continuous integration
   */
  deploymentRollbackEnabled?: boolean;
  /**
   * Mercurial or Git repository type
   */
  isMercurial?: boolean;
}

/**
 * String dictionary resource
 */
export interface StringDictionary extends Resource {
  /**
   * Settings
   */
  properties?: { [propertyName: string]: string };
}

/**
 * Database connection string value to type pair
 */
export interface ConnStringValueTypePair {
  /**
   * Value of pair
   */
  value?: string;
  /**
   * Type of database. Possible values include: 'MySql', 'SQLServer', 'SQLAzure', 'Custom'
   */
  type: DatabaseServerType;
}

/**
 * String dictionary resource
 */
export interface ConnectionStringDictionary extends Resource {
  /**
   * Connection strings
   */
  properties?: { [propertyName: string]: ConnStringValueTypePair };
}

/**
 * Application logs to file system configuration
 */
export interface FileSystemApplicationLogsConfig {
  /**
   * Log level. Possible values include: 'Off', 'Verbose', 'Information', 'Warning', 'Error'
   */
  level?: LogLevel;
}

/**
 * Application logs to azure table storage configuration
 */
export interface AzureTableStorageApplicationLogsConfig {
  /**
   * Log level. Possible values include: 'Off', 'Verbose', 'Information', 'Warning', 'Error'
   */
  level?: LogLevel;
  /**
   * SAS url to an azure table with add/query/delete permissions
   */
  sasUrl?: string;
}

/**
 * Application logs azure blob storage configuration
 */
export interface AzureBlobStorageApplicationLogsConfig {
  /**
   * Log level. Possible values include: 'Off', 'Verbose', 'Information', 'Warning', 'Error'
   */
  level?: LogLevel;
  /**
   * SAS url to a azure blob container with read/write/list/delete permissions
   */
  sasUrl?: string;
  /**
   * Retention in days.
   * Remove blobs older than X days.
   * 0 or lower means no retention.
   */
  retentionInDays?: number;
}

/**
 * Application logs configuration
 */
export interface ApplicationLogsConfig {
  /**
   * Application logs to file system configuration
   */
  fileSystem?: FileSystemApplicationLogsConfig;
  /**
   * Application logs to azure table storage configuration
   */
  azureTableStorage?: AzureTableStorageApplicationLogsConfig;
  /**
   * Application logs to blob storage configuration
   */
  azureBlobStorage?: AzureBlobStorageApplicationLogsConfig;
}

/**
 * Http logs to file system configuration
 */
export interface FileSystemHttpLogsConfig {
  /**
   * Maximum size in megabytes that http log files can use.
   * When reached old log files will be removed to make space for new ones.
   * Value can range between 25 and 100.
   */
  retentionInMb?: number;
  /**
   * Retention in days.
   * Remove files older than X days.
   * 0 or lower means no retention.
   */
  retentionInDays?: number;
  /**
   * Enabled
   */
  enabled?: boolean;
}

/**
 * Http logs to azure blob storage configuration
 */
export interface AzureBlobStorageHttpLogsConfig {
  /**
   * SAS url to a azure blob container with read/write/list/delete permissions
   */
  sasUrl?: string;
  /**
   * Retention in days.
   * Remove blobs older than X days.
   * 0 or lower means no retention.
   */
  retentionInDays?: number;
  /**
   * Enabled
   */
  enabled?: boolean;
}

/**
 * Http logs configuration
 */
export interface HttpLogsConfig {
  /**
   * Http logs to file system configuration
   */
  fileSystem?: FileSystemHttpLogsConfig;
  /**
   * Http logs to azure blob storage configuration
   */
  azureBlobStorage?: AzureBlobStorageHttpLogsConfig;
}

/**
 * Enabled configuration
 */
export interface EnabledConfig {
  /**
   * Enabled
   */
  enabled?: boolean;
}

/**
 * Configuration of Azure web site
 */
export interface SiteLogsConfig extends Resource {
  /**
   * Application logs configuration
   */
  applicationLogs?: ApplicationLogsConfig;
  /**
   * Http logs configuration
   */
  httpLogs?: HttpLogsConfig;
  /**
   * Failed requests tracing configuration
   */
  failedRequestsTracing?: EnabledConfig;
  /**
   * Detailed error messages configuration
   */
  detailedErrorMessages?: EnabledConfig;
}

/**
 * An interface representing PremierAddOnRequest.
 */
export interface PremierAddOnRequest {
  /**
   * Geo region resource belongs to e.g. SouthCentralUS, SouthEastAsia
   */
  location?: string;
  /**
   * Tags associated with resource
   */
  tags?: { [propertyName: string]: string };
  /**
   * Azure resource manager plan
   */
  plan?: ArmPlan;
  /**
   * Resource specific properties
   */
  properties?: any;
  /**
   * Sku description of the resource
   */
  sku?: SkuDescription;
}

/**
 * Description of a backup schedule. Describes how often should be the backup performed and what
 * should be the retention policy.
 */
export interface BackupSchedule {
  /**
   * How often should be the backup executed (e.g. for weekly backup, this should be set to 7 and
   * FrequencyUnit should be set to Day)
   */
  frequencyInterval?: number;
  /**
   * How often should be the backup executed (e.g. for weekly backup, this should be set to Day and
   * FrequencyInterval should be set to 7). Possible values include: 'Day', 'Hour'
   */
  frequencyUnit: FrequencyUnit;
  /**
   * True if the retention policy should always keep at least one backup in the storage account,
   * regardless how old it is; false otherwise.
   */
  keepAtLeastOneBackup?: boolean;
  /**
   * After how many days backups should be deleted
   */
  retentionPeriodInDays?: number;
  /**
   * When the schedule should start working
   */
  startTime?: Date;
  /**
   * The last time when this schedule was triggered
   */
  lastExecutionTime?: Date;
}

/**
 * Note: properties are serialized in JSON format and stored in DB.
 * if new properties are added they might not be in the previous data rows
 * so please handle nulls
 */
export interface DatabaseBackupSetting {
  /**
   * SqlAzure / MySql
   */
  databaseType?: string;
  name?: string;
  /**
   * Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
   * This is used during restore with overwrite connection strings options.
   */
  connectionStringName?: string;
  /**
   * Contains a connection string to a database which is being backed up/restored. If the restore
   * should happen to a new database, the database name inside is the new one.
   */
  connectionString?: string;
}

/**
 * Description of a backup which will be performed
 */
export interface BackupRequest extends Resource {
  /**
   * Name of the backup
   */
  backupRequestName?: string;
  /**
   * True if the backup schedule is enabled (must be included in that case), false if the backup
   * schedule should be disabled
   */
  enabled?: boolean;
  /**
   * SAS URL to the container
   */
  storageAccountUrl?: string;
  /**
   * Schedule for the backup if it is executed periodically
   */
  backupSchedule?: BackupSchedule;
  /**
   * Databases included in the backup
   */
  databases?: DatabaseBackupSetting[];
  /**
   * Type of the backup. Possible values include: 'Default', 'Clone', 'Relocation'
   */
  backupRequestType: BackupRestoreOperationType;
}

/**
 * Backup description
 */
export interface BackupItem extends Resource {
  /**
   * Id of the backup.
   */
  backupItemId?: number;
  /**
   * SAS URL for the storage account container which contains this backup
   */
  storageAccountUrl?: string;
  /**
   * Name of the blob which contains data for this backup
   */
  blobName?: string;
  /**
   * Name of this backup
   */
  backupItemName?: string;
  /**
   * Backup status. Possible values include: 'InProgress', 'Failed', 'Succeeded', 'TimedOut',
   * 'Created', 'Skipped', 'PartiallySucceeded', 'DeleteInProgress', 'DeleteFailed', 'Deleted'
   */
  status: BackupItemStatus;
  /**
   * Size of the backup in bytes
   */
  sizeInBytes?: number;
  /**
   * Timestamp of the backup creation
   */
  created?: Date;
  /**
   * Details regarding this backup. Might contain an error message.
   */
  log?: string;
  /**
   * List of databases included in the backup
   */
  databases?: DatabaseBackupSetting[];
  /**
   * True if this backup has been created due to a schedule being triggered.
   */
  scheduled?: boolean;
  /**
   * Timestamp of a last restore operation which used this backup.
   */
  lastRestoreTimeStamp?: Date;
  /**
   * Timestamp when this backup finished.
   */
  finishedTimeStamp?: Date;
  /**
   * Unique correlation identifier. Please use this along with the timestamp while communicating
   * with Azure support.
   */
  correlationId?: string;
  /**
   * Size of the original web app which has been backed up
   */
  websiteSizeInBytes?: number;
}

/**
 * Description of a restore request
 */
export interface RestoreRequest extends Resource {
  /**
   * SAS URL to the container
   */
  storageAccountUrl?: string;
  /**
   * Name of a blob which contains the backup
   */
  blobName?: string;
  /**
   * True if the restore operation can overwrite target site. "True" needed if trying to restore
   * over an existing site.
   */
  overwrite?: boolean;
  /**
   * Name of a site (Web App)
   */
  siteName?: string;
  /**
   * Collection of databases which should be restored. This list has to match the list of databases
   * included in the backup.
   */
  databases?: DatabaseBackupSetting[];
  /**
   * Changes a logic when restoring a site with custom domains. If "true", custom domains are
   * removed automatically. If "false", custom domains are added to
   * the site object when it is being restored, but that might fail due to conflicts during the
   * operation.
   */
  ignoreConflictingHostNames?: boolean;
  /**
   * Operation type. Possible values include: 'Default', 'Clone', 'Relocation'
   */
  operationType: BackupRestoreOperationType;
  /**
   * Gets or sets a flag showing if SiteConfig.ConnectionStrings should be set in new site
   */
  adjustConnectionStrings?: boolean;
  /**
   * App Service Environment name, if needed (only when restoring a site to an App Service
   * Environment)
   */
  hostingEnvironment?: string;
}

/**
 * Response for a restore site request
 */
export interface RestoreResponse extends Resource {
  /**
   * When server starts the restore process, it will return an OperationId identifying that
   * particular restore operation
   */
  operationId?: string;
}

/**
 * Publishing options for requested profile
 */
export interface CsmPublishingProfileOptions {
  /**
   * Name of the format. Valid values are:
   * FileZilla3
   * WebDeploy -- default
   * Ftp
   */
  format?: string;
}

/**
 * A top level domain object
 */
export interface TopLevelDomain extends Resource {
  /**
   * Name of the top level domain
   */
  topLevelDomainName?: string;
  /**
   * If true then the top level domain supports domain privacy
   */
  privacy?: boolean;
}

/**
 * Options for retrieving the list of top level domain legal agreements
 */
export interface TopLevelDomainAgreementOption {
  /**
   * If true then the list of agreements will include agreements for domain privacy as well.
   */
  includePrivacy?: boolean;
}

/**
 * Represents a legal agreement for top level domain
 */
export interface TldLegalAgreement {
  /**
   * Unique identifier for the agreement
   */
  agreementKey?: string;
  /**
   * Agreement title
   */
  title?: string;
  /**
   * Agreement details
   */
  content?: string;
  /**
   * Url where a copy of the agreement details is hosted
   */
  url?: string;
}

/**
 * General API information
 */
export interface GeneralApiInformation extends Resource {
  /**
   * Icon Url
   */
  iconUrl?: string;
  /**
   * Display Name
   */
  displayName?: string;
  /**
   * Description
   */
  description?: string;
  /**
   * a public accessible url of the Terms Of Use Url of this API
   */
  termsOfUseUrl?: string;
  /**
   * DefaultConnectionNameTemplate
   */
  connectionDisplayName?: string;
  /**
   * ConnectionPortalUrl
   */
  connectionPortalUrl?: any;
}

/**
 * API policies
 */
export interface ApiPolicies extends Resource {
  /**
   * Content of xml policy
   */
  content?: string;
}

/**
 * Back end service per ASE
 */
export interface HostingEnvironmentServiceDescriptions {
  /**
   * Hosting environment Id
   */
  hostingEnvironmentId?: string;
  /**
   * Host Id
   */
  hostId?: string;
  /**
   * service url to use
   */
  serviceUrl?: string;
  /**
   * When the backend url is in same ASE, for performance reason this flag can be set to true
   * If WebApp.DisableHostNames is also set it improves the security by making the back end
   * accessible only
   * via API calls
   * Note: calls will fail if this option is used but back end is not on the same ASE
   */
  useInternalRouting?: boolean;
}

/**
 * API definitions with backend urls
 */
export interface BackendServiceDefinition extends Resource {
  /**
   * Url from which the swagger payload will be fetched
   */
  serviceUrl?: string;
  /**
   * Service Urls per Hosting environment
   */
  hostingEnvironmentServiceUrls?: HostingEnvironmentServiceDescriptions[];
}

/**
 * OAuth Settings Parameter
 */
export interface ApiOAuthSettingsParameter {
  /**
   * Value
   */
  value?: string;
  /**
   * Read only: Options available to this parameter
   */
  options?: any;
  /**
   * UI definitions per culture as caller can specify the culture
   */
  uiDefinition?: any;
}

/**
 * OAuth settings for the connection provider
 */
export interface ApiOAuthSettings {
  /**
   * Identity provider
   */
  identityProvider?: string;
  /**
   * Resource provider client id
   */
  clientId?: string;
  /**
   * Client Secret needed for OAuth
   */
  clientSecret?: string;
  /**
   * OAuth scopes
   */
  scopes?: string[];
  /**
   * Url
   */
  redirectUrl?: string;
  /**
   * Read only properties for this oauth setting.
   */
  properties?: any;
  /**
   * OAuth parameters key is the name of parameter
   */
  customParameters?: { [propertyName: string]: ApiOAuthSettingsParameter };
}

/**
 * connection provider parameters
 */
export interface ConnectionParameter {
  /**
   * Type of the parameter. Possible values include: 'string', 'securestring', 'secureobject',
   * 'int', 'bool', 'object', 'array', 'oauthSetting', 'connection'
   */
  type?: ConnectionParameterType;
  /**
   * Default parameter value
   */
  defaultValue?: any;
  /**
   * Settings defining OAuth flow for the back end provider
   */
  oAuthSettings?: ApiOAuthSettings;
  /**
   * UI definitions
   */
  uiDefinition?: any;
}

/**
 * API Management
 */
export interface ApiEntity extends Resource {
  /**
   * Name of the API
   * the URL path of this API when exposed via APIM
   */
  apiEntityName?: string;
  /**
   * the URL path of this API when exposed via APIM
   */
  generalInformation?: GeneralApiInformation;
  /**
   * the URL path of this API when exposed via APIM
   */
  path?: string;
  /**
   * Read only property returning the runtime endpoints where the API can be called
   */
  runtimeUrls?: string[];
  /**
   * Protocols supported by the front end - http/https
   */
  protocols?: string[];
  /**
   * API policies
   */
  policies?: ApiPolicies;
  /**
   * Backend service definition
   */
  backendService?: BackendServiceDefinition;
  /**
   * API definition Url - url where the swagger can be downloaded from
   */
  apiDefinitionUrl?: string;
  /**
   * Free form object for the data caller wants to store
   */
  metadata?: any;
  /**
   * Capabilities
   */
  capabilities?: string[];
  /**
   * Connection parameters
   */
  connectionParameters?: { [propertyName: string]: ConnectionParameter };
  /**
   * Timestamp of the connection creation
   */
  createdTime?: Date;
  /**
   * Timestamp of last connection change.
   */
  changedTime?: Date;
}

/**
 * Connection error
 */
export interface ConnectionError extends Resource {
  /**
   * code of the status
   */
  code?: string;
  /**
   * Description of the status
   */
  message?: string;
}

/**
 * Connection status
 */
export interface ConnectionStatus extends Resource {
  /**
   * Status
   */
  status?: string;
  /**
   * Target of the error
   */
  target?: string;
  /**
   * Error details
   */
  error?: ConnectionError;
}

/**
 * Custom logging setting value
 */
export interface CustomLoginSettingValue extends Resource {
  /**
   * Option selected for this custom login setting value
   */
  option?: string;
}

/**
 * Custom logging setting values
 */
export interface ParameterCustomLoginSettingValues extends Resource {
  /**
   * Custom parameters.
   */
  customParameters?: { [propertyName: string]: CustomLoginSettingValue };
}

/**
 * Message envelope that contains the common Azure resource manager properties and the resource
 * provider specific content
 */
export interface ResponseMessageEnvelopeApiEntity {
  /**
   * Resource Id. Typically id is populated only for responses to GET requests. Caller is
   * responsible for passing in this
   * value for GET requests only.
   * For example:
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupId}/providers/Microsoft.Web/sites/{sitename}
   */
  id?: string;
  /**
   * Name of resource
   */
  name?: string;
  /**
   * Type of resource e.g Microsoft.Web/sites
   */
  type?: string;
  /**
   * Geo region resource belongs to e.g. SouthCentralUS, SouthEastAsia
   */
  location?: string;
  /**
   * Tags associated with resource
   */
  tags?: { [propertyName: string]: string };
  /**
   * Azure resource manager plan
   */
  plan?: ArmPlan;
  /**
   * Resource specific properties
   */
  properties?: ApiEntity;
  /**
   * Sku description of the resource
   */
  sku?: SkuDescription;
}

/**
 * expanded parent object for expansion
 */
export interface ExpandedParentApiEntity extends Resource {
  /**
   * Id of connection provider
   */
  expandedParentApiEntityId?: string;
  /**
   * Id of connection provider
   */
  entity?: ResponseMessageEnvelopeApiEntity;
}

/**
 * API Connection
 */
export interface Connection extends Resource {
  /**
   * connection name
   */
  connectionName?: string;
  /**
   * display name
   */
  displayName?: string;
  /**
   * Status of the connection
   */
  statuses?: ConnectionStatus[];
  /**
   * Custom login setting values.
   */
  customParameterValues?: { [propertyName: string]: ParameterCustomLoginSettingValues };
  tenantId?: string;
  /**
   * Tokens/Claim
   */
  parameterValues?: { [propertyName: string]: any };
  /**
   * Tokens/Claim
   */
  nonSecretParameterValues?: { [propertyName: string]: any };
  metadata?: any;
  /**
   * Time in UTC when the first expiration of OAuth tokens
   */
  firstExpirationTime?: Date;
  /**
   * List of Keywords that tag the acl
   */
  keywords?: string[];
  /**
   * Timestamp of the connection creation
   */
  createdTime?: Date;
  /**
   * Timestamp of last connection change.
   */
  changedTime?: Date;
  /**
   * expanded connection provider name
   */
  api?: ExpandedParentApiEntity;
}

/**
 * An interface representing ConsentLinkInputParameter.
 */
export interface ConsentLinkInputParameter {
  /**
   * Principal type. Possible values include: 'ActiveDirectory', 'Connection', 'MicrosoftAccount'
   */
  principalType?: PrincipalType;
  /**
   * Tenant Id
   */
  tenantId?: string;
  /**
   * AAD OID (user or group) if the principal type is ActiveDirectory.
   * MSA PUID if the principal type is MicrosoftAccount.
   */
  objectId?: string;
  /**
   * Name of the parameter in the connection provider's oauthSettings
   */
  parameterName?: string;
  /**
   * Name of the parameter in the connection provider's oauthSettings
   */
  redirectUrl?: string;
}

/**
 * Connection Consent Link payload
 */
export interface ConsentLinkInput extends Resource {
  /**
   * Array of links
   */
  parameters?: ConsentLinkInputParameter[];
}

/**
 * An interface representing ConsentLink.
 */
export interface ConsentLink {
  /**
   * Uri for the consent link
   */
  link?: string;
  /**
   * Uri for first party login
   */
  firstPartyLoginUri?: string;
  /**
   * Display Name of the parameter in the connection provider's oauthSettings
   */
  displayName?: string;
  /**
   * Status of the link. Possible values include: 'Unauthenticated', 'Authenticated', 'Error'
   */
  status?: LinkState;
}

/**
 * Collection of consent links
 */
export interface ConsentLinkPayload {
  /**
   * Collection of resources
   */
  value?: ConsentLink[];
}

/**
 * List Connection Keys Input payload
 */
export interface ListConnectionKeysInput extends Resource {
  /**
   * time span for how long the keys will be valid
   */
  validityTimeSpan?: string;
}

/**
 * An interface representing ConnectionSecrets.
 */
export interface ConnectionSecrets {
  /**
   * Tokens/Claim
   */
  parameterValues?: { [propertyName: string]: any };
  /**
   * Connection Key
   */
  connectionKey?: string;
}

/**
 * Confirm Consent Code Input payload
 */
export interface ConfirmConsentCodeInput extends Resource {
  /**
   * Principal type. Possible values include: 'ActiveDirectory', 'Connection', 'MicrosoftAccount'
   */
  principalType?: PrincipalType;
  /**
   * Tenant Id
   */
  tenantId?: string;
  /**
   * AAD object ID. This is userId
   */
  objectId?: string;
  /**
   * Code that was returned during consent flow
   */
  code?: string;
}

/**
 * Optional Parameters.
 */
export interface DomainsDeleteDomainOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If true then the domain will be deleted immediately instead of after 24 hours
   */
  forceHardDeleteDomain?: boolean;
}

/**
 * Optional Parameters.
 */
export interface GlobalGetSubscriptionGeoRegionsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Filter only to regions that support this sku
   */
  sku?: string;
  /**
   * Filter only to regions that support linux workers
   */
  linuxWorkersEnabled?: boolean;
}

/**
 * Optional Parameters.
 */
export interface GlobalGetAllServerFarmsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * False to return a subset of App Service Plan properties, true to return all of the properties.
   * Retrieval of all properties may increase the API latency.
   */
  detailed?: boolean;
}

/**
 * Optional Parameters.
 */
export interface GlobalGetSubscriptionGeoRegionsNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Filter only to regions that support this sku
   */
  sku?: string;
  /**
   * Filter only to regions that support linux workers
   */
  linuxWorkersEnabled?: boolean;
}

/**
 * Optional Parameters.
 */
export interface GlobalGetAllServerFarmsNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * False to return a subset of App Service Plan properties, true to return all of the properties.
   * Retrieval of all properties may increase the API latency.
   */
  detailed?: boolean;
}

/**
 * Optional Parameters.
 */
export interface GlobalDomainRegistrationCheckDomainAvailabilityOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Name of the object
   */
  name?: string;
}

/**
 * Optional Parameters.
 */
export interface HostingEnvironmentsDeleteHostingEnvironmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Delete even if the hostingEnvironment (App Service Environment) contains resources
   */
  forceDelete?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HostingEnvironmentsGetHostingEnvironmentMetricsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Include instance details
   */
  details?: boolean;
  /**
   * Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface HostingEnvironmentsGetHostingEnvironmentUsagesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface HostingEnvironmentsGetHostingEnvironmentMultiRoleMetricsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Beginning time of metrics query
   */
  startTime?: string;
  /**
   * End time of metrics query
   */
  endTime?: string;
  /**
   * Time granularity of metrics query
   */
  timeGrain?: string;
  /**
   * Include instance details
   */
  details?: boolean;
  /**
   * Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface HostingEnvironmentsGetHostingEnvironmentWebWorkerMetricsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Include instance details
   */
  details?: boolean;
  /**
   * Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface HostingEnvironmentsGetHostingEnvironmentSitesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Comma separated list of site properties to include
   */
  propertiesToInclude?: string;
}

/**
 * Optional Parameters.
 */
export interface HostingEnvironmentsGetWorkerPoolInstanceMetricsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Include instance details
   */
  details?: boolean;
  /**
   * Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface HostingEnvironmentsGetMultiRolePoolInstanceMetricsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Include instance details
   */
  details?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HostingEnvironmentsBeginDeleteHostingEnvironmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Delete even if the hostingEnvironment (App Service Environment) contains resources
   */
  forceDelete?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HostingEnvironmentsGetHostingEnvironmentMetricsNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Include instance details
   */
  details?: boolean;
  /**
   * Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface HostingEnvironmentsGetHostingEnvironmentUsagesNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface HostingEnvironmentsGetHostingEnvironmentMultiRoleMetricsNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Beginning time of metrics query
   */
  startTime?: string;
  /**
   * End time of metrics query
   */
  endTime?: string;
  /**
   * Time granularity of metrics query
   */
  timeGrain?: string;
  /**
   * Include instance details
   */
  details?: boolean;
  /**
   * Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface HostingEnvironmentsGetHostingEnvironmentWebWorkerMetricsNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Include instance details
   */
  details?: boolean;
  /**
   * Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface HostingEnvironmentsGetHostingEnvironmentSitesNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Comma separated list of site properties to include
   */
  propertiesToInclude?: string;
}

/**
 * Optional Parameters.
 */
export interface ManagedHostingEnvironmentsDeleteManagedHostingEnvironmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Delete even if the managed hosting environment contains resources
   */
  forceDelete?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ManagedHostingEnvironmentsGetManagedHostingEnvironmentSitesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Comma separated list of site properties to include
   */
  propertiesToInclude?: string;
}

/**
 * Optional Parameters.
 */
export interface ManagedHostingEnvironmentsBeginDeleteManagedHostingEnvironmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Delete even if the managed hosting environment contains resources
   */
  forceDelete?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ManagedHostingEnvironmentsGetManagedHostingEnvironmentSitesNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Comma separated list of site properties to include
   */
  propertiesToInclude?: string;
}

/**
 * Optional Parameters.
 */
export interface RecommendationsGetRecommendationBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If set, this API returns only the most critical recommendation among the others. Otherwise
   * this API returns all recommendations available
   */
  featured?: boolean;
  /**
   * Return only channels specified in the filter. Filter is specified by using OData syntax.
   * Example: $filter=channels eq 'Api' or channel eq 'Notification'
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface RecommendationsGetRecommendedRulesForSiteOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If set, this API returns only the most critical recommendation among the others. Otherwise
   * this API returns all recommendations available
   */
  featured?: boolean;
  /**
   * The name of site SKU.
   */
  siteSku?: string;
  /**
   * The number of site slots associated to the site
   */
  numSlots?: number;
}

/**
 * Optional Parameters.
 */
export interface RecommendationsGetRecommendationHistoryForSiteOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The start time of a time range to query, e.g. $filter=startTime eq '2015-01-01T00:00:00Z' and
   * endTime eq '2015-01-02T00:00:00Z'
   */
  startTime?: string;
  /**
   * The end time of a time range to query, e.g. $filter=startTime eq '2015-01-01T00:00:00Z' and
   * endTime eq '2015-01-02T00:00:00Z'
   */
  endTime?: string;
}

/**
 * Optional Parameters.
 */
export interface ServerFarmsCreateOrUpdateServerFarmOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OBSOLETE: If true, allow pending state for App Service Plan
   */
  allowPendingState?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ServerFarmsGetServerFarmMetricsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If true, metrics are broken down per App Service Plan instance
   */
  details?: boolean;
  /**
   * Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ServerFarmsGetServerFarmSitesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Skip to of web apps in a list. If specified, the resulting list will contain web apps starting
   * from (including) the skipToken. Else, the resulting list contains web apps from the start of
   * the list
   */
  skipToken?: string;
  /**
   * Supported filter: $filter=state eq running. Returns only web apps that are currently running
   */
  filter?: string;
  /**
   * List page size. If specified, results are paged.
   */
  top?: string;
}

/**
 * Optional Parameters.
 */
export interface ServerFarmsRestartSitesForServerFarmOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Soft restart applies the configuration settings and restarts the apps if necessary. Hard
   * restart always restarts and reprovisions the apps
   */
  softRestart?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ServerFarmsBeginCreateOrUpdateServerFarmOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OBSOLETE: If true, allow pending state for App Service Plan
   */
  allowPendingState?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ServerFarmsGetServerFarmMetricsNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If true, metrics are broken down per App Service Plan instance
   */
  details?: boolean;
  /**
   * Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ServerFarmsGetServerFarmSitesNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Skip to of web apps in a list. If specified, the resulting list will contain web apps starting
   * from (including) the skipToken. Else, the resulting list contains web apps from the start of
   * the list
   */
  skipToken?: string;
  /**
   * Supported filter: $filter=state eq running. Returns only web apps that are currently running
   */
  filter?: string;
  /**
   * List page size. If specified, results are paged.
   */
  top?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesGetSiteSlotsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * List of app properties to include in the response
   */
  propertiesToInclude?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesGetSitesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional web app properties included in the response
   */
  propertiesToInclude?: string;
  /**
   * Types of apps included in the response
   */
  includeSiteTypes?: string;
  /**
   * Whether or not to include deployments slots in results
   */
  includeSlots?: boolean;
}

/**
 * Optional Parameters.
 */
export interface SitesGetSiteOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional web app properties included in the response
   */
  propertiesToInclude?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesCreateOrUpdateSiteOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If true web app hostname is not registered with DNS on creation. This parameter is
   * only used for app creation
   */
  skipDnsRegistration?: string;
  /**
   * If true, custom (non *.azurewebsites.net) domains associated with web app are not verified.
   */
  skipCustomDomainVerification?: string;
  /**
   * If true, web app hostname is force registered with DNS
   */
  forceDnsRegistration?: string;
  /**
   * Time to live in seconds for web app's default domain name
   */
  ttlInSeconds?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesDeleteSiteOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If true, web app metrics are also deleted
   */
  deleteMetrics?: string;
  /**
   * If true and App Service Plan is empty after web app deletion, App Service Plan is also deleted
   */
  deleteEmptyServerFarm?: string;
  /**
   * If true, DNS registration is skipped
   */
  skipDnsRegistration?: string;
  /**
   * If true, all slots associated with web app are also deleted
   */
  deleteAllSlots?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesGetSiteSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional web app properties included in the response
   */
  propertiesToInclude?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesCreateOrUpdateSiteSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If true web app hostname is not registered with DNS on creation. This parameter is
   * only used for app creation
   */
  skipDnsRegistration?: string;
  /**
   * If true, custom (non *.azurewebsites.net) domains associated with web app are not verified.
   */
  skipCustomDomainVerification?: string;
  /**
   * If true, web app hostname is force registered with DNS
   */
  forceDnsRegistration?: string;
  /**
   * Time to live in seconds for web app's default domain name
   */
  ttlInSeconds?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesDeleteSiteSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If true, web app metrics are also deleted
   */
  deleteMetrics?: string;
  /**
   * If true and App Service Plan is empty after web app deletion, App Service Plan is also deleted
   */
  deleteEmptyServerFarm?: string;
  /**
   * If true, DNS registration is skipped
   */
  skipDnsRegistration?: string;
  /**
   * If true, all slots associated with web app are also deleted
   */
  deleteAllSlots?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesGetDeletedSitesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional web app properties included in the response
   */
  propertiesToInclude?: string;
  /**
   * Types of apps included in the response
   */
  includeSiteTypes?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesGetSiteUsagesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Return only usages specified in the filter. Filter is specified by using OData syntax.
   * Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesGetSiteUsagesSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Return only usages specified in the filter. Filter is specified by using OData syntax.
   * Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesGetSiteMetricsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If true, metric details are included in response
   */
  details?: boolean;
  /**
   * Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesGetSiteMetricsSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If true, metric details are included in response
   */
  details?: boolean;
  /**
   * Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesListSitePublishingProfileXmlOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Name of the format. Valid values are:
   * FileZilla3
   * WebDeploy -- default
   * Ftp
   */
  format?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesListSitePublishingProfileXmlSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Name of the format. Valid values are:
   * FileZilla3
   * WebDeploy -- default
   * Ftp
   */
  format?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesRestartSiteSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Soft restart applies the configuration settings and restarts the app if necessary. Hard
   * restart always restarts and reprovisions the app
   */
  softRestart?: boolean;
  /**
   * If true then the API will block until the app has been restarted
   */
  synchronous?: boolean;
}

/**
 * Optional Parameters.
 */
export interface SitesRestartSiteOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Soft restart applies the configuration settings and restarts the app if necessary. Hard
   * restart always restarts and reprovisions the app
   */
  softRestart?: boolean;
  /**
   * If true then the API will block until the app has been restarted
   */
  synchronous?: boolean;
}

/**
 * Optional Parameters.
 */
export interface SitesBeginCreateOrUpdateSiteOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If true web app hostname is not registered with DNS on creation. This parameter is
   * only used for app creation
   */
  skipDnsRegistration?: string;
  /**
   * If true, custom (non *.azurewebsites.net) domains associated with web app are not verified.
   */
  skipCustomDomainVerification?: string;
  /**
   * If true, web app hostname is force registered with DNS
   */
  forceDnsRegistration?: string;
  /**
   * Time to live in seconds for web app's default domain name
   */
  ttlInSeconds?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesBeginCreateOrUpdateSiteSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If true web app hostname is not registered with DNS on creation. This parameter is
   * only used for app creation
   */
  skipDnsRegistration?: string;
  /**
   * If true, custom (non *.azurewebsites.net) domains associated with web app are not verified.
   */
  skipCustomDomainVerification?: string;
  /**
   * If true, web app hostname is force registered with DNS
   */
  forceDnsRegistration?: string;
  /**
   * Time to live in seconds for web app's default domain name
   */
  ttlInSeconds?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesGetSiteSlotsNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * List of app properties to include in the response
   */
  propertiesToInclude?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesGetSitesNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional web app properties included in the response
   */
  propertiesToInclude?: string;
  /**
   * Types of apps included in the response
   */
  includeSiteTypes?: string;
  /**
   * Whether or not to include deployments slots in results
   */
  includeSlots?: boolean;
}

/**
 * Optional Parameters.
 */
export interface SitesGetDeletedSitesNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional web app properties included in the response
   */
  propertiesToInclude?: string;
  /**
   * Types of apps included in the response
   */
  includeSiteTypes?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesGetSiteUsagesNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Return only usages specified in the filter. Filter is specified by using OData syntax.
   * Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesGetSiteUsagesSlotNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Return only usages specified in the filter. Filter is specified by using OData syntax.
   * Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesGetSiteMetricsNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If true, metric details are included in response
   */
  details?: boolean;
  /**
   * Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface SitesGetSiteMetricsSlotNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If true, metric details are included in response
   */
  details?: boolean;
  /**
   * Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface TopLevelDomainsListTopLevelDomainAgreementsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If true then the list of agreements will include agreements for domain privacy as well.
   */
  includePrivacy?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ManagedApisGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * flag showing whether to export API definition in format specified by Accept header.
   */
  exportParameter?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ConnectionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The number of items to be included in the result.
   */
  top?: number;
  /**
   * The filter to apply on the operation.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ConnectionsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The number of items to be included in the result.
   */
  top?: number;
  /**
   * The filter to apply on the operation.
   */
  filter?: string;
}

/**
 * An interface representing WebSiteManagementClientOptions.
 */
export interface WebSiteManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Collection of certificate orders
 * @extends Array<CertificateOrder>
 */
export interface CertificateOrderCollection extends Array<CertificateOrder> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of certificate order certificates
 * @extends Array<CertificateOrderCertificate>
 */
export interface CertificateOrderCertificateCollection extends Array<CertificateOrderCertificate> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of certificates
 * @extends Array<Certificate>
 */
export interface CertificateCollection extends Array<Certificate> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of Classic Mobile Services
 * @extends Array<ClassicMobileService>
 */
export interface ClassicMobileServiceCollection extends Array<ClassicMobileService> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of domains
 * @extends Array<Domain>
 */
export interface DomainCollection extends Array<Domain> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of geo regions
 * @extends Array<GeoRegion>
 */
export interface GeoRegionCollection extends Array<GeoRegion> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of serverfarms
 * @extends Array<ServerFarmWithRichSku>
 */
export interface ServerFarmCollection extends Array<ServerFarmWithRichSku> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of sites
 * @extends Array<Site>
 */
export interface SiteCollection extends Array<Site> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of hosting environments (App Service Environments)
 * @extends Array<HostingEnvironment>
 */
export interface HostingEnvironmentCollection extends Array<HostingEnvironment> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of managed hosting environments
 * @extends Array<ManagedHostingEnvironment>
 */
export interface ManagedHostingEnvironmentCollection extends Array<ManagedHostingEnvironment> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of domain name identifiers
 * @extends Array<NameIdentifier>
 */
export interface NameIdentifierCollection extends Array<NameIdentifier> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of stamp capacities
 * @extends Array<StampCapacity>
 */
export interface StampCapacityCollection extends Array<StampCapacity> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of metric responses
 * @extends Array<ResourceMetric>
 */
export interface ResourceMetricCollection extends Array<ResourceMetric> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of csm usage quotas
 * @extends Array<CsmUsageQuota>
 */
export interface CsmUsageQuotaCollection extends Array<CsmUsageQuota> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of metric definitions
 * @extends Array<MetricDefinition>
 */
export interface MetricDefinitionCollection extends Array<MetricDefinition> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of usages
 * @extends Array<Usage>
 */
export interface UsageCollection extends Array<Usage> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of worker pools
 * @extends Array<WorkerPool>
 */
export interface WorkerPoolCollection extends Array<WorkerPool> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of SkuInfos
 * @extends Array<SkuInfo>
 */
export interface SkuInfoCollection extends Array<SkuInfo> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of source controls
 * @extends Array<SourceControl>
 */
export interface SourceControlCollection extends Array<SourceControl> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of Slot Differences
 * @extends Array<SlotDifference>
 */
export interface SlotDifferenceCollection extends Array<SlotDifference> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of deleted sites
 * @extends Array<DeletedSite>
 */
export interface DeletedSiteCollection extends Array<DeletedSite> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of app deployments
 * @extends Array<Deployment>
 */
export interface DeploymentCollection extends Array<Deployment> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of site instances
 * @extends Array<SiteInstance>
 */
export interface SiteInstanceCollection extends Array<SiteInstance> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of host name bindings
 * @extends Array<HostNameBinding>
 */
export interface HostNameBindingCollection extends Array<HostNameBinding> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of Backup Items
 * @extends Array<BackupItem>
 */
export interface BackupItemCollection extends Array<BackupItem> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of Top Level Domains
 * @extends Array<TopLevelDomain>
 */
export interface TopLevelDomainCollection extends Array<TopLevelDomain> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of Tld Legal Agreements
 * @extends Array<TldLegalAgreement>
 */
export interface TldLegalAgreementCollection extends Array<TldLegalAgreement> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of Apis
 * @extends Array<ApiEntity>
 */
export interface ApisCollection extends Array<ApiEntity> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of connections
 * @extends Array<Connection>
 */
export interface ConnectionCollection extends Array<Connection> {
  /**
   * Link to next page of resources
   */
  nextLink?: string;
}

/**
 * Defines values for KeyVaultSecretStatus.
 * Possible values include: 'Initialized', 'WaitingOnCertificateOrder', 'Succeeded',
 * 'CertificateOrderFailed', 'OperationNotPermittedOnKeyVault',
 * 'AzureServiceUnauthorizedToAccessKeyVault', 'KeyVaultDoesNotExist',
 * 'KeyVaultSecretDoesNotExist', 'UnknownError', 'Unknown'
 * @readonly
 * @enum {string}
 */
export type KeyVaultSecretStatus = 'Initialized' | 'WaitingOnCertificateOrder' | 'Succeeded' | 'CertificateOrderFailed' | 'OperationNotPermittedOnKeyVault' | 'AzureServiceUnauthorizedToAccessKeyVault' | 'KeyVaultDoesNotExist' | 'KeyVaultSecretDoesNotExist' | 'UnknownError' | 'Unknown';

/**
 * Defines values for CertificateProductType.
 * Possible values include: 'StandardDomainValidatedSsl', 'StandardDomainValidatedWildCardSsl'
 * @readonly
 * @enum {string}
 */
export type CertificateProductType = 'StandardDomainValidatedSsl' | 'StandardDomainValidatedWildCardSsl';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Canceled', 'InProgress', 'Deleting'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Succeeded' | 'Failed' | 'Canceled' | 'InProgress' | 'Deleting';

/**
 * Defines values for CertificateOrderStatus.
 * Possible values include: 'Pendingissuance', 'Issued', 'Revoked', 'Canceled', 'Denied',
 * 'Pendingrevocation', 'PendingRekey', 'Unused', 'Expired', 'NotSubmitted'
 * @readonly
 * @enum {string}
 */
export type CertificateOrderStatus = 'Pendingissuance' | 'Issued' | 'Revoked' | 'Canceled' | 'Denied' | 'Pendingrevocation' | 'PendingRekey' | 'Unused' | 'Expired' | 'NotSubmitted';

/**
 * Defines values for CertificateOrderActionType.
 * Possible values include: 'CertificateIssued', 'CertificateOrderCanceled',
 * 'CertificateOrderCreated', 'CertificateRevoked', 'DomainValidationComplete', 'FraudDetected',
 * 'OrgNameChange', 'OrgValidationComplete', 'SanDrop'
 * @readonly
 * @enum {string}
 */
export type CertificateOrderActionType = 'CertificateIssued' | 'CertificateOrderCanceled' | 'CertificateOrderCreated' | 'CertificateRevoked' | 'DomainValidationComplete' | 'FraudDetected' | 'OrgNameChange' | 'OrgValidationComplete' | 'SanDrop';

/**
 * Defines values for DomainStatus.
 * Possible values include: 'Active', 'Awaiting', 'Cancelled', 'Confiscated', 'Disabled',
 * 'Excluded', 'Expired', 'Failed', 'Held', 'Locked', 'Parked', 'Pending', 'Reserved', 'Reverted',
 * 'Suspended', 'Transferred', 'Unknown', 'Unlocked', 'Unparked', 'Updated', 'JsonConverterFailed'
 * @readonly
 * @enum {string}
 */
export type DomainStatus = 'Active' | 'Awaiting' | 'Cancelled' | 'Confiscated' | 'Disabled' | 'Excluded' | 'Expired' | 'Failed' | 'Held' | 'Locked' | 'Parked' | 'Pending' | 'Reserved' | 'Reverted' | 'Suspended' | 'Transferred' | 'Unknown' | 'Unlocked' | 'Unparked' | 'Updated' | 'JsonConverterFailed';

/**
 * Defines values for AzureResourceType.
 * Possible values include: 'Website', 'TrafficManager'
 * @readonly
 * @enum {string}
 */
export type AzureResourceType = 'Website' | 'TrafficManager';

/**
 * Defines values for CustomHostNameDnsRecordType.
 * Possible values include: 'CName', 'A'
 * @readonly
 * @enum {string}
 */
export type CustomHostNameDnsRecordType = 'CName' | 'A';

/**
 * Defines values for HostNameType.
 * Possible values include: 'Verified', 'Managed'
 * @readonly
 * @enum {string}
 */
export type HostNameType = 'Verified' | 'Managed';

/**
 * Defines values for StatusOptions.
 * Possible values include: 'Ready', 'Pending'
 * @readonly
 * @enum {string}
 */
export type StatusOptions = 'Ready' | 'Pending';

/**
 * Defines values for UsageState.
 * Possible values include: 'Normal', 'Exceeded'
 * @readonly
 * @enum {string}
 */
export type UsageState = 'Normal' | 'Exceeded';

/**
 * Defines values for SiteAvailabilityState.
 * Possible values include: 'Normal', 'Limited', 'DisasterRecoveryMode'
 * @readonly
 * @enum {string}
 */
export type SiteAvailabilityState = 'Normal' | 'Limited' | 'DisasterRecoveryMode';

/**
 * Defines values for SslState.
 * Possible values include: 'Disabled', 'SniEnabled', 'IpBasedEnabled'
 * @readonly
 * @enum {string}
 */
export type SslState = 'Disabled' | 'SniEnabled' | 'IpBasedEnabled';

/**
 * Defines values for DatabaseServerType.
 * Possible values include: 'MySql', 'SQLServer', 'SQLAzure', 'Custom'
 * @readonly
 * @enum {string}
 */
export type DatabaseServerType = 'MySql' | 'SQLServer' | 'SQLAzure' | 'Custom';

/**
 * Defines values for ManagedPipelineMode.
 * Possible values include: 'Integrated', 'Classic'
 * @readonly
 * @enum {string}
 */
export type ManagedPipelineMode = 'Integrated' | 'Classic';

/**
 * Defines values for SiteLoadBalancing.
 * Possible values include: 'WeightedRoundRobin', 'LeastRequests', 'LeastResponseTime',
 * 'WeightedTotalTraffic', 'RequestHash'
 * @readonly
 * @enum {string}
 */
export type SiteLoadBalancing = 'WeightedRoundRobin' | 'LeastRequests' | 'LeastResponseTime' | 'WeightedTotalTraffic' | 'RequestHash';

/**
 * Defines values for AutoHealActionType.
 * Possible values include: 'Recycle', 'LogEvent', 'CustomAction'
 * @readonly
 * @enum {string}
 */
export type AutoHealActionType = 'Recycle' | 'LogEvent' | 'CustomAction';

/**
 * Defines values for UnauthenticatedClientAction.
 * Possible values include: 'RedirectToLoginPage', 'AllowAnonymous'
 * @readonly
 * @enum {string}
 */
export type UnauthenticatedClientAction = 'RedirectToLoginPage' | 'AllowAnonymous';

/**
 * Defines values for BuiltInAuthenticationProvider.
 * Possible values include: 'AzureActiveDirectory', 'Facebook', 'Google', 'MicrosoftAccount',
 * 'Twitter'
 * @readonly
 * @enum {string}
 */
export type BuiltInAuthenticationProvider = 'AzureActiveDirectory' | 'Facebook' | 'Google' | 'MicrosoftAccount' | 'Twitter';

/**
 * Defines values for HostingEnvironmentStatus.
 * Possible values include: 'Preparing', 'Ready', 'Scaling', 'Deleting'
 * @readonly
 * @enum {string}
 */
export type HostingEnvironmentStatus = 'Preparing' | 'Ready' | 'Scaling' | 'Deleting';

/**
 * Defines values for InternalLoadBalancingMode.
 * Possible values include: 'None', 'Web', 'Publishing'
 * @readonly
 * @enum {string}
 */
export type InternalLoadBalancingMode = 'None' | 'Web' | 'Publishing';

/**
 * Defines values for ComputeModeOptions.
 * Possible values include: 'Shared', 'Dedicated', 'Dynamic'
 * @readonly
 * @enum {string}
 */
export type ComputeModeOptions = 'Shared' | 'Dedicated' | 'Dynamic';

/**
 * Defines values for WorkerSizeOptions.
 * Possible values include: 'Default', 'Small', 'Medium', 'Large'
 * @readonly
 * @enum {string}
 */
export type WorkerSizeOptions = 'Default' | 'Small' | 'Medium' | 'Large';

/**
 * Defines values for AccessControlEntryAction.
 * Possible values include: 'Permit', 'Deny'
 * @readonly
 * @enum {string}
 */
export type AccessControlEntryAction = 'Permit' | 'Deny';

/**
 * Defines values for ManagedHostingEnvironmentStatus.
 * Possible values include: 'Preparing', 'Ready', 'Deleting'
 * @readonly
 * @enum {string}
 */
export type ManagedHostingEnvironmentStatus = 'Preparing' | 'Ready' | 'Deleting';

/**
 * Defines values for DomainType.
 * Possible values include: 'Regular', 'SoftDeleted'
 * @readonly
 * @enum {string}
 */
export type DomainType = 'Regular' | 'SoftDeleted';

/**
 * Defines values for NotificationLevel.
 * Possible values include: 'Critical', 'Warning', 'Information', 'NonUrgentSuggestion'
 * @readonly
 * @enum {string}
 */
export type NotificationLevel = 'Critical' | 'Warning' | 'Information' | 'NonUrgentSuggestion';

/**
 * Defines values for Channels.
 * Possible values include: 'Notification', 'Api', 'Email', 'All'
 * @readonly
 * @enum {string}
 */
export type Channels = 'Notification' | 'Api' | 'Email' | 'All';

/**
 * Defines values for CloneAbilityResult.
 * Possible values include: 'Cloneable', 'PartiallyCloneable', 'NotCloneable'
 * @readonly
 * @enum {string}
 */
export type CloneAbilityResult = 'Cloneable' | 'PartiallyCloneable' | 'NotCloneable';

/**
 * Defines values for LogLevel.
 * Possible values include: 'Off', 'Verbose', 'Information', 'Warning', 'Error'
 * @readonly
 * @enum {string}
 */
export type LogLevel = 'Off' | 'Verbose' | 'Information' | 'Warning' | 'Error';

/**
 * Defines values for FrequencyUnit.
 * Possible values include: 'Day', 'Hour'
 * @readonly
 * @enum {string}
 */
export type FrequencyUnit = 'Day' | 'Hour';

/**
 * Defines values for BackupRestoreOperationType.
 * Possible values include: 'Default', 'Clone', 'Relocation'
 * @readonly
 * @enum {string}
 */
export type BackupRestoreOperationType = 'Default' | 'Clone' | 'Relocation';

/**
 * Defines values for BackupItemStatus.
 * Possible values include: 'InProgress', 'Failed', 'Succeeded', 'TimedOut', 'Created', 'Skipped',
 * 'PartiallySucceeded', 'DeleteInProgress', 'DeleteFailed', 'Deleted'
 * @readonly
 * @enum {string}
 */
export type BackupItemStatus = 'InProgress' | 'Failed' | 'Succeeded' | 'TimedOut' | 'Created' | 'Skipped' | 'PartiallySucceeded' | 'DeleteInProgress' | 'DeleteFailed' | 'Deleted';

/**
 * Defines values for ConnectionParameterType.
 * Possible values include: 'string', 'securestring', 'secureobject', 'int', 'bool', 'object',
 * 'array', 'oauthSetting', 'connection'
 * @readonly
 * @enum {string}
 */
export type ConnectionParameterType = 'string' | 'securestring' | 'secureobject' | 'int' | 'bool' | 'object' | 'array' | 'oauthSetting' | 'connection';

/**
 * Defines values for PrincipalType.
 * Possible values include: 'ActiveDirectory', 'Connection', 'MicrosoftAccount'
 * @readonly
 * @enum {string}
 */
export type PrincipalType = 'ActiveDirectory' | 'Connection' | 'MicrosoftAccount';

/**
 * Defines values for LinkState.
 * Possible values include: 'Unauthenticated', 'Authenticated', 'Error'
 * @readonly
 * @enum {string}
 */
export type LinkState = 'Unauthenticated' | 'Authenticated' | 'Error';

/**
 * Contains response data for the getCertificate operation.
 */
export type CertificateOrdersGetCertificateResponse = CertificateOrderCertificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateOrderCertificate;
    };
};

/**
 * Contains response data for the createOrUpdateCertificate operation.
 */
export type CertificateOrdersCreateOrUpdateCertificateResponse = CertificateOrderCertificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateOrderCertificate;
    };
};

/**
 * Contains response data for the deleteCertificate operation.
 */
export type CertificateOrdersDeleteCertificateResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the updateCertificate operation.
 */
export type CertificateOrdersUpdateCertificateResponse = CertificateOrderCertificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateOrderCertificate;
    };
};

/**
 * Contains response data for the getCertificateOrder operation.
 */
export type CertificateOrdersGetCertificateOrderResponse = CertificateOrder & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateOrder;
    };
};

/**
 * Contains response data for the createOrUpdateCertificateOrder operation.
 */
export type CertificateOrdersCreateOrUpdateCertificateOrderResponse = CertificateOrder & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateOrder;
    };
};

/**
 * Contains response data for the deleteCertificateOrder operation.
 */
export type CertificateOrdersDeleteCertificateOrderResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the updateCertificateOrder operation.
 */
export type CertificateOrdersUpdateCertificateOrderResponse = CertificateOrder & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateOrder;
    };
};

/**
 * Contains response data for the getCertificateOrders operation.
 */
export type CertificateOrdersGetCertificateOrdersResponse = CertificateOrderCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateOrderCollection;
    };
};

/**
 * Contains response data for the getCertificates operation.
 */
export type CertificateOrdersGetCertificatesResponse = CertificateOrderCertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateOrderCertificateCollection;
    };
};

/**
 * Contains response data for the reissueCertificateOrder operation.
 */
export type CertificateOrdersReissueCertificateOrderResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the renewCertificateOrder operation.
 */
export type CertificateOrdersRenewCertificateOrderResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the retrieveCertificateActions operation.
 */
export type CertificateOrdersRetrieveCertificateActionsResponse = Array<CertificateOrderAction> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateOrderAction[];
    };
};

/**
 * Contains response data for the retrieveCertificateEmailHistory operation.
 */
export type CertificateOrdersRetrieveCertificateEmailHistoryResponse = Array<CertificateEmail> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateEmail[];
    };
};

/**
 * Contains response data for the resendCertificateEmail operation.
 */
export type CertificateOrdersResendCertificateEmailResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the verifyDomainOwnership operation.
 */
export type CertificateOrdersVerifyDomainOwnershipResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getCertificateOrdersNext operation.
 */
export type CertificateOrdersGetCertificateOrdersNextResponse = CertificateOrderCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateOrderCollection;
    };
};

/**
 * Contains response data for the getCertificatesNext operation.
 */
export type CertificateOrdersGetCertificatesNextResponse = CertificateOrderCertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateOrderCertificateCollection;
    };
};

/**
 * Contains response data for the getCertificates operation.
 */
export type CertificatesGetCertificatesResponse = CertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateCollection;
    };
};

/**
 * Contains response data for the getCertificate operation.
 */
export type CertificatesGetCertificateResponse = Certificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Certificate;
    };
};

/**
 * Contains response data for the createOrUpdateCertificate operation.
 */
export type CertificatesCreateOrUpdateCertificateResponse = Certificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Certificate;
    };
};

/**
 * Contains response data for the deleteCertificate operation.
 */
export type CertificatesDeleteCertificateResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the updateCertificate operation.
 */
export type CertificatesUpdateCertificateResponse = Certificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Certificate;
    };
};

/**
 * Contains response data for the getCsrs operation.
 */
export type CertificatesGetCsrsResponse = Array<Csr> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Csr[];
    };
};

/**
 * Contains response data for the getCsr operation.
 */
export type CertificatesGetCsrResponse = Csr & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Csr;
    };
};

/**
 * Contains response data for the createOrUpdateCsr operation.
 */
export type CertificatesCreateOrUpdateCsrResponse = Csr & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Csr;
    };
};

/**
 * Contains response data for the deleteCsr operation.
 */
export type CertificatesDeleteCsrResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the updateCsr operation.
 */
export type CertificatesUpdateCsrResponse = Csr & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Csr;
    };
};

/**
 * Contains response data for the getCertificatesNext operation.
 */
export type CertificatesGetCertificatesNextResponse = CertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateCollection;
    };
};

/**
 * Contains response data for the getClassicMobileServices operation.
 */
export type ClassicMobileServicesGetClassicMobileServicesResponse = ClassicMobileServiceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClassicMobileServiceCollection;
    };
};

/**
 * Contains response data for the getClassicMobileService operation.
 */
export type ClassicMobileServicesGetClassicMobileServiceResponse = ClassicMobileService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClassicMobileService;
    };
};

/**
 * Contains response data for the deleteClassicMobileService operation.
 */
export type ClassicMobileServicesDeleteClassicMobileServiceResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getClassicMobileServicesNext operation.
 */
export type ClassicMobileServicesGetClassicMobileServicesNextResponse = ClassicMobileServiceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClassicMobileServiceCollection;
    };
};

/**
 * Contains response data for the getDomains operation.
 */
export type DomainsGetDomainsResponse = DomainCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainCollection;
    };
};

/**
 * Contains response data for the getDomain operation.
 */
export type DomainsGetDomainResponse = Domain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Domain;
    };
};

/**
 * Contains response data for the createOrUpdateDomain operation.
 */
export type DomainsCreateOrUpdateDomainResponse = Domain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Domain;
    };
};

/**
 * Contains response data for the deleteDomain operation.
 */
export type DomainsDeleteDomainResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the updateDomain operation.
 */
export type DomainsUpdateDomainResponse = Domain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Domain;
    };
};

/**
 * Contains response data for the getDomainOperation operation.
 */
export type DomainsGetDomainOperationResponse = Domain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Domain;
    };
};

/**
 * Contains response data for the getDomainsNext operation.
 */
export type DomainsGetDomainsNextResponse = DomainCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainCollection;
    };
};

/**
 * Contains response data for the getSubscriptionPublishingCredentials operation.
 */
export type GlobalGetSubscriptionPublishingCredentialsResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the updateSubscriptionPublishingCredentials operation.
 */
export type GlobalUpdateSubscriptionPublishingCredentialsResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the getSubscriptionGeoRegions operation.
 */
export type GlobalGetSubscriptionGeoRegionsResponse = GeoRegionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GeoRegionCollection;
    };
};

/**
 * Contains response data for the getAllCertificates operation.
 */
export type GlobalGetAllCertificatesResponse = CertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateCollection;
    };
};

/**
 * Contains response data for the getAllServerFarms operation.
 */
export type GlobalGetAllServerFarmsResponse = ServerFarmCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerFarmCollection;
    };
};

/**
 * Contains response data for the getAllSites operation.
 */
export type GlobalGetAllSitesResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the getAllHostingEnvironments operation.
 */
export type GlobalGetAllHostingEnvironmentsResponse = HostingEnvironmentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostingEnvironmentCollection;
    };
};

/**
 * Contains response data for the getAllManagedHostingEnvironments operation.
 */
export type GlobalGetAllManagedHostingEnvironmentsResponse = ManagedHostingEnvironmentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedHostingEnvironmentCollection;
    };
};

/**
 * Contains response data for the getAllClassicMobileServices operation.
 */
export type GlobalGetAllClassicMobileServicesResponse = ClassicMobileServiceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClassicMobileServiceCollection;
    };
};

/**
 * Contains response data for the listPremierAddOnOffers operation.
 */
export type GlobalListPremierAddOnOffersResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the isHostingEnvironmentNameAvailable operation.
 */
export type GlobalIsHostingEnvironmentNameAvailableResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the isHostingEnvironmentWithLegacyNameAvailable operation.
 */
export type GlobalIsHostingEnvironmentWithLegacyNameAvailableResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type GlobalCheckNameAvailabilityResponse = ResourceNameAvailability & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceNameAvailability;
    };
};

/**
 * Contains response data for the getSubscriptionGeoRegionsNext operation.
 */
export type GlobalGetSubscriptionGeoRegionsNextResponse = GeoRegionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GeoRegionCollection;
    };
};

/**
 * Contains response data for the getAllCertificatesNext operation.
 */
export type GlobalGetAllCertificatesNextResponse = CertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateCollection;
    };
};

/**
 * Contains response data for the getAllServerFarmsNext operation.
 */
export type GlobalGetAllServerFarmsNextResponse = ServerFarmCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerFarmCollection;
    };
};

/**
 * Contains response data for the getAllSitesNext operation.
 */
export type GlobalGetAllSitesNextResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the getAllHostingEnvironmentsNext operation.
 */
export type GlobalGetAllHostingEnvironmentsNextResponse = HostingEnvironmentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostingEnvironmentCollection;
    };
};

/**
 * Contains response data for the getAllManagedHostingEnvironmentsNext operation.
 */
export type GlobalGetAllManagedHostingEnvironmentsNextResponse = ManagedHostingEnvironmentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedHostingEnvironmentCollection;
    };
};

/**
 * Contains response data for the getAllClassicMobileServicesNext operation.
 */
export type GlobalGetAllClassicMobileServicesNextResponse = ClassicMobileServiceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClassicMobileServiceCollection;
    };
};

/**
 * Contains response data for the getAllCertificateOrders operation.
 */
export type GlobalCertificateOrderGetAllCertificateOrdersResponse = CertificateOrderCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateOrderCollection;
    };
};

/**
 * Contains response data for the validateCertificatePurchaseInformation operation.
 */
export type GlobalCertificateOrderValidateCertificatePurchaseInformationResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getAllCertificateOrdersNext operation.
 */
export type GlobalCertificateOrderGetAllCertificateOrdersNextResponse = CertificateOrderCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateOrderCollection;
    };
};

/**
 * Contains response data for the getAllDomains operation.
 */
export type GlobalDomainRegistrationGetAllDomainsResponse = DomainCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainCollection;
    };
};

/**
 * Contains response data for the getDomainControlCenterSsoRequest operation.
 */
export type GlobalDomainRegistrationGetDomainControlCenterSsoRequestResponse = DomainControlCenterSsoRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainControlCenterSsoRequest;
    };
};

/**
 * Contains response data for the validateDomainPurchaseInformation operation.
 */
export type GlobalDomainRegistrationValidateDomainPurchaseInformationResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the checkDomainAvailability operation.
 */
export type GlobalDomainRegistrationCheckDomainAvailabilityResponse = DomainAvailablilityCheckResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainAvailablilityCheckResult;
    };
};

/**
 * Contains response data for the listDomainRecommendations operation.
 */
export type GlobalDomainRegistrationListDomainRecommendationsResponse = NameIdentifierCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NameIdentifierCollection;
    };
};

/**
 * Contains response data for the getAllDomainsNext operation.
 */
export type GlobalDomainRegistrationGetAllDomainsNextResponse = DomainCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainCollection;
    };
};

/**
 * Contains response data for the listDomainRecommendationsNext operation.
 */
export type GlobalDomainRegistrationListDomainRecommendationsNextResponse = NameIdentifierCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NameIdentifierCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironment operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentResponse = HostingEnvironment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostingEnvironment;
    };
};

/**
 * Contains response data for the createOrUpdateHostingEnvironment operation.
 */
export type HostingEnvironmentsCreateOrUpdateHostingEnvironmentResponse = HostingEnvironment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostingEnvironment;
    };
};

/**
 * Contains response data for the deleteHostingEnvironment operation.
 */
export type HostingEnvironmentsDeleteHostingEnvironmentResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getHostingEnvironmentDiagnostics operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentDiagnosticsResponse = Array<HostingEnvironmentDiagnostics> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostingEnvironmentDiagnostics[];
    };
};

/**
 * Contains response data for the getHostingEnvironmentDiagnosticsItem operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentDiagnosticsItemResponse = HostingEnvironmentDiagnostics & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostingEnvironmentDiagnostics;
    };
};

/**
 * Contains response data for the getHostingEnvironmentCapacities operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentCapacitiesResponse = StampCapacityCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StampCapacityCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentVips operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentVipsResponse = AddressResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AddressResponse;
    };
};

/**
 * Contains response data for the getHostingEnvironments operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentsResponse = HostingEnvironmentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostingEnvironmentCollection;
    };
};

/**
 * Contains response data for the rebootHostingEnvironment operation.
 */
export type HostingEnvironmentsRebootHostingEnvironmentResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getHostingEnvironmentOperations operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentOperationsResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getHostingEnvironmentOperation operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentOperationResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getHostingEnvironmentMetrics operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentMetricsResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentMetricDefinitions operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentMetricDefinitionsResponse = MetricDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinition;
    };
};

/**
 * Contains response data for the getHostingEnvironmentUsages operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentUsagesResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentMultiRoleMetrics operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentMultiRoleMetricsResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentWebWorkerMetrics operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentWebWorkerMetricsResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentMultiRoleMetricDefinitions operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentMultiRoleMetricDefinitionsResponse = MetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinitionCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentWebWorkerMetricDefinitions operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentWebWorkerMetricDefinitionsResponse = MetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinitionCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentMultiRoleUsages operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentMultiRoleUsagesResponse = UsageCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsageCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentWebWorkerUsages operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentWebWorkerUsagesResponse = UsageCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsageCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentSites operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentSitesResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentWebHostingPlans operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentWebHostingPlansResponse = ServerFarmCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerFarmCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentServerFarms operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentServerFarmsResponse = ServerFarmCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerFarmCollection;
    };
};

/**
 * Contains response data for the getMultiRolePools operation.
 */
export type HostingEnvironmentsGetMultiRolePoolsResponse = WorkerPoolCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPoolCollection;
    };
};

/**
 * Contains response data for the getMultiRolePool operation.
 */
export type HostingEnvironmentsGetMultiRolePoolResponse = WorkerPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPool;
    };
};

/**
 * Contains response data for the createOrUpdateMultiRolePool operation.
 */
export type HostingEnvironmentsCreateOrUpdateMultiRolePoolResponse = WorkerPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPool;
    };
};

/**
 * Contains response data for the getMultiRolePoolSkus operation.
 */
export type HostingEnvironmentsGetMultiRolePoolSkusResponse = SkuInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SkuInfoCollection;
    };
};

/**
 * Contains response data for the getWorkerPools operation.
 */
export type HostingEnvironmentsGetWorkerPoolsResponse = WorkerPoolCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPoolCollection;
    };
};

/**
 * Contains response data for the getWorkerPool operation.
 */
export type HostingEnvironmentsGetWorkerPoolResponse = WorkerPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPool;
    };
};

/**
 * Contains response data for the createOrUpdateWorkerPool operation.
 */
export type HostingEnvironmentsCreateOrUpdateWorkerPoolResponse = WorkerPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPool;
    };
};

/**
 * Contains response data for the getWorkerPoolSkus operation.
 */
export type HostingEnvironmentsGetWorkerPoolSkusResponse = SkuInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SkuInfoCollection;
    };
};

/**
 * Contains response data for the getWorkerPoolInstanceMetrics operation.
 */
export type HostingEnvironmentsGetWorkerPoolInstanceMetricsResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getWorkerPoolInstanceMetricDefinitions operation.
 */
export type HostingEnvironmentsGetWorkerPoolInstanceMetricDefinitionsResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getMultiRolePoolInstanceMetrics operation.
 */
export type HostingEnvironmentsGetMultiRolePoolInstanceMetricsResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getMultiRolePoolInstanceMetricDefinitions operation.
 */
export type HostingEnvironmentsGetMultiRolePoolInstanceMetricDefinitionsResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the suspendHostingEnvironment operation.
 */
export type HostingEnvironmentsSuspendHostingEnvironmentResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the resumeHostingEnvironment operation.
 */
export type HostingEnvironmentsResumeHostingEnvironmentResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the beginCreateOrUpdateHostingEnvironment operation.
 */
export type HostingEnvironmentsBeginCreateOrUpdateHostingEnvironmentResponse = HostingEnvironment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostingEnvironment;
    };
};

/**
 * Contains response data for the beginDeleteHostingEnvironment operation.
 */
export type HostingEnvironmentsBeginDeleteHostingEnvironmentResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the beginCreateOrUpdateMultiRolePool operation.
 */
export type HostingEnvironmentsBeginCreateOrUpdateMultiRolePoolResponse = WorkerPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPool;
    };
};

/**
 * Contains response data for the beginCreateOrUpdateWorkerPool operation.
 */
export type HostingEnvironmentsBeginCreateOrUpdateWorkerPoolResponse = WorkerPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPool;
    };
};

/**
 * Contains response data for the beginSuspendHostingEnvironment operation.
 */
export type HostingEnvironmentsBeginSuspendHostingEnvironmentResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the beginResumeHostingEnvironment operation.
 */
export type HostingEnvironmentsBeginResumeHostingEnvironmentResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentCapacitiesNext operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentCapacitiesNextResponse = StampCapacityCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StampCapacityCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentsNext operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentsNextResponse = HostingEnvironmentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostingEnvironmentCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentMetricsNext operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentMetricsNextResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentUsagesNext operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentUsagesNextResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentMultiRoleMetricsNext operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentMultiRoleMetricsNextResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentWebWorkerMetricsNext operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentWebWorkerMetricsNextResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentMultiRoleMetricDefinitionsNext operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentMultiRoleMetricDefinitionsNextResponse = MetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinitionCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentWebWorkerMetricDefinitionsNext operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentWebWorkerMetricDefinitionsNextResponse = MetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinitionCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentMultiRoleUsagesNext operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentMultiRoleUsagesNextResponse = UsageCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsageCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentWebWorkerUsagesNext operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentWebWorkerUsagesNextResponse = UsageCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsageCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentSitesNext operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentSitesNextResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentWebHostingPlansNext operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentWebHostingPlansNextResponse = ServerFarmCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerFarmCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentServerFarmsNext operation.
 */
export type HostingEnvironmentsGetHostingEnvironmentServerFarmsNextResponse = ServerFarmCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerFarmCollection;
    };
};

/**
 * Contains response data for the getMultiRolePoolsNext operation.
 */
export type HostingEnvironmentsGetMultiRolePoolsNextResponse = WorkerPoolCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPoolCollection;
    };
};

/**
 * Contains response data for the getMultiRolePoolSkusNext operation.
 */
export type HostingEnvironmentsGetMultiRolePoolSkusNextResponse = SkuInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SkuInfoCollection;
    };
};

/**
 * Contains response data for the getWorkerPoolsNext operation.
 */
export type HostingEnvironmentsGetWorkerPoolsNextResponse = WorkerPoolCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPoolCollection;
    };
};

/**
 * Contains response data for the getWorkerPoolSkusNext operation.
 */
export type HostingEnvironmentsGetWorkerPoolSkusNextResponse = SkuInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SkuInfoCollection;
    };
};

/**
 * Contains response data for the suspendHostingEnvironmentNext operation.
 */
export type HostingEnvironmentsSuspendHostingEnvironmentNextResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the resumeHostingEnvironmentNext operation.
 */
export type HostingEnvironmentsResumeHostingEnvironmentNextResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the beginSuspendHostingEnvironmentNext operation.
 */
export type HostingEnvironmentsBeginSuspendHostingEnvironmentNextResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the beginResumeHostingEnvironmentNext operation.
 */
export type HostingEnvironmentsBeginResumeHostingEnvironmentNextResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the getManagedHostingEnvironment operation.
 */
export type ManagedHostingEnvironmentsGetManagedHostingEnvironmentResponse = ManagedHostingEnvironment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedHostingEnvironment;
    };
};

/**
 * Contains response data for the createOrUpdateManagedHostingEnvironment operation.
 */
export type ManagedHostingEnvironmentsCreateOrUpdateManagedHostingEnvironmentResponse = HostingEnvironment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostingEnvironment;
    };
};

/**
 * Contains response data for the deleteManagedHostingEnvironment operation.
 */
export type ManagedHostingEnvironmentsDeleteManagedHostingEnvironmentResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getManagedHostingEnvironments operation.
 */
export type ManagedHostingEnvironmentsGetManagedHostingEnvironmentsResponse = HostingEnvironmentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostingEnvironmentCollection;
    };
};

/**
 * Contains response data for the getManagedHostingEnvironmentVips operation.
 */
export type ManagedHostingEnvironmentsGetManagedHostingEnvironmentVipsResponse = AddressResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AddressResponse;
    };
};

/**
 * Contains response data for the getManagedHostingEnvironmentOperation operation.
 */
export type ManagedHostingEnvironmentsGetManagedHostingEnvironmentOperationResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getManagedHostingEnvironmentSites operation.
 */
export type ManagedHostingEnvironmentsGetManagedHostingEnvironmentSitesResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the getManagedHostingEnvironmentWebHostingPlans operation.
 */
export type ManagedHostingEnvironmentsGetManagedHostingEnvironmentWebHostingPlansResponse = ServerFarmCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerFarmCollection;
    };
};

/**
 * Contains response data for the getManagedHostingEnvironmentServerFarms operation.
 */
export type ManagedHostingEnvironmentsGetManagedHostingEnvironmentServerFarmsResponse = ServerFarmCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerFarmCollection;
    };
};

/**
 * Contains response data for the beginCreateOrUpdateManagedHostingEnvironment operation.
 */
export type ManagedHostingEnvironmentsBeginCreateOrUpdateManagedHostingEnvironmentResponse = HostingEnvironment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostingEnvironment;
    };
};

/**
 * Contains response data for the beginDeleteManagedHostingEnvironment operation.
 */
export type ManagedHostingEnvironmentsBeginDeleteManagedHostingEnvironmentResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getManagedHostingEnvironmentsNext operation.
 */
export type ManagedHostingEnvironmentsGetManagedHostingEnvironmentsNextResponse = HostingEnvironmentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostingEnvironmentCollection;
    };
};

/**
 * Contains response data for the getManagedHostingEnvironmentSitesNext operation.
 */
export type ManagedHostingEnvironmentsGetManagedHostingEnvironmentSitesNextResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the getManagedHostingEnvironmentWebHostingPlansNext operation.
 */
export type ManagedHostingEnvironmentsGetManagedHostingEnvironmentWebHostingPlansNextResponse = ServerFarmCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerFarmCollection;
    };
};

/**
 * Contains response data for the getManagedHostingEnvironmentServerFarmsNext operation.
 */
export type ManagedHostingEnvironmentsGetManagedHostingEnvironmentServerFarmsNextResponse = ServerFarmCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerFarmCollection;
    };
};

/**
 * Contains response data for the getSourceControls operation.
 */
export type ProviderGetSourceControlsResponse = SourceControlCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SourceControlCollection;
    };
};

/**
 * Contains response data for the getSourceControl operation.
 */
export type ProviderGetSourceControlResponse = SourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SourceControl;
    };
};

/**
 * Contains response data for the updateSourceControl operation.
 */
export type ProviderUpdateSourceControlResponse = SourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SourceControl;
    };
};

/**
 * Contains response data for the getPublishingUser operation.
 */
export type ProviderGetPublishingUserResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the updatePublishingUser operation.
 */
export type ProviderUpdatePublishingUserResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the getSourceControlsNext operation.
 */
export type ProviderGetSourceControlsNextResponse = SourceControlCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SourceControlCollection;
    };
};

/**
 * Contains response data for the getRecommendationBySubscription operation.
 */
export type RecommendationsGetRecommendationBySubscriptionResponse = Array<Recommendation> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Recommendation[];
    };
};

/**
 * Contains response data for the getRuleDetailsBySiteName operation.
 */
export type RecommendationsGetRuleDetailsBySiteNameResponse = RecommendationRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationRule;
    };
};

/**
 * Contains response data for the getRecommendedRulesForSite operation.
 */
export type RecommendationsGetRecommendedRulesForSiteResponse = Array<Recommendation> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Recommendation[];
    };
};

/**
 * Contains response data for the getRecommendationHistoryForSite operation.
 */
export type RecommendationsGetRecommendationHistoryForSiteResponse = Array<Recommendation> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Recommendation[];
    };
};

/**
 * Contains response data for the getServerFarms operation.
 */
export type ServerFarmsGetServerFarmsResponse = ServerFarmCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerFarmCollection;
    };
};

/**
 * Contains response data for the getServerFarm operation.
 */
export type ServerFarmsGetServerFarmResponse = ServerFarmWithRichSku & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerFarmWithRichSku;
    };
};

/**
 * Contains response data for the createOrUpdateServerFarm operation.
 */
export type ServerFarmsCreateOrUpdateServerFarmResponse = ServerFarmWithRichSku & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerFarmWithRichSku;
    };
};

/**
 * Contains response data for the deleteServerFarm operation.
 */
export type ServerFarmsDeleteServerFarmResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getServerFarmMetrics operation.
 */
export type ServerFarmsGetServerFarmMetricsResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the getServerFarmMetricDefintions operation.
 */
export type ServerFarmsGetServerFarmMetricDefintionsResponse = MetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinitionCollection;
    };
};

/**
 * Contains response data for the getVnetsForServerFarm operation.
 */
export type ServerFarmsGetVnetsForServerFarmResponse = Array<VnetInfo> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo[];
    };
};

/**
 * Contains response data for the getVnetFromServerFarm operation.
 */
export type ServerFarmsGetVnetFromServerFarmResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the getRoutesForVnet operation.
 */
export type ServerFarmsGetRoutesForVnetResponse = Array<VnetRoute> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetRoute[];
    };
};

/**
 * Contains response data for the getRouteForVnet operation.
 */
export type ServerFarmsGetRouteForVnetResponse = Array<VnetRoute> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetRoute[];
    };
};

/**
 * Contains response data for the createOrUpdateVnetRoute operation.
 */
export type ServerFarmsCreateOrUpdateVnetRouteResponse = VnetRoute & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetRoute;
    };
};

/**
 * Contains response data for the deleteVnetRoute operation.
 */
export type ServerFarmsDeleteVnetRouteResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the updateVnetRoute operation.
 */
export type ServerFarmsUpdateVnetRouteResponse = VnetRoute & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetRoute;
    };
};

/**
 * Contains response data for the getServerFarmVnetGateway operation.
 */
export type ServerFarmsGetServerFarmVnetGatewayResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the updateServerFarmVnetGateway operation.
 */
export type ServerFarmsUpdateServerFarmVnetGatewayResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the getServerFarmSites operation.
 */
export type ServerFarmsGetServerFarmSitesResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the rebootWorkerForServerFarm operation.
 */
export type ServerFarmsRebootWorkerForServerFarmResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the restartSitesForServerFarm operation.
 */
export type ServerFarmsRestartSitesForServerFarmResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getServerFarmOperation operation.
 */
export type ServerFarmsGetServerFarmOperationResponse = ServerFarmWithRichSku & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerFarmWithRichSku;
    };
};

/**
 * Contains response data for the beginCreateOrUpdateServerFarm operation.
 */
export type ServerFarmsBeginCreateOrUpdateServerFarmResponse = ServerFarmWithRichSku & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerFarmWithRichSku;
    };
};

/**
 * Contains response data for the getServerFarmsNext operation.
 */
export type ServerFarmsGetServerFarmsNextResponse = ServerFarmCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerFarmCollection;
    };
};

/**
 * Contains response data for the getServerFarmMetricsNext operation.
 */
export type ServerFarmsGetServerFarmMetricsNextResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the getServerFarmMetricDefintionsNext operation.
 */
export type ServerFarmsGetServerFarmMetricDefintionsNextResponse = MetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinitionCollection;
    };
};

/**
 * Contains response data for the getServerFarmSitesNext operation.
 */
export type ServerFarmsGetServerFarmSitesNextResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the getSiteVNETConnectionSlot operation.
 */
export type SitesGetSiteVNETConnectionSlotResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the createOrUpdateSiteVNETConnectionSlot operation.
 */
export type SitesCreateOrUpdateSiteVNETConnectionSlotResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the deleteSiteVNETConnectionSlot operation.
 */
export type SitesDeleteSiteVNETConnectionSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the updateSiteVNETConnectionSlot operation.
 */
export type SitesUpdateSiteVNETConnectionSlotResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the getSiteVNETConnection operation.
 */
export type SitesGetSiteVNETConnectionResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the createOrUpdateSiteVNETConnection operation.
 */
export type SitesCreateOrUpdateSiteVNETConnectionResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the deleteSiteVNETConnection operation.
 */
export type SitesDeleteSiteVNETConnectionResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the updateSiteVNETConnection operation.
 */
export type SitesUpdateSiteVNETConnectionResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the getSiteNetworkFeaturesSlot operation.
 */
export type SitesGetSiteNetworkFeaturesSlotResponse = NetworkFeatures & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkFeatures;
    };
};

/**
 * Contains response data for the getSiteNetworkFeatures operation.
 */
export type SitesGetSiteNetworkFeaturesResponse = NetworkFeatures & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkFeatures;
    };
};

/**
 * Contains response data for the getSiteOperationSlot operation.
 */
export type SitesGetSiteOperationSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSiteOperation operation.
 */
export type SitesGetSiteOperationResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the swapSlotWithProduction operation.
 */
export type SitesSwapSlotWithProductionResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the swapSlotsSlot operation.
 */
export type SitesSwapSlotsSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSlotsDifferencesFromProduction operation.
 */
export type SitesGetSlotsDifferencesFromProductionResponse = SlotDifferenceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SlotDifferenceCollection;
    };
};

/**
 * Contains response data for the getSlotsDifferencesSlot operation.
 */
export type SitesGetSlotsDifferencesSlotResponse = SlotDifferenceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SlotDifferenceCollection;
    };
};

/**
 * Contains response data for the applySlotConfigToProduction operation.
 */
export type SitesApplySlotConfigToProductionResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the applySlotConfigSlot operation.
 */
export type SitesApplySlotConfigSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the resetProductionSlotConfig operation.
 */
export type SitesResetProductionSlotConfigResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the resetSlotConfigSlot operation.
 */
export type SitesResetSlotConfigSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSlotConfigNames operation.
 */
export type SitesGetSlotConfigNamesResponse = SlotConfigNamesResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SlotConfigNamesResource;
    };
};

/**
 * Contains response data for the updateSlotConfigNames operation.
 */
export type SitesUpdateSlotConfigNamesResponse = SlotConfigNamesResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SlotConfigNamesResource;
    };
};

/**
 * Contains response data for the getSiteSlots operation.
 */
export type SitesGetSiteSlotsResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the getSites operation.
 */
export type SitesGetSitesResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the getSite operation.
 */
export type SitesGetSiteResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the createOrUpdateSite operation.
 */
export type SitesCreateOrUpdateSiteResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the deleteSite operation.
 */
export type SitesDeleteSiteResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSiteSlot operation.
 */
export type SitesGetSiteSlotResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the createOrUpdateSiteSlot operation.
 */
export type SitesCreateOrUpdateSiteSlotResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the deleteSiteSlot operation.
 */
export type SitesDeleteSiteSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the isSiteCloneable operation.
 */
export type SitesIsSiteCloneableResponse = SiteCloneability & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCloneability;
    };
};

/**
 * Contains response data for the isSiteCloneableSlot operation.
 */
export type SitesIsSiteCloneableSlotResponse = SiteCloneability & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCloneability;
    };
};

/**
 * Contains response data for the recoverSite operation.
 */
export type SitesRecoverSiteResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the recoverSiteSlot operation.
 */
export type SitesRecoverSiteSlotResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the getSiteSnapshots operation.
 */
export type SitesGetSiteSnapshotsResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSiteSnapshotsSlot operation.
 */
export type SitesGetSiteSnapshotsSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getDeletedSites operation.
 */
export type SitesGetDeletedSitesResponse = DeletedSiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeletedSiteCollection;
    };
};

/**
 * Contains response data for the getDeployments operation.
 */
export type SitesGetDeploymentsResponse = DeploymentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentCollection;
    };
};

/**
 * Contains response data for the getDeploymentsSlot operation.
 */
export type SitesGetDeploymentsSlotResponse = DeploymentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentCollection;
    };
};

/**
 * Contains response data for the getInstanceDeployments operation.
 */
export type SitesGetInstanceDeploymentsResponse = DeploymentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentCollection;
    };
};

/**
 * Contains response data for the getInstanceDeploymentsSlot operation.
 */
export type SitesGetInstanceDeploymentsSlotResponse = DeploymentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentCollection;
    };
};

/**
 * Contains response data for the getInstanceDeployment operation.
 */
export type SitesGetInstanceDeploymentResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the createInstanceDeployment operation.
 */
export type SitesCreateInstanceDeploymentResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the deleteInstanceDeployment operation.
 */
export type SitesDeleteInstanceDeploymentResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getDeployment operation.
 */
export type SitesGetDeploymentResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the createDeployment operation.
 */
export type SitesCreateDeploymentResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the deleteDeployment operation.
 */
export type SitesDeleteDeploymentResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getDeploymentSlot operation.
 */
export type SitesGetDeploymentSlotResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the createDeploymentSlot operation.
 */
export type SitesCreateDeploymentSlotResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the deleteDeploymentSlot operation.
 */
export type SitesDeleteDeploymentSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getInstanceDeploymentSlot operation.
 */
export type SitesGetInstanceDeploymentSlotResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the createInstanceDeploymentSlot operation.
 */
export type SitesCreateInstanceDeploymentSlotResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the deleteInstanceDeploymentSlot operation.
 */
export type SitesDeleteInstanceDeploymentSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSiteInstanceIdentifiers operation.
 */
export type SitesGetSiteInstanceIdentifiersResponse = SiteInstanceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteInstanceCollection;
    };
};

/**
 * Contains response data for the getSiteInstanceIdentifiersSlot operation.
 */
export type SitesGetSiteInstanceIdentifiersSlotResponse = SiteInstanceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteInstanceCollection;
    };
};

/**
 * Contains response data for the getSiteHostNameBindings operation.
 */
export type SitesGetSiteHostNameBindingsResponse = HostNameBindingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBindingCollection;
    };
};

/**
 * Contains response data for the getSiteHostNameBindingsSlot operation.
 */
export type SitesGetSiteHostNameBindingsSlotResponse = HostNameBindingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBindingCollection;
    };
};

/**
 * Contains response data for the getSiteHostNameBinding operation.
 */
export type SitesGetSiteHostNameBindingResponse = HostNameBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBinding;
    };
};

/**
 * Contains response data for the createOrUpdateSiteHostNameBinding operation.
 */
export type SitesCreateOrUpdateSiteHostNameBindingResponse = HostNameBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBinding;
    };
};

/**
 * Contains response data for the deleteSiteHostNameBinding operation.
 */
export type SitesDeleteSiteHostNameBindingResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSiteHostNameBindingSlot operation.
 */
export type SitesGetSiteHostNameBindingSlotResponse = HostNameBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBinding;
    };
};

/**
 * Contains response data for the createOrUpdateSiteHostNameBindingSlot operation.
 */
export type SitesCreateOrUpdateSiteHostNameBindingSlotResponse = HostNameBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBinding;
    };
};

/**
 * Contains response data for the deleteSiteHostNameBindingSlot operation.
 */
export type SitesDeleteSiteHostNameBindingSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSiteConfig operation.
 */
export type SitesGetSiteConfigResponse = SiteConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfig;
    };
};

/**
 * Contains response data for the createOrUpdateSiteConfig operation.
 */
export type SitesCreateOrUpdateSiteConfigResponse = SiteConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfig;
    };
};

/**
 * Contains response data for the updateSiteConfig operation.
 */
export type SitesUpdateSiteConfigResponse = SiteConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfig;
    };
};

/**
 * Contains response data for the getSiteConfigSlot operation.
 */
export type SitesGetSiteConfigSlotResponse = SiteConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfig;
    };
};

/**
 * Contains response data for the createOrUpdateSiteConfigSlot operation.
 */
export type SitesCreateOrUpdateSiteConfigSlotResponse = SiteConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfig;
    };
};

/**
 * Contains response data for the updateSiteConfigSlot operation.
 */
export type SitesUpdateSiteConfigSlotResponse = SiteConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfig;
    };
};

/**
 * Contains response data for the getSiteSourceControl operation.
 */
export type SitesGetSiteSourceControlResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the createOrUpdateSiteSourceControl operation.
 */
export type SitesCreateOrUpdateSiteSourceControlResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the deleteSiteSourceControl operation.
 */
export type SitesDeleteSiteSourceControlResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the updateSiteSourceControl operation.
 */
export type SitesUpdateSiteSourceControlResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the getSiteSourceControlSlot operation.
 */
export type SitesGetSiteSourceControlSlotResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the createOrUpdateSiteSourceControlSlot operation.
 */
export type SitesCreateOrUpdateSiteSourceControlSlotResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the deleteSiteSourceControlSlot operation.
 */
export type SitesDeleteSiteSourceControlSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the updateSiteSourceControlSlot operation.
 */
export type SitesUpdateSiteSourceControlSlotResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the listSiteAppSettingsSlot operation.
 */
export type SitesListSiteAppSettingsSlotResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the listSiteAppSettings operation.
 */
export type SitesListSiteAppSettingsResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the updateSiteAppSettings operation.
 */
export type SitesUpdateSiteAppSettingsResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the updateSiteAppSettingsSlot operation.
 */
export type SitesUpdateSiteAppSettingsSlotResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the listSiteConnectionStrings operation.
 */
export type SitesListSiteConnectionStringsResponse = ConnectionStringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConnectionStringDictionary;
    };
};

/**
 * Contains response data for the listSiteConnectionStringsSlot operation.
 */
export type SitesListSiteConnectionStringsSlotResponse = ConnectionStringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConnectionStringDictionary;
    };
};

/**
 * Contains response data for the updateSiteConnectionStrings operation.
 */
export type SitesUpdateSiteConnectionStringsResponse = ConnectionStringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConnectionStringDictionary;
    };
};

/**
 * Contains response data for the updateSiteConnectionStringsSlot operation.
 */
export type SitesUpdateSiteConnectionStringsSlotResponse = ConnectionStringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConnectionStringDictionary;
    };
};

/**
 * Contains response data for the listSiteAuthSettings operation.
 */
export type SitesListSiteAuthSettingsResponse = SiteAuthSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteAuthSettings;
    };
};

/**
 * Contains response data for the listSiteAuthSettingsSlot operation.
 */
export type SitesListSiteAuthSettingsSlotResponse = SiteAuthSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteAuthSettings;
    };
};

/**
 * Contains response data for the updateSiteAuthSettings operation.
 */
export type SitesUpdateSiteAuthSettingsResponse = SiteAuthSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteAuthSettings;
    };
};

/**
 * Contains response data for the updateSiteAuthSettingsSlot operation.
 */
export type SitesUpdateSiteAuthSettingsSlotResponse = SiteAuthSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteAuthSettings;
    };
};

/**
 * Contains response data for the listSitePublishingCredentials operation.
 */
export type SitesListSitePublishingCredentialsResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the listSitePublishingCredentialsSlot operation.
 */
export type SitesListSitePublishingCredentialsSlotResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the listSiteMetadata operation.
 */
export type SitesListSiteMetadataResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the listSiteMetadataSlot operation.
 */
export type SitesListSiteMetadataSlotResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the updateSiteMetadata operation.
 */
export type SitesUpdateSiteMetadataResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the updateSiteMetadataSlot operation.
 */
export type SitesUpdateSiteMetadataSlotResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the getSiteLogsConfig operation.
 */
export type SitesGetSiteLogsConfigResponse = SiteLogsConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteLogsConfig;
    };
};

/**
 * Contains response data for the updateSiteLogsConfig operation.
 */
export type SitesUpdateSiteLogsConfigResponse = SiteLogsConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteLogsConfig;
    };
};

/**
 * Contains response data for the getSiteLogsConfigSlot operation.
 */
export type SitesGetSiteLogsConfigSlotResponse = SiteLogsConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteLogsConfig;
    };
};

/**
 * Contains response data for the updateSiteLogsConfigSlot operation.
 */
export type SitesUpdateSiteLogsConfigSlotResponse = SiteLogsConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteLogsConfig;
    };
};

/**
 * Contains response data for the listSitePremierAddOns operation.
 */
export type SitesListSitePremierAddOnsResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the listSitePremierAddOnsSlot operation.
 */
export type SitesListSitePremierAddOnsSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSitePremierAddOn operation.
 */
export type SitesGetSitePremierAddOnResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the addSitePremierAddOn operation.
 */
export type SitesAddSitePremierAddOnResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteSitePremierAddOn operation.
 */
export type SitesDeleteSitePremierAddOnResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSitePremierAddOnSlot operation.
 */
export type SitesGetSitePremierAddOnSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the addSitePremierAddOnSlot operation.
 */
export type SitesAddSitePremierAddOnSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteSitePremierAddOnSlot operation.
 */
export type SitesDeleteSitePremierAddOnSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSiteBackupConfiguration operation.
 */
export type SitesGetSiteBackupConfigurationResponse = BackupRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupRequest;
    };
};

/**
 * Contains response data for the getSiteBackupConfigurationSlot operation.
 */
export type SitesGetSiteBackupConfigurationSlotResponse = BackupRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupRequest;
    };
};

/**
 * Contains response data for the updateSiteBackupConfiguration operation.
 */
export type SitesUpdateSiteBackupConfigurationResponse = BackupRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupRequest;
    };
};

/**
 * Contains response data for the updateSiteBackupConfigurationSlot operation.
 */
export type SitesUpdateSiteBackupConfigurationSlotResponse = BackupRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupRequest;
    };
};

/**
 * Contains response data for the backupSite operation.
 */
export type SitesBackupSiteResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the backupSiteSlot operation.
 */
export type SitesBackupSiteSlotResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the discoverSiteRestore operation.
 */
export type SitesDiscoverSiteRestoreResponse = RestoreRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestoreRequest;
    };
};

/**
 * Contains response data for the discoverSiteRestoreSlot operation.
 */
export type SitesDiscoverSiteRestoreSlotResponse = RestoreRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestoreRequest;
    };
};

/**
 * Contains response data for the listSiteBackups operation.
 */
export type SitesListSiteBackupsResponse = BackupItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItemCollection;
    };
};

/**
 * Contains response data for the listSiteBackupsSlot operation.
 */
export type SitesListSiteBackupsSlotResponse = BackupItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItemCollection;
    };
};

/**
 * Contains response data for the getSiteBackupStatus operation.
 */
export type SitesGetSiteBackupStatusResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the deleteBackup operation.
 */
export type SitesDeleteBackupResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the getSiteBackupStatusSlot operation.
 */
export type SitesGetSiteBackupStatusSlotResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the deleteBackupSlot operation.
 */
export type SitesDeleteBackupSlotResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the getSiteBackupStatusSecretsSlot operation.
 */
export type SitesGetSiteBackupStatusSecretsSlotResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the getSiteBackupStatusSecrets operation.
 */
export type SitesGetSiteBackupStatusSecretsResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the restoreSite operation.
 */
export type SitesRestoreSiteResponse = RestoreResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestoreResponse;
    };
};

/**
 * Contains response data for the restoreSiteSlot operation.
 */
export type SitesRestoreSiteSlotResponse = RestoreResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestoreResponse;
    };
};

/**
 * Contains response data for the getSiteUsages operation.
 */
export type SitesGetSiteUsagesResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the getSiteUsagesSlot operation.
 */
export type SitesGetSiteUsagesSlotResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the getSiteMetrics operation.
 */
export type SitesGetSiteMetricsResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the getSiteMetricsSlot operation.
 */
export type SitesGetSiteMetricsSlotResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the getSiteMetricDefinitionsSlot operation.
 */
export type SitesGetSiteMetricDefinitionsSlotResponse = MetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinitionCollection;
    };
};

/**
 * Contains response data for the getSiteMetricDefinitions operation.
 */
export type SitesGetSiteMetricDefinitionsResponse = MetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listSitePublishingProfileXml operation.
 */
export type SitesListSitePublishingProfileXmlResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;

  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the listSitePublishingProfileXmlSlot operation.
 */
export type SitesListSitePublishingProfileXmlSlotResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;

  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the restartSiteSlot operation.
 */
export type SitesRestartSiteSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the restartSite operation.
 */
export type SitesRestartSiteResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the startSite operation.
 */
export type SitesStartSiteResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the startSiteSlot operation.
 */
export type SitesStartSiteSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the stopSite operation.
 */
export type SitesStopSiteResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the stopSiteSlot operation.
 */
export type SitesStopSiteSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the syncSiteRepository operation.
 */
export type SitesSyncSiteRepositoryResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the syncSiteRepositorySlot operation.
 */
export type SitesSyncSiteRepositorySlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the generateNewSitePublishingPasswordSlot operation.
 */
export type SitesGenerateNewSitePublishingPasswordSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the generateNewSitePublishingPassword operation.
 */
export type SitesGenerateNewSitePublishingPasswordResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSiteRelayServiceConnection operation.
 */
export type SitesGetSiteRelayServiceConnectionResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the createOrUpdateSiteRelayServiceConnection operation.
 */
export type SitesCreateOrUpdateSiteRelayServiceConnectionResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the deleteSiteRelayServiceConnection operation.
 */
export type SitesDeleteSiteRelayServiceConnectionResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the updateSiteRelayServiceConnection operation.
 */
export type SitesUpdateSiteRelayServiceConnectionResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the getSiteRelayServiceConnectionSlot operation.
 */
export type SitesGetSiteRelayServiceConnectionSlotResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the createOrUpdateSiteRelayServiceConnectionSlot operation.
 */
export type SitesCreateOrUpdateSiteRelayServiceConnectionSlotResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the deleteSiteRelayServiceConnectionSlot operation.
 */
export type SitesDeleteSiteRelayServiceConnectionSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the updateSiteRelayServiceConnectionSlot operation.
 */
export type SitesUpdateSiteRelayServiceConnectionSlotResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the listSiteRelayServiceConnectionsSlot operation.
 */
export type SitesListSiteRelayServiceConnectionsSlotResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the listSiteRelayServiceConnections operation.
 */
export type SitesListSiteRelayServiceConnectionsResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the getSiteVnetGatewaySlot operation.
 */
export type SitesGetSiteVnetGatewaySlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the createOrUpdateSiteVNETConnectionGatewaySlot operation.
 */
export type SitesCreateOrUpdateSiteVNETConnectionGatewaySlotResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the updateSiteVNETConnectionGatewaySlot operation.
 */
export type SitesUpdateSiteVNETConnectionGatewaySlotResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the getSiteVnetGateway operation.
 */
export type SitesGetSiteVnetGatewayResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the createOrUpdateSiteVNETConnectionGateway operation.
 */
export type SitesCreateOrUpdateSiteVNETConnectionGatewayResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the updateSiteVNETConnectionGateway operation.
 */
export type SitesUpdateSiteVNETConnectionGatewayResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the getSiteVNETConnections operation.
 */
export type SitesGetSiteVNETConnectionsResponse = Array<VnetInfo> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo[];
    };
};

/**
 * Contains response data for the getSiteVNETConnectionsSlot operation.
 */
export type SitesGetSiteVNETConnectionsSlotResponse = Array<VnetInfo> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo[];
    };
};

/**
 * Contains response data for the beginSwapSlotWithProduction operation.
 */
export type SitesBeginSwapSlotWithProductionResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the beginSwapSlotsSlot operation.
 */
export type SitesBeginSwapSlotsSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the beginCreateOrUpdateSite operation.
 */
export type SitesBeginCreateOrUpdateSiteResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the beginCreateOrUpdateSiteSlot operation.
 */
export type SitesBeginCreateOrUpdateSiteSlotResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the beginRecoverSite operation.
 */
export type SitesBeginRecoverSiteResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the beginRecoverSiteSlot operation.
 */
export type SitesBeginRecoverSiteSlotResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the beginListSitePublishingCredentials operation.
 */
export type SitesBeginListSitePublishingCredentialsResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the beginListSitePublishingCredentialsSlot operation.
 */
export type SitesBeginListSitePublishingCredentialsSlotResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the beginRestoreSite operation.
 */
export type SitesBeginRestoreSiteResponse = RestoreResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestoreResponse;
    };
};

/**
 * Contains response data for the beginRestoreSiteSlot operation.
 */
export type SitesBeginRestoreSiteSlotResponse = RestoreResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestoreResponse;
    };
};

/**
 * Contains response data for the getSlotsDifferencesFromProductionNext operation.
 */
export type SitesGetSlotsDifferencesFromProductionNextResponse = SlotDifferenceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SlotDifferenceCollection;
    };
};

/**
 * Contains response data for the getSlotsDifferencesSlotNext operation.
 */
export type SitesGetSlotsDifferencesSlotNextResponse = SlotDifferenceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SlotDifferenceCollection;
    };
};

/**
 * Contains response data for the getSiteSlotsNext operation.
 */
export type SitesGetSiteSlotsNextResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the getSitesNext operation.
 */
export type SitesGetSitesNextResponse = SiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCollection;
    };
};

/**
 * Contains response data for the getDeletedSitesNext operation.
 */
export type SitesGetDeletedSitesNextResponse = DeletedSiteCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeletedSiteCollection;
    };
};

/**
 * Contains response data for the getDeploymentsNext operation.
 */
export type SitesGetDeploymentsNextResponse = DeploymentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentCollection;
    };
};

/**
 * Contains response data for the getDeploymentsSlotNext operation.
 */
export type SitesGetDeploymentsSlotNextResponse = DeploymentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentCollection;
    };
};

/**
 * Contains response data for the getInstanceDeploymentsNext operation.
 */
export type SitesGetInstanceDeploymentsNextResponse = DeploymentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentCollection;
    };
};

/**
 * Contains response data for the getInstanceDeploymentsSlotNext operation.
 */
export type SitesGetInstanceDeploymentsSlotNextResponse = DeploymentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentCollection;
    };
};

/**
 * Contains response data for the getSiteInstanceIdentifiersNext operation.
 */
export type SitesGetSiteInstanceIdentifiersNextResponse = SiteInstanceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteInstanceCollection;
    };
};

/**
 * Contains response data for the getSiteInstanceIdentifiersSlotNext operation.
 */
export type SitesGetSiteInstanceIdentifiersSlotNextResponse = SiteInstanceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteInstanceCollection;
    };
};

/**
 * Contains response data for the getSiteHostNameBindingsNext operation.
 */
export type SitesGetSiteHostNameBindingsNextResponse = HostNameBindingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBindingCollection;
    };
};

/**
 * Contains response data for the getSiteHostNameBindingsSlotNext operation.
 */
export type SitesGetSiteHostNameBindingsSlotNextResponse = HostNameBindingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBindingCollection;
    };
};

/**
 * Contains response data for the listSiteBackupsNext operation.
 */
export type SitesListSiteBackupsNextResponse = BackupItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItemCollection;
    };
};

/**
 * Contains response data for the listSiteBackupsSlotNext operation.
 */
export type SitesListSiteBackupsSlotNextResponse = BackupItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItemCollection;
    };
};

/**
 * Contains response data for the getSiteUsagesNext operation.
 */
export type SitesGetSiteUsagesNextResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the getSiteUsagesSlotNext operation.
 */
export type SitesGetSiteUsagesSlotNextResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the getSiteMetricsNext operation.
 */
export type SitesGetSiteMetricsNextResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the getSiteMetricsSlotNext operation.
 */
export type SitesGetSiteMetricsSlotNextResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the getSiteMetricDefinitionsSlotNext operation.
 */
export type SitesGetSiteMetricDefinitionsSlotNextResponse = MetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinitionCollection;
    };
};

/**
 * Contains response data for the getSiteMetricDefinitionsNext operation.
 */
export type SitesGetSiteMetricDefinitionsNextResponse = MetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinitionCollection;
    };
};

/**
 * Contains response data for the getGetTopLevelDomains operation.
 */
export type TopLevelDomainsGetGetTopLevelDomainsResponse = TopLevelDomainCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopLevelDomainCollection;
    };
};

/**
 * Contains response data for the getTopLevelDomain operation.
 */
export type TopLevelDomainsGetTopLevelDomainResponse = TopLevelDomain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopLevelDomain;
    };
};

/**
 * Contains response data for the listTopLevelDomainAgreements operation.
 */
export type TopLevelDomainsListTopLevelDomainAgreementsResponse = TldLegalAgreementCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TldLegalAgreementCollection;
    };
};

/**
 * Contains response data for the getGetTopLevelDomainsNext operation.
 */
export type TopLevelDomainsGetGetTopLevelDomainsNextResponse = TopLevelDomainCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopLevelDomainCollection;
    };
};

/**
 * Contains response data for the listTopLevelDomainAgreementsNext operation.
 */
export type TopLevelDomainsListTopLevelDomainAgreementsNextResponse = TldLegalAgreementCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TldLegalAgreementCollection;
    };
};

/**
 * Contains response data for the getUsage operation.
 */
export type UsageGetUsageResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ManagedApisListResponse = ApisCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApisCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedApisGetResponse = ApiEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiEntity;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ManagedApisListNextResponse = ApisCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApisCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ConnectionsListResponse = ConnectionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConnectionCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ConnectionsGetResponse = Connection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Connection;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ConnectionsCreateOrUpdateResponse = Connection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Connection;
    };
};

/**
 * Contains response data for the listConsentLinks operation.
 */
export type ConnectionsListConsentLinksResponse = ConsentLinkPayload & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConsentLinkPayload;
    };
};

/**
 * Contains response data for the confirmConsentCode operation.
 */
export type ConnectionsConfirmConsentCodeResponse = Connection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Connection;
    };
};

/**
 * Contains response data for the listConnectionKeys operation.
 */
export type ConnectionsListConnectionKeysResponse = ConnectionSecrets & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConnectionSecrets;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ConnectionsListNextResponse = ConnectionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConnectionCollection;
    };
};
