/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const acceptLanguage: msRest.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const apiVersion: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};
export const backupId: msRest.OperationURLParameter = {
  parameterPath: "backupId",
  mapper: {
    required: true,
    serializedName: "backupId",
    type: {
      name: "String"
    }
  }
};
export const baseAddress: msRest.OperationURLParameter = {
  parameterPath: "baseAddress",
  mapper: {
    required: true,
    serializedName: "baseAddress",
    type: {
      name: "String"
    }
  }
};
export const deleteEmptyServerFarm: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "deleteEmptyServerFarm"
  ],
  mapper: {
    serializedName: "deleteEmptyServerFarm",
    type: {
      name: "Boolean"
    }
  }
};
export const deleteMetrics: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "deleteMetrics"
  ],
  mapper: {
    serializedName: "deleteMetrics",
    type: {
      name: "Boolean"
    }
  }
};
export const details: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "details"
  ],
  mapper: {
    serializedName: "details",
    type: {
      name: "Boolean"
    }
  }
};
export const domainOwnershipIdentifierName: msRest.OperationURLParameter = {
  parameterPath: "domainOwnershipIdentifierName",
  mapper: {
    required: true,
    serializedName: "domainOwnershipIdentifierName",
    type: {
      name: "String"
    }
  }
};
export const durationInSeconds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "durationInSeconds"
  ],
  mapper: {
    serializedName: "durationInSeconds",
    type: {
      name: "Number"
    }
  }
};
export const entityName: msRest.OperationURLParameter = {
  parameterPath: "entityName",
  mapper: {
    required: true,
    serializedName: "entityName",
    type: {
      name: "String"
    }
  }
};
export const filter: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const forceDnsRegistration: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "forceDnsRegistration"
  ],
  mapper: {
    serializedName: "forceDnsRegistration",
    type: {
      name: "Boolean"
    }
  }
};
export const functionName: msRest.OperationURLParameter = {
  parameterPath: "functionName",
  mapper: {
    required: true,
    serializedName: "functionName",
    type: {
      name: "String"
    }
  }
};
export const gatewayName: msRest.OperationURLParameter = {
  parameterPath: "gatewayName",
  mapper: {
    required: true,
    serializedName: "gatewayName",
    type: {
      name: "String"
    }
  }
};
export const hostName0: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "hostName"
  ],
  mapper: {
    serializedName: "hostName",
    type: {
      name: "String"
    }
  }
};
export const hostName1: msRest.OperationURLParameter = {
  parameterPath: "hostName",
  mapper: {
    required: true,
    serializedName: "hostName",
    type: {
      name: "String"
    }
  }
};
export const id: msRest.OperationURLParameter = {
  parameterPath: "id",
  mapper: {
    required: true,
    serializedName: "id",
    type: {
      name: "String"
    }
  }
};
export const includeSlots: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "includeSlots"
  ],
  mapper: {
    serializedName: "includeSlots",
    type: {
      name: "Boolean"
    }
  }
};
export const instanceId: msRest.OperationURLParameter = {
  parameterPath: "instanceId",
  mapper: {
    required: true,
    serializedName: "instanceId",
    type: {
      name: "String"
    }
  }
};
export const maxFrameLength: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "maxFrameLength"
  ],
  mapper: {
    serializedName: "maxFrameLength",
    type: {
      name: "Number"
    }
  }
};
export const name: msRest.OperationURLParameter = {
  parameterPath: "name",
  mapper: {
    required: true,
    serializedName: "name",
    type: {
      name: "String"
    }
  }
};
export const namespaceName: msRest.OperationURLParameter = {
  parameterPath: "namespaceName",
  mapper: {
    required: true,
    serializedName: "namespaceName",
    type: {
      name: "String"
    }
  }
};
export const nextPageLink: msRest.OperationURLParameter = {
  parameterPath: "nextPageLink",
  mapper: {
    required: true,
    serializedName: "nextLink",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const premierAddOnName: msRest.OperationURLParameter = {
  parameterPath: "premierAddOnName",
  mapper: {
    required: true,
    serializedName: "premierAddOnName",
    type: {
      name: "String"
    }
  }
};
export const processId: msRest.OperationURLParameter = {
  parameterPath: "processId",
  mapper: {
    required: true,
    serializedName: "processId",
    type: {
      name: "String"
    }
  }
};
export const publicCertificateName: msRest.OperationURLParameter = {
  parameterPath: "publicCertificateName",
  mapper: {
    required: true,
    serializedName: "publicCertificateName",
    type: {
      name: "String"
    }
  }
};
export const relayName: msRest.OperationURLParameter = {
  parameterPath: "relayName",
  mapper: {
    required: true,
    serializedName: "relayName",
    type: {
      name: "String"
    }
  }
};
export const resourceGroupName: msRest.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    required: true,
    serializedName: "resourceGroupName",
    constraints: {
      MaxLength: 90,
      MinLength: 1,
      Pattern: /^[-\w\._\(\)]+[^\.]$/
    },
    type: {
      name: "String"
    }
  }
};
export const sasUrl: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "sasUrl"
  ],
  mapper: {
    serializedName: "sasUrl",
    type: {
      name: "String"
    }
  }
};
export const siteExtensionId: msRest.OperationURLParameter = {
  parameterPath: "siteExtensionId",
  mapper: {
    required: true,
    serializedName: "siteExtensionId",
    type: {
      name: "String"
    }
  }
};
export const skipCustomDomainVerification: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "skipCustomDomainVerification"
  ],
  mapper: {
    serializedName: "skipCustomDomainVerification",
    type: {
      name: "Boolean"
    }
  }
};
export const skipDnsRegistration: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "skipDnsRegistration"
  ],
  mapper: {
    serializedName: "skipDnsRegistration",
    type: {
      name: "Boolean"
    }
  }
};
export const slot: msRest.OperationURLParameter = {
  parameterPath: "slot",
  mapper: {
    required: true,
    serializedName: "slot",
    type: {
      name: "String"
    }
  }
};
export const snapshotId: msRest.OperationURLParameter = {
  parameterPath: "snapshotId",
  mapper: {
    required: true,
    serializedName: "snapshotId",
    type: {
      name: "String"
    }
  }
};
export const softRestart: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "softRestart"
  ],
  mapper: {
    serializedName: "softRestart",
    type: {
      name: "Boolean"
    }
  }
};
export const subscriptionId: msRest.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    required: true,
    serializedName: "subscriptionId",
    type: {
      name: "String"
    }
  }
};
export const subscriptionName: msRest.OperationQueryParameter = {
  parameterPath: "subscriptionName",
  mapper: {
    required: true,
    serializedName: "subscriptionName",
    type: {
      name: "String"
    }
  }
};
export const synchronous: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "synchronous"
  ],
  mapper: {
    serializedName: "synchronous",
    type: {
      name: "Boolean"
    }
  }
};
export const threadId: msRest.OperationURLParameter = {
  parameterPath: "threadId",
  mapper: {
    required: true,
    serializedName: "threadId",
    type: {
      name: "String"
    }
  }
};
export const ttlInSeconds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "ttlInSeconds"
  ],
  mapper: {
    serializedName: "ttlInSeconds",
    type: {
      name: "String"
    }
  }
};
export const view: msRest.OperationURLParameter = {
  parameterPath: "view",
  mapper: {
    required: true,
    serializedName: "view",
    type: {
      name: "String"
    }
  }
};
export const vnetName: msRest.OperationURLParameter = {
  parameterPath: "vnetName",
  mapper: {
    required: true,
    serializedName: "vnetName",
    type: {
      name: "String"
    }
  }
};
export const webJobName: msRest.OperationURLParameter = {
  parameterPath: "webJobName",
  mapper: {
    required: true,
    serializedName: "webJobName",
    type: {
      name: "String"
    }
  }
};
