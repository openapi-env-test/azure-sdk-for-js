/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const acceptLanguage: msRest.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const allowPendingState: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "allowPendingState"
  ],
  mapper: {
    serializedName: "allowPendingState",
    type: {
      name: "Boolean"
    }
  }
};
export const apiName: msRest.OperationURLParameter = {
  parameterPath: "apiName",
  mapper: {
    required: true,
    serializedName: "apiName",
    type: {
      name: "String"
    }
  }
};
export const apiVersion0: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "api-version",
    defaultValue: '2015-08-01',
    type: {
      name: "String"
    }
  }
};
export const apiVersion1: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "api-version",
    defaultValue: '2015-08-01-preview',
    type: {
      name: "String"
    }
  }
};
export const backupId: msRest.OperationURLParameter = {
  parameterPath: "backupId",
  mapper: {
    required: true,
    serializedName: "backupId",
    type: {
      name: "String"
    }
  }
};
export const batchSize: msRest.OperationQueryParameter = {
  parameterPath: "batchSize",
  mapper: {
    required: true,
    serializedName: "batchSize",
    type: {
      name: "Number"
    }
  }
};
export const certificateOrderName: msRest.OperationURLParameter = {
  parameterPath: "certificateOrderName",
  mapper: {
    required: true,
    serializedName: "certificateOrderName",
    type: {
      name: "String"
    }
  }
};
export const connectionName: msRest.OperationURLParameter = {
  parameterPath: "connectionName",
  mapper: {
    required: true,
    serializedName: "connectionName",
    type: {
      name: "String"
    }
  }
};
export const deleteAllSlots: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "deleteAllSlots"
  ],
  mapper: {
    serializedName: "deleteAllSlots",
    type: {
      name: "String"
    }
  }
};
export const deleteEmptyServerFarm: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "deleteEmptyServerFarm"
  ],
  mapper: {
    serializedName: "deleteEmptyServerFarm",
    type: {
      name: "String"
    }
  }
};
export const deleteMetrics: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "deleteMetrics"
  ],
  mapper: {
    serializedName: "deleteMetrics",
    type: {
      name: "String"
    }
  }
};
export const detailed: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "detailed"
  ],
  mapper: {
    serializedName: "detailed",
    type: {
      name: "Boolean"
    }
  }
};
export const details: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "details"
  ],
  mapper: {
    serializedName: "details",
    type: {
      name: "Boolean"
    }
  }
};
export const diagnosticsName: msRest.OperationURLParameter = {
  parameterPath: "diagnosticsName",
  mapper: {
    required: true,
    serializedName: "diagnosticsName",
    type: {
      name: "String"
    }
  }
};
export const domainName: msRest.OperationURLParameter = {
  parameterPath: "domainName",
  mapper: {
    required: true,
    serializedName: "domainName",
    type: {
      name: "String"
    }
  }
};
export const endTime: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "endTime"
  ],
  mapper: {
    serializedName: "endTime",
    type: {
      name: "String"
    }
  }
};
export const entityName: msRest.OperationURLParameter = {
  parameterPath: "entityName",
  mapper: {
    required: true,
    serializedName: "entityName",
    type: {
      name: "String"
    }
  }
};
export const environmentName: msRest.OperationURLParameter = {
  parameterPath: "environmentName",
  mapper: {
    required: true,
    serializedName: "environmentName",
    type: {
      name: "String"
    }
  }
};
export const exportParameter: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "exportParameter"
  ],
  mapper: {
    serializedName: "export",
    type: {
      name: "Boolean"
    }
  }
};
export const featured: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "featured"
  ],
  mapper: {
    serializedName: "featured",
    type: {
      name: "Boolean"
    }
  }
};
export const filter0: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const filter1: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const forceDelete: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "forceDelete"
  ],
  mapper: {
    serializedName: "forceDelete",
    type: {
      name: "Boolean"
    }
  }
};
export const forceDnsRegistration: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "forceDnsRegistration"
  ],
  mapper: {
    serializedName: "forceDnsRegistration",
    type: {
      name: "String"
    }
  }
};
export const forceHardDeleteDomain: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "forceHardDeleteDomain"
  ],
  mapper: {
    serializedName: "forceHardDeleteDomain",
    type: {
      name: "Boolean"
    }
  }
};
export const gatewayName: msRest.OperationURLParameter = {
  parameterPath: "gatewayName",
  mapper: {
    required: true,
    serializedName: "gatewayName",
    type: {
      name: "String"
    }
  }
};
export const hostName: msRest.OperationURLParameter = {
  parameterPath: "hostName",
  mapper: {
    required: true,
    serializedName: "hostName",
    type: {
      name: "String"
    }
  }
};
export const id: msRest.OperationURLParameter = {
  parameterPath: "id",
  mapper: {
    required: true,
    serializedName: "id",
    type: {
      name: "String"
    }
  }
};
export const includeSiteTypes: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "includeSiteTypes"
  ],
  mapper: {
    serializedName: "includeSiteTypes",
    type: {
      name: "String"
    }
  }
};
export const includeSlots: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "includeSlots"
  ],
  mapper: {
    serializedName: "includeSlots",
    type: {
      name: "Boolean"
    }
  }
};
export const instance: msRest.OperationURLParameter = {
  parameterPath: "instance",
  mapper: {
    required: true,
    serializedName: "instance",
    type: {
      name: "String"
    }
  }
};
export const instanceId: msRest.OperationURLParameter = {
  parameterPath: "instanceId",
  mapper: {
    required: true,
    serializedName: "instanceId",
    type: {
      name: "String"
    }
  }
};
export const lastId: msRest.OperationQueryParameter = {
  parameterPath: "lastId",
  mapper: {
    required: true,
    serializedName: "lastId",
    type: {
      name: "String"
    }
  }
};
export const linuxWorkersEnabled: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "linuxWorkersEnabled"
  ],
  mapper: {
    serializedName: "linuxWorkersEnabled",
    type: {
      name: "Boolean"
    }
  }
};
export const location: msRest.OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    required: true,
    serializedName: "location",
    type: {
      name: "String"
    }
  }
};
export const name: msRest.OperationURLParameter = {
  parameterPath: "name",
  mapper: {
    required: true,
    serializedName: "name",
    type: {
      name: "String"
    }
  }
};
export const nextPageLink: msRest.OperationURLParameter = {
  parameterPath: "nextPageLink",
  mapper: {
    required: true,
    serializedName: "nextLink",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const numSlots: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "numSlots"
  ],
  mapper: {
    serializedName: "numSlots",
    type: {
      name: "Number"
    }
  }
};
export const operationId: msRest.OperationURLParameter = {
  parameterPath: "operationId",
  mapper: {
    required: true,
    serializedName: "operationId",
    type: {
      name: "String"
    }
  }
};
export const premierAddOnName: msRest.OperationURLParameter = {
  parameterPath: "premierAddOnName",
  mapper: {
    required: true,
    serializedName: "premierAddOnName",
    type: {
      name: "String"
    }
  }
};
export const propertiesToInclude: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "propertiesToInclude"
  ],
  mapper: {
    serializedName: "propertiesToInclude",
    type: {
      name: "String"
    }
  }
};
export const resourceGroupName: msRest.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    required: true,
    serializedName: "resourceGroupName",
    type: {
      name: "String"
    }
  }
};
export const routeName: msRest.OperationURLParameter = {
  parameterPath: "routeName",
  mapper: {
    required: true,
    serializedName: "routeName",
    type: {
      name: "String"
    }
  }
};
export const siteName: msRest.OperationURLParameter = {
  parameterPath: "siteName",
  mapper: {
    required: true,
    serializedName: "siteName",
    type: {
      name: "String"
    }
  }
};
export const siteSku: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "siteSku"
  ],
  mapper: {
    serializedName: "siteSku",
    type: {
      name: "String"
    }
  }
};
export const skipCustomDomainVerification: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "skipCustomDomainVerification"
  ],
  mapper: {
    serializedName: "skipCustomDomainVerification",
    type: {
      name: "String"
    }
  }
};
export const skipDnsRegistration: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "skipDnsRegistration"
  ],
  mapper: {
    serializedName: "skipDnsRegistration",
    type: {
      name: "String"
    }
  }
};
export const skipToken: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "skipToken"
  ],
  mapper: {
    serializedName: "$skipToken",
    type: {
      name: "String"
    }
  }
};
export const sku: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "sku"
  ],
  mapper: {
    serializedName: "sku",
    type: {
      name: "String"
    }
  }
};
export const slot: msRest.OperationURLParameter = {
  parameterPath: "slot",
  mapper: {
    required: true,
    serializedName: "slot",
    type: {
      name: "String"
    }
  }
};
export const softRestart: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "softRestart"
  ],
  mapper: {
    serializedName: "softRestart",
    type: {
      name: "Boolean"
    }
  }
};
export const sourceControlType: msRest.OperationURLParameter = {
  parameterPath: "sourceControlType",
  mapper: {
    required: true,
    serializedName: "sourceControlType",
    type: {
      name: "String"
    }
  }
};
export const startTime: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "startTime"
  ],
  mapper: {
    serializedName: "startTime",
    type: {
      name: "String"
    }
  }
};
export const subscriptionId: msRest.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    required: true,
    serializedName: "subscriptionId",
    type: {
      name: "String"
    }
  }
};
export const synchronous: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "synchronous"
  ],
  mapper: {
    serializedName: "synchronous",
    type: {
      name: "Boolean"
    }
  }
};
export const timeGrain: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "timeGrain"
  ],
  mapper: {
    serializedName: "timeGrain",
    type: {
      name: "String"
    }
  }
};
export const top0: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "top"
  ],
  mapper: {
    serializedName: "$top",
    type: {
      name: "String"
    }
  }
};
export const top1: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "top"
  ],
  mapper: {
    serializedName: "$top",
    type: {
      name: "Number"
    }
  }
};
export const ttlInSeconds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "ttlInSeconds"
  ],
  mapper: {
    serializedName: "ttlInSeconds",
    type: {
      name: "String"
    }
  }
};
export const view: msRest.OperationURLParameter = {
  parameterPath: "view",
  mapper: {
    required: true,
    serializedName: "view",
    type: {
      name: "String"
    }
  }
};
export const vnetName: msRest.OperationURLParameter = {
  parameterPath: "vnetName",
  mapper: {
    required: true,
    serializedName: "vnetName",
    type: {
      name: "String"
    }
  }
};
export const workerName: msRest.OperationURLParameter = {
  parameterPath: "workerName",
  mapper: {
    required: true,
    serializedName: "workerName",
    type: {
      name: "String"
    }
  }
};
export const workerPoolName: msRest.OperationURLParameter = {
  parameterPath: "workerPoolName",
  mapper: {
    required: true,
    serializedName: "workerPoolName",
    type: {
      name: "String"
    }
  }
};
