/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const acceptLanguage: msRest.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const apiVersion: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};
export const detailed: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "detailed"
  ],
  mapper: {
    serializedName: "detailed",
    type: {
      name: "Boolean"
    }
  }
};
export const details: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "details"
  ],
  mapper: {
    serializedName: "details",
    type: {
      name: "Boolean"
    }
  }
};
export const diagnosticsName: msRest.OperationURLParameter = {
  parameterPath: "diagnosticsName",
  mapper: {
    required: true,
    serializedName: "diagnosticsName",
    type: {
      name: "String"
    }
  }
};
export const endTime: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "endTime"
  ],
  mapper: {
    serializedName: "endTime",
    type: {
      name: "String"
    }
  }
};
export const filter: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const forceDelete: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "forceDelete"
  ],
  mapper: {
    serializedName: "forceDelete",
    type: {
      name: "Boolean"
    }
  }
};
export const gatewayName: msRest.OperationURLParameter = {
  parameterPath: "gatewayName",
  mapper: {
    required: true,
    serializedName: "gatewayName",
    type: {
      name: "String"
    }
  }
};
export const instance: msRest.OperationURLParameter = {
  parameterPath: "instance",
  mapper: {
    required: true,
    serializedName: "instance",
    type: {
      name: "String"
    }
  }
};
export const name: msRest.OperationURLParameter = {
  parameterPath: "name",
  mapper: {
    required: true,
    serializedName: "name",
    type: {
      name: "String"
    }
  }
};
export const namespaceName: msRest.OperationURLParameter = {
  parameterPath: "namespaceName",
  mapper: {
    required: true,
    serializedName: "namespaceName",
    type: {
      name: "String"
    }
  }
};
export const nextPageLink: msRest.OperationURLParameter = {
  parameterPath: "nextPageLink",
  mapper: {
    required: true,
    serializedName: "nextLink",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const propertiesToInclude: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "propertiesToInclude"
  ],
  mapper: {
    serializedName: "propertiesToInclude",
    type: {
      name: "String"
    }
  }
};
export const relayName: msRest.OperationURLParameter = {
  parameterPath: "relayName",
  mapper: {
    required: true,
    serializedName: "relayName",
    type: {
      name: "String"
    }
  }
};
export const resourceGroupName: msRest.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    required: true,
    serializedName: "resourceGroupName",
    constraints: {
      MaxLength: 90,
      MinLength: 1,
      Pattern: /^[-\w\._\(\)]+[^\.]$/
    },
    type: {
      name: "String"
    }
  }
};
export const routeName: msRest.OperationURLParameter = {
  parameterPath: "routeName",
  mapper: {
    required: true,
    serializedName: "routeName",
    type: {
      name: "String"
    }
  }
};
export const skipToken: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "skipToken"
  ],
  mapper: {
    serializedName: "$skipToken",
    type: {
      name: "String"
    }
  }
};
export const softRestart: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "softRestart"
  ],
  mapper: {
    serializedName: "softRestart",
    type: {
      name: "Boolean"
    }
  }
};
export const startTime: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "startTime"
  ],
  mapper: {
    serializedName: "startTime",
    type: {
      name: "String"
    }
  }
};
export const subscriptionId: msRest.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    required: true,
    serializedName: "subscriptionId",
    type: {
      name: "String"
    }
  }
};
export const timeGrain: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "timeGrain"
  ],
  mapper: {
    serializedName: "timeGrain",
    type: {
      name: "String"
    }
  }
};
export const top: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "top"
  ],
  mapper: {
    serializedName: "$top",
    type: {
      name: "String"
    }
  }
};
export const vnetName: msRest.OperationURLParameter = {
  parameterPath: "vnetName",
  mapper: {
    required: true,
    serializedName: "vnetName",
    type: {
      name: "String"
    }
  }
};
export const workerName: msRest.OperationURLParameter = {
  parameterPath: "workerName",
  mapper: {
    required: true,
    serializedName: "workerName",
    type: {
      name: "String"
    }
  }
};
export const workerPoolName: msRest.OperationURLParameter = {
  parameterPath: "workerPoolName",
  mapper: {
    required: true,
    serializedName: "workerPoolName",
    type: {
      name: "String"
    }
  }
};
