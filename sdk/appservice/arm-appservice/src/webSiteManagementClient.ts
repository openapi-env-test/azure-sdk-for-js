/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { WebSiteManagementClientContext } from "./webSiteManagementClientContext";


class WebSiteManagementClient extends WebSiteManagementClientContext {
  // Operation groups
  certificateOrders: operations.CertificateOrders;
  certificates: operations.Certificates;
  classicMobileServices: operations.ClassicMobileServices;
  domains: operations.Domains;
  global: operations.Global;
  globalCertificateOrder: operations.GlobalCertificateOrder;
  globalDomainRegistration: operations.GlobalDomainRegistration;
  globalResourceGroups: operations.GlobalResourceGroups;
  hostingEnvironments: operations.HostingEnvironments;
  managedHostingEnvironments: operations.ManagedHostingEnvironments;
  provider: operations.Provider;
  recommendations: operations.Recommendations;
  serverFarms: operations.ServerFarms;
  sites: operations.Sites;
  topLevelDomains: operations.TopLevelDomains;
  usage: operations.UsageOperations;
  managedApis: operations.ManagedApis;
  connections: operations.Connections;

  /**
   * Initializes a new instance of the WebSiteManagementClient class.
   * @param credentials Credentials needed for the client to connect to Azure.
   * @param subscriptionId Subscription Id
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials, subscriptionId: string, options?: Models.WebSiteManagementClientOptions) {
    super(credentials, subscriptionId, options);
    this.certificateOrders = new operations.CertificateOrders(this);
    this.certificates = new operations.Certificates(this);
    this.classicMobileServices = new operations.ClassicMobileServices(this);
    this.domains = new operations.Domains(this);
    this.global = new operations.Global(this);
    this.globalCertificateOrder = new operations.GlobalCertificateOrder(this);
    this.globalDomainRegistration = new operations.GlobalDomainRegistration(this);
    this.globalResourceGroups = new operations.GlobalResourceGroups(this);
    this.hostingEnvironments = new operations.HostingEnvironments(this);
    this.managedHostingEnvironments = new operations.ManagedHostingEnvironments(this);
    this.provider = new operations.Provider(this);
    this.recommendations = new operations.Recommendations(this);
    this.serverFarms = new operations.ServerFarms(this);
    this.sites = new operations.Sites(this);
    this.topLevelDomains = new operations.TopLevelDomains(this);
    this.usage = new operations.UsageOperations(this);
    this.managedApis = new operations.ManagedApis(this);
    this.connections = new operations.Connections(this);
  }
}

// Operation Specifications

export {
  WebSiteManagementClient,
  WebSiteManagementClientContext,
  Models as WebSiteManagementModels,
  Mappers as WebSiteManagementMappers
};
export * from "./operations";
