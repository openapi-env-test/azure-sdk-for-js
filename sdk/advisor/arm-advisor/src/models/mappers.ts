/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationEntityListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationEntityListResult",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationEntity"
            }
          }
        }
      }
    }
  }
};

export const OperationEntity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationEntity",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplayInfo"
        }
      }
    }
  }
};

export const OperationDisplayInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplayInfo",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathsW6Fm20SubscriptionsSubscriptionidProvidersMicrosoftAdvisorAdvisorscoreGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "PathsW6Fm20SubscriptionsSubscriptionidProvidersMicrosoftAdvisorAdvisorscoreGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AdvisorScoreEntity"
            }
          }
        }
      }
    }
  }
};

export const AdvisorScoreEntity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AdvisorScoreEntity",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AdvisorScoreEntityProperties"
        }
      }
    }
  }
};

export const AdvisorScoreEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AdvisorScoreEntityProperties",
    modelProperties: {
      lastRefreshedScore: {
        serializedName: "lastRefreshedScore",
        type: {
          name: "Composite",
          className: "ScoreEntity"
        }
      },
      timeSeries: {
        serializedName: "timeSeries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TimeSeriesEntityItem"
            }
          }
        }
      }
    }
  }
};

export const ScoreEntity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScoreEntity",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "String"
        }
      },
      score: {
        serializedName: "score",
        type: {
          name: "Number"
        }
      },
      consumptionUnits: {
        serializedName: "consumptionUnits",
        type: {
          name: "Number"
        }
      },
      impactedResourceCount: {
        serializedName: "impactedResourceCount",
        type: {
          name: "Number"
        }
      },
      potentialScoreIncrease: {
        serializedName: "potentialScoreIncrease",
        type: {
          name: "Number"
        }
      },
      categoryCount: {
        serializedName: "categoryCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TimeSeriesEntityItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TimeSeriesEntityItem",
    modelProperties: {
      aggregationLevel: {
        serializedName: "aggregationLevel",
        type: {
          name: "String"
        }
      },
      scoreHistory: {
        serializedName: "scoreHistory",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScoreEntity"
            }
          }
        }
      }
    }
  }
};

export const ArmErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArmErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ARMErrorResponseBody"
        }
      }
    }
  }
};

export const ARMErrorResponseBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ARMErrorResponseBody",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      }
    }
  }
};
