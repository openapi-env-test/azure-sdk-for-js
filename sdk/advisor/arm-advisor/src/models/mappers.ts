/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const ResourceRecommendationBaseListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceRecommendationBaseListResult",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceRecommendationBase"
            }
          }
        }
      }
    }
  }
};

export const ResourceRecommendationBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceRecommendationBase",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      suppressionIds: {
        serializedName: "suppressionIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Uuid"
            }
          }
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "properties.category",
        type: {
          name: "String"
        }
      },
      impact: {
        serializedName: "properties.impact",
        type: {
          name: "String"
        }
      },
      impactedField: {
        serializedName: "properties.impactedField",
        type: {
          name: "String"
        }
      },
      impactedValue: {
        serializedName: "properties.impactedValue",
        type: {
          name: "String"
        }
      },
      lastUpdated: {
        serializedName: "properties.lastUpdated",
        type: {
          name: "DateTime"
        }
      },
      metadata: {
        serializedName: "properties.metadata",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      recommendationTypeId: {
        serializedName: "properties.recommendationTypeId",
        type: {
          name: "String"
        }
      },
      risk: {
        serializedName: "properties.risk",
        type: {
          name: "String"
        }
      },
      shortDescription: {
        serializedName: "properties.shortDescription",
        type: {
          name: "Composite",
          className: "ShortDescription"
        }
      }
    }
  }
};

export const ShortDescription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ShortDescription",
    modelProperties: {
      problem: {
        serializedName: "problem",
        type: {
          name: "String"
        }
      },
      solution: {
        serializedName: "solution",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationEntityListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationEntityListResult",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationEntity"
            }
          }
        }
      }
    }
  }
};

export const OperationEntity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationEntity",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplayInfo"
        }
      }
    }
  }
};

export const OperationDisplayInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplayInfo",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const SuppressionContract: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SuppressionContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      suppressionId: {
        serializedName: "suppressionId",
        type: {
          name: "String"
        }
      },
      ttl: {
        serializedName: "ttl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RecommendationsGenerateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecommendationsGenerateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "String"
        }
      }
    }
  }
};
