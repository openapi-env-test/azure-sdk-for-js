/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Pre-provisioned and readily available Event Hubs Cluster count per region.
 */
export interface AvailableCluster {
  /**
   * Location fo the Available Cluster
   */
  location?: string;
}

/**
 * The response of the List Available Clusters operation.
 */
export interface AvailableClustersList {
  /**
   * The count of readily available and pre-provisioned Event Hubs Clusters per region.
   */
  value?: AvailableCluster[];
}

/**
 * Error response indicates Event Hub service is not able to process the incoming request. The
 * reason is provided in the error message.
 */
export interface ErrorResponse {
  /**
   * Error code.
   */
  code?: string;
  /**
   * Error message indicating why the operation failed.
   */
  message?: string;
}

/**
 * SKU parameters particular to a cluster instance.
 */
export interface ClusterSku {
  /**
   * The quantity of Event Hubs Cluster Capacity Units contained in this cluster.
   */
  capacity?: number;
}

/**
 * The resource definition.
 */
export interface Resource extends BaseResource {
  /**
   * Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Definition of resource.
 */
export interface TrackedResource extends Resource {
  /**
   * Resource location.
   */
  location?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Single Event Hubs Cluster resource in List or Get operations.
 */
export interface Cluster extends TrackedResource {
  /**
   * Properties of the cluster SKU.
   */
  sku?: ClusterSku;
  /**
   * The UTC time when the Event Hubs Cluster was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly created?: string;
  /**
   * The UTC time when the Event Hubs Cluster was last updated.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly updated?: string;
  /**
   * The metric ID of the cluster resource. Provided by the service and not modifiable by the user.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metricId?: string;
  /**
   * Status of the Cluster resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
}

/**
 * The full ARM ID of an Event Hubs Namespace
 */
export interface EHNamespaceIdContainer {
  /**
   * id parameter
   */
  id?: string;
}

/**
 * The response of the List Namespace IDs operation
 */
export interface EHNamespaceIdListResult {
  /**
   * Result of the List Namespace IDs operation
   */
  value?: EHNamespaceIdContainer[];
}

/**
 * Single item in a List or Get IpFilterRules operation
 */
export interface IpFilterRule extends Resource {
  /**
   * IP Mask
   */
  ipMask?: string;
  /**
   * The IP Filter Action. Possible values include: 'Accept', 'Reject'
   */
  action?: IPAction;
  /**
   * IP Filter name
   */
  filterName?: string;
}

/**
 * SKU parameters supplied to the create namespace operation
 */
export interface Sku {
  /**
   * Name of this SKU. Possible values include: 'Basic', 'Standard'
   */
  name: SkuName;
  /**
   * The billing tier of this particular SKU. Possible values include: 'Basic', 'Standard'
   */
  tier?: SkuTier;
  /**
   * The Event Hubs throughput units, value should be 0 to 20 throughput units.
   */
  capacity?: number;
}

/**
 * Properties to configure Identity for Bring your Own Keys
 */
export interface Identity {
  /**
   * ObjectId from the KeyVault
   */
  principalId?: string;
  /**
   * TenantId from the KeyVault
   */
  tenantId?: string;
  /**
   * Enumerates the possible value Identity type, which currently supports only 'SystemAssigned'.
   * Possible values include: 'SystemAssigned'. Default value: 'SystemAssigned'.
   */
  type?: IdentityType;
}

/**
 * Properties to configure keyVault Properties
 */
export interface KeyVaultProperties {
  /**
   * Name of the Key from KeyVault
   */
  keyName?: string;
  /**
   * Uri of KeyVault
   */
  keyVaultUri?: string;
}

/**
 * Properties to configure Encryption
 */
export interface Encryption {
  /**
   * Properties of KeyVault
   */
  keyVaultProperties?: KeyVaultProperties;
  /**
   * Enumerates the possible value of keySource for Encryption. Possible values include:
   * 'Microsoft.KeyVault'. Default value: 'Microsoft.KeyVault'.
   */
  keySource?: KeySource;
}

/**
 * Single Namespace item in List or Get Operation
 */
export interface EHNamespace extends TrackedResource {
  /**
   * Properties of sku resource
   */
  sku?: Sku;
  /**
   * Properties of BYOK Identity description
   */
  identity?: Identity;
  /**
   * Provisioning state of the Namespace.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The time the Namespace was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdAt?: Date;
  /**
   * The time the Namespace was updated.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly updatedAt?: Date;
  /**
   * Endpoint you can use to perform Service Bus operations.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceBusEndpoint?: string;
  /**
   * Cluster ARM ID of the Namespace.
   */
  clusterArmId?: string;
  /**
   * Identifier for Azure Insights metrics.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metricId?: string;
  /**
   * Value that indicates whether AutoInflate is enabled for eventhub namespace.
   */
  isAutoInflateEnabled?: boolean;
  /**
   * Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20
   * throughput units. ( '0' if AutoInflateEnabled = true)
   */
  maximumThroughputUnits?: number;
  /**
   * Value that indicates whether Kafka is enabled for eventhub namespace.
   */
  kafkaEnabled?: boolean;
  /**
   * Enabling this property creates a Standard Event Hubs Namespace in regions supported
   * availability zones.
   */
  zoneRedundant?: boolean;
  /**
   * Properties of BYOK Encryption description
   */
  encryption?: Encryption;
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.EventHub
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: string;
  /**
   * Resource on which the operation is performed: Invoice, etc.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resource?: string;
  /**
   * Operation type: Read, write, delete, etc.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
}

/**
 * A Event Hub REST API operation
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
}

/**
 * Contains all settings for the cluster.
 */
export interface ClusterQuotaConfigurationProperties {
  /**
   * All possible Cluster settings - a collection of key/value paired settings which apply to
   * quotas and configurations imposed on the cluster.
   */
  settings?: { [propertyName: string]: string };
}

/**
 * Single item in a List or Get VirtualNetworkRules operation
 */
export interface VirtualNetworkRule extends Resource {
  /**
   * ARM ID of Virtual Network Subnet
   */
  virtualNetworkSubnetId?: string;
}

/**
 * Properties supplied for Subnet
 */
export interface Subnet {
  /**
   * Resource ID of Virtual Network Subnet
   */
  id?: string;
}

/**
 * The response from the List namespace operation.
 */
export interface NWRuleSetIpRules {
  /**
   * IP Mask
   */
  ipMask?: string;
  /**
   * The IP Filter Action. Possible values include: 'Allow'
   */
  action?: NetworkRuleIPAction;
}

/**
 * The response from the List namespace operation.
 */
export interface NWRuleSetVirtualNetworkRules {
  /**
   * Subnet properties
   */
  subnet?: Subnet;
  /**
   * Value that indicates whether to ignore missing Vnet Service Endpoint
   */
  ignoreMissingVnetServiceEndpoint?: boolean;
}

/**
 * Description of topic resource.
 */
export interface NetworkRuleSet extends Resource {
  /**
   * Default Action for Network Rule Set. Possible values include: 'Allow', 'Deny'
   */
  defaultAction?: DefaultAction;
  /**
   * List VirtualNetwork Rules
   */
  virtualNetworkRules?: NWRuleSetVirtualNetworkRules[];
  /**
   * List of IpRules
   */
  ipRules?: NWRuleSetIpRules[];
}

/**
 * An interface representing EventHubManagementClientOptions.
 */
export interface EventHubManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * The response of the List Event Hubs Clusters operation.
 * @extends Array<Cluster>
 */
export interface ClusterListResult extends Array<Cluster> {
  /**
   * Link to the next set of results. Empty unless the value parameter contains an incomplete list
   * of Event Hubs Clusters.
   */
  nextLink?: string;
}

/**
 * @interface
 * The response from the List namespace operation.
 * @extends Array<IpFilterRule>
 */
export interface IpFilterRuleListResult extends Array<IpFilterRule> {
  /**
   * Link to the next set of results. Not empty if Value contains an incomplete list of IpFilter
   * Rules
   */
  nextLink?: string;
}

/**
 * @interface
 * The response of the List Namespace operation
 * @extends Array<EHNamespace>
 */
export interface EHNamespaceListResult extends Array<EHNamespace> {
  /**
   * Link to the next set of results. Not empty if Value contains incomplete list of namespaces.
   */
  nextLink?: string;
}

/**
 * @interface
 * The response from the List namespace operation.
 * @extends Array<VirtualNetworkRule>
 */
export interface VirtualNetworkRuleListResult extends Array<VirtualNetworkRule> {
  /**
   * Link to the next set of results. Not empty if Value contains an incomplete list of
   * VirtualNetwork Rules
   */
  nextLink?: string;
}

/**
 * @interface
 * Result of the request to list Event Hub operations. It contains a list of operations and a URL
 * link to get the next set of results.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for IPAction.
 * Possible values include: 'Accept', 'Reject'
 * @readonly
 * @enum {string}
 */
export type IPAction = 'Accept' | 'Reject';

/**
 * Defines values for SkuName.
 * Possible values include: 'Basic', 'Standard'
 * @readonly
 * @enum {string}
 */
export type SkuName = 'Basic' | 'Standard';

/**
 * Defines values for SkuTier.
 * Possible values include: 'Basic', 'Standard'
 * @readonly
 * @enum {string}
 */
export type SkuTier = 'Basic' | 'Standard';

/**
 * Defines values for IdentityType.
 * Possible values include: 'SystemAssigned'
 * @readonly
 * @enum {string}
 */
export type IdentityType = 'SystemAssigned';

/**
 * Defines values for KeySource.
 * Possible values include: 'Microsoft.KeyVault'
 * @readonly
 * @enum {string}
 */
export type KeySource = 'Microsoft.KeyVault';

/**
 * Defines values for NetworkRuleIPAction.
 * Possible values include: 'Allow'
 * @readonly
 * @enum {string}
 */
export type NetworkRuleIPAction = 'Allow';

/**
 * Defines values for DefaultAction.
 * Possible values include: 'Allow', 'Deny'
 * @readonly
 * @enum {string}
 */
export type DefaultAction = 'Allow' | 'Deny';

/**
 * Contains response data for the listAvailableClusters operation.
 */
export type ClustersListAvailableClustersResponse = AvailableClustersList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailableClustersList;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ClustersListByResourceGroupResponse = ClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ClustersGetResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the put operation.
 */
export type ClustersPutResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the patch operation.
 */
export type ClustersPatchResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the listNamespaces operation.
 */
export type ClustersListNamespacesResponse = EHNamespaceIdListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EHNamespaceIdListResult;
    };
};

/**
 * Contains response data for the beginPut operation.
 */
export type ClustersBeginPutResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the beginPatch operation.
 */
export type ClustersBeginPatchResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ClustersListByResourceGroupNextResponse = ClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterListResult;
    };
};

/**
 * Contains response data for the listIPFilterRules operation.
 */
export type NamespacesListIPFilterRulesResponse = IpFilterRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IpFilterRuleListResult;
    };
};

/**
 * Contains response data for the createOrUpdateIpFilterRule operation.
 */
export type NamespacesCreateOrUpdateIpFilterRuleResponse = IpFilterRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IpFilterRule;
    };
};

/**
 * Contains response data for the getIpFilterRule operation.
 */
export type NamespacesGetIpFilterRuleResponse = IpFilterRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IpFilterRule;
    };
};

/**
 * Contains response data for the list operation.
 */
export type NamespacesListResponse = EHNamespaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EHNamespaceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type NamespacesListByResourceGroupResponse = EHNamespaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EHNamespaceListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type NamespacesCreateOrUpdateResponse = EHNamespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EHNamespace;
    };
};

/**
 * Contains response data for the get operation.
 */
export type NamespacesGetResponse = EHNamespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EHNamespace;
    };
};

/**
 * Contains response data for the update operation.
 */
export type NamespacesUpdateResponse = EHNamespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EHNamespace;
    };
};

/**
 * Contains response data for the listVirtualNetworkRules operation.
 */
export type NamespacesListVirtualNetworkRulesResponse = VirtualNetworkRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRuleListResult;
    };
};

/**
 * Contains response data for the createOrUpdateVirtualNetworkRule operation.
 */
export type NamespacesCreateOrUpdateVirtualNetworkRuleResponse = VirtualNetworkRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRule;
    };
};

/**
 * Contains response data for the getVirtualNetworkRule operation.
 */
export type NamespacesGetVirtualNetworkRuleResponse = VirtualNetworkRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRule;
    };
};

/**
 * Contains response data for the createOrUpdateNetworkRuleSet operation.
 */
export type NamespacesCreateOrUpdateNetworkRuleSetResponse = NetworkRuleSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkRuleSet;
    };
};

/**
 * Contains response data for the getNetworkRuleSet operation.
 */
export type NamespacesGetNetworkRuleSetResponse = NetworkRuleSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkRuleSet;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type NamespacesBeginCreateOrUpdateResponse = EHNamespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EHNamespace;
    };
};

/**
 * Contains response data for the listIPFilterRulesNext operation.
 */
export type NamespacesListIPFilterRulesNextResponse = IpFilterRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IpFilterRuleListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type NamespacesListNextResponse = EHNamespaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EHNamespaceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type NamespacesListByResourceGroupNextResponse = EHNamespaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EHNamespaceListResult;
    };
};

/**
 * Contains response data for the listVirtualNetworkRulesNext operation.
 */
export type NamespacesListVirtualNetworkRulesNextResponse = VirtualNetworkRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRuleListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the patch operation.
 */
export type ConfigurationPatchResponse = ClusterQuotaConfigurationProperties & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterQuotaConfigurationProperties;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ConfigurationGetResponse = ClusterQuotaConfigurationProperties & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterQuotaConfigurationProperties;
    };
};
