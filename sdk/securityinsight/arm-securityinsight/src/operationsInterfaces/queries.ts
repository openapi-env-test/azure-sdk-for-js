/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Query,
  QueriesListOptionalParams,
  QueriesGetOptionalParams,
  QueriesGetResponse,
  QueriesDeleteOptionalParams,
  QueriesDeleteResponse,
  QueriesCreateOrUpdateOptionalParams,
  QueriesCreateOrUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Queries. */
export interface Queries {
  /**
   * Gets all queries.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    options?: QueriesListOptionalParams
  ): PagedAsyncIterableIterator<Query>;
  /**
   * Gets a query
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param queryId Query Id
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    queryId: string,
    options?: QueriesGetOptionalParams
  ): Promise<QueriesGetResponse>;
  /**
   * Delete a query.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param queryId Query Id
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    workspaceName: string,
    queryId: string,
    options?: QueriesDeleteOptionalParams
  ): Promise<QueriesDeleteResponse>;
  /**
   * Create or update a query.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param queryId Query Id
   * @param query The Query
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    queryId: string,
    query: Query,
    options?: QueriesCreateOrUpdateOptionalParams
  ): Promise<QueriesCreateOrUpdateResponse>;
}
