/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/graphQueryMappers";
import * as Parameters from "../models/parameters";
import { ResourceGraphClientContext } from "../resourceGraphClientContext";

/** Class representing a GraphQuery. */
export class GraphQuery {
  private readonly client: ResourceGraphClientContext;

  /**
   * Create a GraphQuery.
   * @param {ResourceGraphClientContext} client Reference to the service client.
   */
  constructor(client: ResourceGraphClientContext) {
    this.client = client;
  }

  /**
   * Get all graph queries defined within a specified subscription and resource group.
   * @param resourceGroupName The name of the resource group.
   * @param [options] The optional parameters
   * @returns Promise<Models.GraphQueryListResponse>
   */
  list(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.GraphQueryListResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param callback The callback
   */
  list(resourceGroupName: string, callback: msRest.ServiceCallback<Models.GraphQueryListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GraphQueryListResult>): void;
  list(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GraphQueryListResult>, callback?: msRest.ServiceCallback<Models.GraphQueryListResult>): Promise<Models.GraphQueryListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.GraphQueryListResponse>;
  }

  /**
   * Get a single graph query by its resourceName.
   * @param resourceGroupName The name of the resource group.
   * @param resourceName The name of the Graph Query resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.GraphQueryGetResponse>
   */
  get(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.GraphQueryGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param resourceName The name of the Graph Query resource.
   * @param callback The callback
   */
  get(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.GraphQueryResource>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param resourceName The name of the Graph Query resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GraphQueryResource>): void;
  get(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GraphQueryResource>, callback?: msRest.ServiceCallback<Models.GraphQueryResource>): Promise<Models.GraphQueryGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.GraphQueryGetResponse>;
  }

  /**
   * Delete a graph query.
   * @param resourceGroupName The name of the resource group.
   * @param resourceName The name of the Graph Query resource.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param resourceName The name of the Graph Query resource.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param resourceName The name of the Graph Query resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * Create a new graph query.
   * @param resourceGroupName The name of the resource group.
   * @param resourceName The name of the Graph Query resource.
   * @param properties Properties that need to be specified to create a new graph query.
   * @param [options] The optional parameters
   * @returns Promise<Models.GraphQueryCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, resourceName: string, properties: Models.GraphQueryResource, options?: msRest.RequestOptionsBase): Promise<Models.GraphQueryCreateOrUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param resourceName The name of the Graph Query resource.
   * @param properties Properties that need to be specified to create a new graph query.
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, resourceName: string, properties: Models.GraphQueryResource, callback: msRest.ServiceCallback<Models.GraphQueryResource>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param resourceName The name of the Graph Query resource.
   * @param properties Properties that need to be specified to create a new graph query.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, resourceName: string, properties: Models.GraphQueryResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GraphQueryResource>): void;
  createOrUpdate(resourceGroupName: string, resourceName: string, properties: Models.GraphQueryResource, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GraphQueryResource>, callback?: msRest.ServiceCallback<Models.GraphQueryResource>): Promise<Models.GraphQueryCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceName,
        properties,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.GraphQueryCreateOrUpdateResponse>;
  }

  /**
   * Updates a graph query that has already been added.
   * @param resourceGroupName The name of the resource group.
   * @param resourceName The name of the Graph Query resource.
   * @param body Properties that need to be specified to create a new graph query.
   * @param [options] The optional parameters
   * @returns Promise<Models.GraphQueryUpdateResponse>
   */
  update(resourceGroupName: string, resourceName: string, body: Models.GraphQueryUpdateParameters, options?: msRest.RequestOptionsBase): Promise<Models.GraphQueryUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param resourceName The name of the Graph Query resource.
   * @param body Properties that need to be specified to create a new graph query.
   * @param callback The callback
   */
  update(resourceGroupName: string, resourceName: string, body: Models.GraphQueryUpdateParameters, callback: msRest.ServiceCallback<Models.GraphQueryResource>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param resourceName The name of the Graph Query resource.
   * @param body Properties that need to be specified to create a new graph query.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, resourceName: string, body: Models.GraphQueryUpdateParameters, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GraphQueryResource>): void;
  update(resourceGroupName: string, resourceName: string, body: Models.GraphQueryUpdateParameters, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GraphQueryResource>, callback?: msRest.ServiceCallback<Models.GraphQueryResource>): Promise<Models.GraphQueryUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceName,
        body,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.GraphQueryUpdateResponse>;
  }

  /**
   * Get all graph queries defined within a specified subscription and resource group.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.GraphQueryListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.GraphQueryListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.GraphQueryListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GraphQueryListResult>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GraphQueryListResult>, callback?: msRest.ServiceCallback<Models.GraphQueryListResult>): Promise<Models.GraphQueryListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.GraphQueryListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceGraph/queries",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.GraphQueryListResult
    },
    default: {
      bodyMapper: Mappers.GraphQueryError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceGraph/queries/{resourceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceName
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.GraphQueryResource
    },
    default: {
      bodyMapper: Mappers.GraphQueryError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceGraph/queries/{resourceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceName
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.GraphQueryError
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceGraph/queries/{resourceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceName
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "properties",
    mapper: {
      ...Mappers.GraphQueryResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.GraphQueryResource
    },
    default: {
      bodyMapper: Mappers.GraphQueryError
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceGraph/queries/{resourceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceName
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "body",
    mapper: {
      ...Mappers.GraphQueryUpdateParameters,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.GraphQueryResource
    },
    default: {
      bodyMapper: Mappers.GraphQueryError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.GraphQueryListResult
    },
    default: {
      bodyMapper: Mappers.GraphQueryError
    }
  },
  serializer
};
