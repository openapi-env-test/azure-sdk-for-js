/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/resourcesMappers";
import * as Parameters from "../models/parameters";
import { ResourceGraphClientContext } from "../resourceGraphClientContext";

/** Class representing a Resources. */
export class Resources {
  private readonly client: ResourceGraphClientContext;

  /**
   * Create a Resources.
   * @param {ResourceGraphClientContext} client Reference to the service client.
   */
  constructor(client: ResourceGraphClientContext) {
    this.client = client;
  }

  /**
   * Queries the resources managed by Azure Resource Manager for all subscriptions specified in the
   * request.
   * @param queryParameter Request specifying query and its options.
   * @param [options] The optional parameters
   * @returns Promise<Models.ResourcesQueryResponse>
   */
  query(queryParameter: Models.QueryRequest, options?: msRest.RequestOptionsBase): Promise<Models.ResourcesQueryResponse>;
  /**
   * @param queryParameter Request specifying query and its options.
   * @param callback The callback
   */
  query(queryParameter: Models.QueryRequest, callback: msRest.ServiceCallback<Models.QueryResponse>): void;
  /**
   * @param queryParameter Request specifying query and its options.
   * @param options The optional parameters
   * @param callback The callback
   */
  query(queryParameter: Models.QueryRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.QueryResponse>): void;
  query(queryParameter: Models.QueryRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.QueryResponse>, callback?: msRest.ServiceCallback<Models.QueryResponse>): Promise<Models.ResourcesQueryResponse> {
    return this.client.sendOperationRequest(
      {
        queryParameter,
        options
      },
      queryOperationSpec,
      callback) as Promise<Models.ResourcesQueryResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const queryOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "providers/Microsoft.ResourceGraph/resources",
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "queryParameter",
    mapper: {
      ...Mappers.QueryRequest,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.QueryResponse
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
