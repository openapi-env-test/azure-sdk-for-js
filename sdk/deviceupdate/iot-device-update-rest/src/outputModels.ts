// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

export interface UpdateOutput {
  /** Update identity. */
  updateId: UpdateIdOutput;
  /** Update type. */
  updateType: string;
  /** String interpreted by Device Update client to determine if the update is installed on the device. */
  installedCriteria: string;
  /** List of update compatibility information. */
  compatibility: Array<CompatibilityOutput>;
  /** Schema version of manifest used to import the update. */
  manifestVersion: string;
  /** Date and time in UTC when the update was imported. */
  importedDateTime: string;
  /** Date and time in UTC when the update was created. */
  createdDateTime: string;
  /** Update ETag. */
  etag?: string;
}

export interface UpdateIdOutput {
  /** Update provider. */
  provider: string;
  /** Update name. */
  name: string;
  /** Update version. */
  version: string;
}

export interface CompatibilityOutput {
  /** The manufacturer of device the update is compatible with. */
  deviceManufacturer: string;
  /** The model of device the update is compatible with. */
  deviceModel: string;
}

export interface PageableListOfStringsOutput {
  /** The collection of pageable items. */
  value?: Array<string>;
  /** The link to the next page of items. */
  nextLink?: string;
}

export interface FileOutput {
  /** File identity, generated by server at import time. */
  fileId: string;
  /** File name. */
  fileName: string;
  /** File size in number of bytes. */
  sizeInBytes: number;
  /** Mapping of hashing algorithm to base64 encoded hash values. */
  hashes: Record<string, string>;
  /** File MIME type. */
  mimeType?: string;
  /** File ETag. */
  etag?: string;
}

export interface PageableListOfOperationsOutput {
  /** The collection of pageable items. */
  value?: Array<OperationOutput>;
  /** The link to the next page of items. */
  nextLink?: string;
}

export interface OperationOutput {
  /** Operation Id. */
  operationId: string;
  /** Operation status. */
  status: "Undefined" | "NotStarted" | "Running" | "Succeeded" | "Failed";
  /** The identity of update being imported or deleted. For import, this property will only be populated after import manifest is processed successfully. */
  updateId?: UpdateIdOutput;
  /** Location of the imported update when operation is successful. */
  resourceLocation?: string;
  /** Operation error encountered, if any. */
  error?: ErrorModelOutput;
  /** Operation correlation identity that can used by Microsoft Support for troubleshooting. */
  traceId?: string;
  /** Date and time in UTC when the operation status was last updated. */
  lastActionDateTime: string;
  /** Date and time in UTC when the operation was created. */
  createdDateTime: string;
  /** Operation ETag. */
  etag?: string;
}

export interface ErrorModelOutput {
  /** Server defined error code. */
  code: string;
  /** A human-readable representation of the error. */
  message: string;
  /** The target of the error. */
  target?: string;
  /** An array of errors that led to the reported error. */
  details?: Array<ErrorModelOutput>;
  /** An object containing more specific information than the current object about the error. */
  innererror?: InnerErrorOutput;
  /** Date and time in UTC when the error occurred. */
  occurredDateTime?: string;
}

export interface InnerErrorOutput {
  /** A more specific error code than what was provided by the containing error. */
  code: string;
  /** A human-readable representation of the error. */
  message?: string;
  /** The internal error or exception message. */
  errorDetail?: string;
  /** An object containing more specific information than the current object about the error. */
  innerError?: InnerErrorOutput;
}

export interface PageableListOfDeviceClassesOutput {
  /** The collection of pageable items. */
  value?: Array<DeviceClassOutput>;
  /** The link to the next page of items. */
  nextLink?: string;
}

export interface DeviceClassOutput {
  /** The device class identifier. */
  deviceClassId: string;
  /** Device manufacturer */
  manufacturer: string;
  /** Device model. */
  model: string;
  /** Update identity. */
  bestCompatibleUpdateId: UpdateIdOutput;
}

export interface PageableListOfUpdateIdsOutput {
  /** The collection of pageable items. */
  value?: Array<UpdateIdOutput>;
  /** The link to the next page of items. */
  nextLink?: string;
}

export interface PageableListOfDevicesOutput {
  /** The collection of pageable items. */
  value?: Array<DeviceOutput>;
  /** The link to the next page of items. */
  nextLink?: string;
}

export interface DeviceOutput {
  /** Device identity. */
  deviceId: string;
  /** Device class identity. */
  deviceClassId: string;
  /** Device manufacturer. */
  manufacturer: string;
  /** Device model. */
  model: string;
  /** Device group identity. */
  groupId?: string;
  /** Update identity. */
  lastAttemptedUpdateId?: UpdateIdOutput;
  /** State of the device in its last deployment. */
  deploymentStatus?:
    | "Succeeded"
    | "InProgress"
    | "Failed"
    | "Canceled"
    | "Incompatible";
  /** Update identity. */
  installedUpdateId?: UpdateIdOutput;
  /** Boolean flag indicating whether the latest update is installed on the device */
  onLatestUpdate: boolean;
  /** The deployment identifier for the last deployment to the device */
  lastDeploymentId?: string;
}

export interface UpdateComplianceOutput {
  /** Total number of devices. */
  totalDeviceCount: number;
  /** Number of devices on the latest update. */
  onLatestUpdateDeviceCount: number;
  /** Number of devices with a newer update available. */
  newUpdatesAvailableDeviceCount: number;
  /** Number of devices with update in-progress. */
  updatesInProgressDeviceCount: number;
}

export interface PageableListOfDeviceTagsOutput {
  /** The collection of pageable items. */
  value?: Array<DeviceTagOutput>;
  /** The link to the next page of items. */
  nextLink?: string;
}

export interface DeviceTagOutput {
  /** Tag name. */
  tagName: string;
  /** Number of devices with this tag. */
  deviceCount: number;
}

export interface PageableListOfGroupsOutput {
  /** The collection of pageable items. */
  value?: Array<GroupOutput>;
  /** The link to the next page of items. */
  nextLink?: string;
}

export interface GroupOutput {
  /** Group identity. */
  groupId: string;
  /** Group type. */
  groupType: "IoTHubTag";
  /** IoT Hub tags. */
  tags: Array<string>;
  /** Date and time when the update was created. */
  createdDateTime: string;
  /** The number of devices in the group. */
  deviceCount?: number;
}

export interface PageableListOfUpdatableDevicesOutput {
  /** The collection of pageable items. */
  value?: Array<UpdatableDevicesOutput>;
  /** The link to the next page of items. */
  nextLink?: string;
}

export interface UpdatableDevicesOutput {
  /** Update identity. */
  updateId: UpdateIdOutput;
  /** Total number of devices for which the update is applicable. */
  deviceCount: number;
}

export interface PageableListOfDeploymentsOutput {
  /** The collection of pageable items. */
  value?: Array<DeploymentOutput>;
  /** The link to the next page of items. */
  nextLink?: string;
}

export interface DeploymentOutput {
  /** Gets or sets the deployment identifier. */
  deploymentId: string;
  /** Gets or sets the deployment type. */
  deploymentType: "Complete" | "Download" | "Install";
  /** Gets or sets the device class identifier. */
  deviceClassId?: string;
  /** Gets or sets the Deployment start datetime. */
  startDateTime: string;
  /** Gets or sets the device group type. */
  deviceGroupType: "All" | "Devices" | "DeviceGroupDefinitions";
  /** Gets or sets the device group definition. */
  deviceGroupDefinition: Array<string>;
  /** Update identity. */
  updateId: UpdateIdOutput;
  /** Boolean flag indicating whether the deployment was canceled. */
  isCanceled?: boolean;
  /** Boolean flag indicating whether the deployment has been retried. */
  isRetried?: boolean;
  /** Boolean flag indicating whether the deployment was completed. */
  isCompleted?: boolean;
}

export interface DeploymentStatusOutput {
  /** Gets or sets the state of the deployment. */
  deploymentState: "Active" | "Superseded" | "Canceled";
  /** Gets or sets the total number of devices in the deployment. */
  totalDevices?: number;
  /** Gets or sets the number of incompatible devices in the deployment. */
  devicesIncompatibleCount?: number;
  /** Gets or sets the number of devices that are currently in deployment. */
  devicesInProgressCount?: number;
  /** Gets or sets the number of devices that have completed deployment with a failure. */
  devicesCompletedFailedCount?: number;
  /** Gets or sets the number of devices which have successfully completed deployment. */
  devicesCompletedSucceededCount?: number;
  /** Gets or sets the number of devices which have had their deployment canceled. */
  devicesCanceledCount?: number;
}

export interface PageableListOfDeploymentDeviceStatesOutput {
  /** The collection of pageable items. */
  value?: Array<DeploymentDeviceStateOutput>;
  /** The link to the next page of items. */
  nextLink?: string;
}

export interface DeploymentDeviceStateOutput {
  /** Device identity. */
  deviceId: string;
  /** The number of times this deployment has been retried on this device. */
  retryCount: number;
  /** Boolean flag indicating whether this device is in a newer deployment and can no longer retry this deployment. */
  movedOnToNewDeployment: boolean;
  /** Deployment device state. */
  deviceState:
    | "Succeeded"
    | "InProgress"
    | "Failed"
    | "Canceled"
    | "Incompatible";
}
